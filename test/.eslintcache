[{"D:\\wanxiang\\ACDE\\frontend\\src\\plugins\\axios.js":"1","D:\\wanxiang\\ACDE\\frontend\\src\\pages\\newset\\nacos\\product.js":"2","D:\\wanxiang\\ACDE\\frontend\\src\\pages\\newset\\narcosIndex.js":"3","D:\\wanxiang\\ACDE\\frontend\\src\\pages\\newset\\indexNew.js":"4","D:\\wanxiang\\ACDE\\frontend\\src\\action\\menuSaga.js":"5","D:\\wanxiang\\ACDE\\frontend\\src\\pages\\newset\\detail\\codeDiff.js":"6","D:\\wanxiang\\ACDE\\frontend\\src\\pages\\releaseManager\\components\\releaseHistory.js":"7","D:\\wanxiang\\ACDE\\frontend\\src\\action\\menu.js":"8","D:\\wanxiang\\ACDE\\frontend\\src\\pages\\newset\\configmap\\product.js":"9","D:\\wanxiang\\ACDE\\frontend\\src\\pages\\releaseManager\\components\\creatRelease.js":"10","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\setupProxy.js":"11","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\routes\\config.js":"12","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\HomePage.js":"13","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\components\\leftMenu\\menu.js":"14","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\formsGroup\\ScanForm.js":"15","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\routes\\index.js":"16","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\[id].js":"17","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\pielog\\index.js":"18","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\formsGroup\\CodeForm.js":"19","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\formsGroup\\BuildForm.js":"20","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\formsGroup\\PublishForm.js":"21","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\App.js":"22","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\_404Page.js":"23","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\action\\user.js":"24","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\action\\loginSaga.js":"25","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\index.js":"26","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\index.js":"27","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\plugins\\axios.js":"28","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\action\\menu.js":"29","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\static\\js\\flexible.js":"30","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\action\\menuSaga.js":"31","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\routes\\menu.js":"32","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\store\\loginReducer.js":"33","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\components\\loading\\index.js":"34","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\createhistoryLog\\[fake].js":"35","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\service\\pipeline.js":"36","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\service\\server.js":"37","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\store\\menuReducer.js":"38","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\store\\index.js":"39","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\action\\rootSaga.js":"40","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\LogcodeMirror\\index.js":"41","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\utils\\titleConfig.js":"42","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\project\\index.js":"43","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\breadNav.js":"44","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\service\\project.js":"45","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\project\\components\\setting.js":"46","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\project\\components\\log.js":"47","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\project\\components\\CodeHighLight\\CodeHighLight.js":"48","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\release\\index.js":"49","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\release\\synchronization.js":"50","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\service\\release.js":"51","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\main.js":"52","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\overview\\index.js":"53","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\overview\\colors.js":"54","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\overview\\options.js":"55","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\index.js":"56","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\configMap.js":"57","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\nacos.js":"58","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\nginx.js":"59","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\service\\config.js":"60","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\components\\seeting.js":"61","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\components\\deploy.js":"62","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\nacoscomponents\\deploy.js":"63","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\nacoscomponents\\seeting.js":"64","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\codediff\\codeDiff.js":"65","D:\\wanxiang\\sql_plat\\src\\App.js":"66","D:\\wanxiang\\sql_plat\\src\\routes\\menu.js":"67","D:\\wanxiang\\sql_plat\\src\\routes\\index.js":"68","D:\\wanxiang\\sql_plat\\src\\routes\\config.js":"69","D:\\wanxiang\\sql_plat\\src\\pages\\HomePage.js":"70","D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\instancelist.js":"71","D:\\wanxiang\\sql_plat\\src\\components\\leftMenu\\menu.js":"72","D:\\wanxiang\\sql_plat\\src\\plugins\\axios.js":"73","D:\\wanxiang\\sql_plat\\src\\components\\loading\\index.js":"74","D:\\wanxiang\\sql_plat\\src\\action\\menu.js":"75","D:\\wanxiang\\sql_plat\\src\\pages\\sql\\index.js":"76","D:\\wanxiang\\sql_plat\\src\\pages\\sql\\sqlcheck.js":"77","D:\\wanxiang\\sql_plat\\src\\components\\sqlcomponent\\index.js":"78","D:\\wanxiang\\sql_plat\\src\\static\\js\\flexible.js":"79","D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\index.js":"80","D:\\wanxiang\\sql_plat\\src\\pages\\breadNav.js":"81","D:\\wanxiang\\sql_plat\\src\\index.js":"82","D:\\wanxiang\\sql_plat\\src\\store\\menuReducer.js":"83","D:\\wanxiang\\sql_plat\\src\\action\\user.js":"84","D:\\wanxiang\\sql_plat\\src\\pages\\history\\index.js":"85","D:\\wanxiang\\sql_plat\\src\\pages\\history\\checkhistory.js":"86","D:\\wanxiang\\sql_plat\\src\\pages\\history\\carryouthistory.js":"87","D:\\wanxiang\\sql_plat\\src\\setupProxy.js":"88","D:\\wanxiang\\sql_plat\\src\\service\\server.js":"89","D:\\wanxiang\\sql_plat\\src\\main.js":"90","D:\\wanxiang\\sql_plat\\src\\action\\menuSaga.js":"91","D:\\wanxiang\\sql_plat\\src\\service\\instance.js":"92","D:\\wanxiang\\sql_plat\\src\\service\\sqlcheck.js":"93","D:\\wanxiang\\sql_plat\\src\\store\\index.js":"94","D:\\wanxiang\\sql_plat\\src\\pages\\_404Page.js":"95","D:\\wanxiang\\sql_plat\\src\\store\\loginReducer.js":"96","D:\\wanxiang\\sql_plat\\src\\service\\history.js":"97","D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\components\\addInstance.js":"98","D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\components\\contact.js":"99","D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\components\\compare.js":"100","D:\\wanxiang\\sql_plat\\src\\pages\\history\\components\\detail.js":"101","D:\\wanxiang\\sql_plat\\src\\pages\\history\\components\\createTask.js":"102","D:\\wanxiang\\sql_plat\\src\\action\\rootSaga.js":"103","D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\components\\editinstance.js":"104"},{"size":1314,"mtime":1631184371593,"results":"105","hashOfConfig":"106"},{"size":2904,"mtime":1630993383464,"results":"107","hashOfConfig":"106"},{"size":440,"mtime":1630548785574,"results":"108","hashOfConfig":"106"},{"size":404,"mtime":1630549173962,"results":"109","hashOfConfig":"106"},{"size":339,"mtime":1607996913806,"results":"110","hashOfConfig":"106"},{"size":4373,"mtime":1631158966994,"results":"111","hashOfConfig":"106"},{"size":3534,"mtime":1628069357414,"results":"112","hashOfConfig":"106"},{"size":83,"mtime":1607997180207,"results":"113","hashOfConfig":"106"},{"size":2631,"mtime":1634091104915,"results":"114","hashOfConfig":"106"},{"size":13092,"mtime":1634096832855,"results":"115","hashOfConfig":"106"},{"size":869,"mtime":1647851327896,"results":"116","hashOfConfig":"117"},{"size":1627,"mtime":1650524122342,"results":"118","hashOfConfig":"117"},{"size":6569,"mtime":1653979740137,"results":"119","hashOfConfig":"117"},{"size":6376,"mtime":1650524665935,"results":"120","hashOfConfig":"117"},{"size":11070,"mtime":1647927898078,"results":"121","hashOfConfig":"117"},{"size":3537,"mtime":1650524293735,"results":"122","hashOfConfig":"117"},{"size":31901,"mtime":1653560673561,"results":"123","hashOfConfig":"117"},{"size":30702,"mtime":1651822775814,"results":"124","hashOfConfig":"117"},{"size":3082,"mtime":1646993365331,"results":"125","hashOfConfig":"117"},{"size":6569,"mtime":1653560682340,"results":"126","hashOfConfig":"117"},{"size":16895,"mtime":1649404513720,"results":"127","hashOfConfig":"117"},{"size":1390,"mtime":1637652294253,"results":"128","hashOfConfig":"117"},{"size":363,"mtime":1608167852321,"results":"129","hashOfConfig":"117"},{"size":1440,"mtime":1607477089735,"results":"130","hashOfConfig":"117"},{"size":1041,"mtime":1607654945348,"results":"131","hashOfConfig":"117"},{"size":448,"mtime":1637567494310,"results":"132","hashOfConfig":"117"},{"size":24968,"mtime":1651822102571,"results":"133","hashOfConfig":"117"},{"size":1323,"mtime":1648885998095,"results":"134","hashOfConfig":"117"},{"size":83,"mtime":1607997180207,"results":"135","hashOfConfig":"117"},{"size":1235,"mtime":1596282710000,"results":"136","hashOfConfig":"117"},{"size":339,"mtime":1607996913806,"results":"137","hashOfConfig":"117"},{"size":1171,"mtime":1653986414934,"results":"138","hashOfConfig":"117"},{"size":624,"mtime":1622715733722,"results":"139","hashOfConfig":"117"},{"size":447,"mtime":1623726925343,"results":"140","hashOfConfig":"117"},{"size":5840,"mtime":1651050174037,"results":"141","hashOfConfig":"117"},{"size":6586,"mtime":1653558783888,"results":"142","hashOfConfig":"117"},{"size":1595,"mtime":1654079662545,"results":"143","hashOfConfig":"117"},{"size":279,"mtime":1622700919779,"results":"144","hashOfConfig":"117"},{"size":534,"mtime":1607996974578,"results":"145","hashOfConfig":"117"},{"size":192,"mtime":1607996708764,"results":"146","hashOfConfig":"117"},{"size":2224,"mtime":1650940168531,"results":"147","hashOfConfig":"117"},{"size":239,"mtime":1643176450627,"results":"148","hashOfConfig":"117"},{"size":28753,"mtime":1649754663557,"results":"149","hashOfConfig":"117"},{"size":1414,"mtime":1649754673575,"results":"150","hashOfConfig":"117"},{"size":2096,"mtime":1648648524094,"results":"151","hashOfConfig":"117"},{"size":1923,"mtime":1649224097364,"results":"152","hashOfConfig":"117"},{"size":2886,"mtime":1646272058978,"results":"153","hashOfConfig":"117"},{"size":3181,"mtime":1643168105854,"results":"154","hashOfConfig":"117"},{"size":6218,"mtime":1649754798792,"results":"155","hashOfConfig":"117"},{"size":10760,"mtime":1648023112684,"results":"156","hashOfConfig":"117"},{"size":1468,"mtime":1648015315309,"results":"157","hashOfConfig":"117"},{"size":39,"mtime":1610609992777,"results":"158","hashOfConfig":"117"},{"size":20670,"mtime":1654080501683,"results":"159","hashOfConfig":"117"},{"size":920,"mtime":1640763174843,"results":"160","hashOfConfig":"117"},{"size":3034,"mtime":1650369011316,"results":"161","hashOfConfig":"117"},{"size":1151,"mtime":1650524262750,"results":"162","hashOfConfig":"117"},{"size":8697,"mtime":1653986227881,"results":"163","hashOfConfig":"117"},{"size":9442,"mtime":1653980435256,"results":"164","hashOfConfig":"117"},{"size":1327,"mtime":1650524344551,"results":"165","hashOfConfig":"117"},{"size":4662,"mtime":1654081392625,"results":"166","hashOfConfig":"117"},{"size":26083,"mtime":1654502098871,"results":"167","hashOfConfig":"117"},{"size":17168,"mtime":1654509101041,"results":"168","hashOfConfig":"117"},{"size":17846,"mtime":1654509099902,"results":"169","hashOfConfig":"117"},{"size":29537,"mtime":1654502008052,"results":"170","hashOfConfig":"117"},{"size":5148,"mtime":1653560682238,"results":"171","hashOfConfig":"117"},{"size":1390,"mtime":1637652294253,"results":"172","hashOfConfig":"173"},{"size":1165,"mtime":1656408566277,"results":"174","hashOfConfig":"173"},{"size":1535,"mtime":1656408572157,"results":"175","hashOfConfig":"173"},{"size":1075,"mtime":1654592852435,"results":"176","hashOfConfig":"173"},{"size":6647,"mtime":1657605741285,"results":"177","hashOfConfig":"173"},{"size":19234,"mtime":1657605695206,"results":"178","hashOfConfig":"173"},{"size":5870,"mtime":1656408682398,"results":"179","hashOfConfig":"173"},{"size":1315,"mtime":1657525218526,"results":"180","hashOfConfig":"173"},{"size":447,"mtime":1623726925343,"results":"181","hashOfConfig":"173"},{"size":83,"mtime":1607997180207,"results":"182","hashOfConfig":"173"},{"size":369,"mtime":1654592940926,"results":"183","hashOfConfig":"173"},{"size":22785,"mtime":1656661260717,"results":"184","hashOfConfig":"173"},{"size":4743,"mtime":1656659762405,"results":"185","hashOfConfig":"173"},{"size":1235,"mtime":1596282710000,"results":"186","hashOfConfig":"173"},{"size":392,"mtime":1654570608296,"results":"187","hashOfConfig":"173"},{"size":1406,"mtime":1655041355077,"results":"188","hashOfConfig":"173"},{"size":448,"mtime":1637567494310,"results":"189","hashOfConfig":"173"},{"size":279,"mtime":1622700919779,"results":"190","hashOfConfig":"173"},{"size":1440,"mtime":1607477089735,"results":"191","hashOfConfig":"173"},{"size":480,"mtime":1655219593558,"results":"192","hashOfConfig":"173"},{"size":7222,"mtime":1656916204370,"results":"193","hashOfConfig":"173"},{"size":18210,"mtime":1656916195208,"results":"194","hashOfConfig":"173"},{"size":844,"mtime":1655220943384,"results":"195","hashOfConfig":"173"},{"size":1064,"mtime":1656059716536,"results":"196","hashOfConfig":"173"},{"size":39,"mtime":1610609992777,"results":"197","hashOfConfig":"173"},{"size":339,"mtime":1607996913806,"results":"198","hashOfConfig":"173"},{"size":2577,"mtime":1657523168273,"results":"199","hashOfConfig":"173"},{"size":1971,"mtime":1655971593667,"results":"200","hashOfConfig":"173"},{"size":534,"mtime":1607996974578,"results":"201","hashOfConfig":"173"},{"size":363,"mtime":1608167852321,"results":"202","hashOfConfig":"173"},{"size":624,"mtime":1622715733722,"results":"203","hashOfConfig":"173"},{"size":1912,"mtime":1656661192857,"results":"204","hashOfConfig":"173"},{"size":4329,"mtime":1656560384790,"results":"205","hashOfConfig":"173"},{"size":6333,"mtime":1655890056471,"results":"206","hashOfConfig":"173"},{"size":11156,"mtime":1656658271646,"results":"207","hashOfConfig":"173"},{"size":6547,"mtime":1656037780020,"results":"208","hashOfConfig":"173"},{"size":12587,"mtime":1656660414097,"results":"209","hashOfConfig":"173"},{"size":192,"mtime":1607996708764,"results":"210","hashOfConfig":"173"},{"size":2597,"mtime":1657523420154,"results":"211","hashOfConfig":"173"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fk241c",{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"234"},"zevr3e",{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"243"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"251"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"243"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"243"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"272"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"287"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"251"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"268"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"243"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"332"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"279"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"243"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"342"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"315"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"323"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"353"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"315"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"315"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"315"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"243"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"243"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"380","messages":"381","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"386"},"5dpox2",{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"400"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"405"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"411"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"415"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"386"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"415"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"436"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"439","messages":"440","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"400"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"450"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"400"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"386"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"468","messages":"469","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"470","messages":"471","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"472","messages":"473","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"400"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478"},"D:\\wanxiang\\ACDE\\frontend\\src\\plugins\\axios.js",["479","480","481"],"D:\\wanxiang\\ACDE\\frontend\\src\\pages\\newset\\nacos\\product.js",["482","483","484","485"],"D:\\wanxiang\\ACDE\\frontend\\src\\pages\\newset\\narcosIndex.js",[],"D:\\wanxiang\\ACDE\\frontend\\src\\pages\\newset\\indexNew.js",[],"D:\\wanxiang\\ACDE\\frontend\\src\\action\\menuSaga.js",["486","487","488"],"D:\\wanxiang\\ACDE\\frontend\\src\\pages\\newset\\detail\\codeDiff.js",["489","490","491","492","493"],"D:\\wanxiang\\ACDE\\frontend\\src\\pages\\releaseManager\\components\\releaseHistory.js",["494","495","496","497","498","499","500"],"D:\\wanxiang\\ACDE\\frontend\\src\\action\\menu.js",[],"D:\\wanxiang\\ACDE\\frontend\\src\\pages\\newset\\configmap\\product.js",["501","502","503","504"],"D:\\wanxiang\\ACDE\\frontend\\src\\pages\\releaseManager\\components\\creatRelease.js",["505","506","507","508"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\setupProxy.js",[],["509","510"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\routes\\config.js",[],["511","512"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\HomePage.js",["513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\components\\leftMenu\\menu.js",["541","542"],"// 注意这里我们除了从antd中引入了Layout布局组件，还引入了Menu菜单组件，Icon图标组件\r\n\r\nimport { Component } from 'react';\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport { Layout, Menu ,message} from 'antd';\r\nimport {addMenuTitle} from '../../action/menu'\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'react-fontawesome';\r\nimport menulist from '../../routes/menu.js'\r\n// import {getTreeList} from '../../service/server.js';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default withRouter(\r\n  connect(\r\n    ({menu}) => ({menu}),\r\n    {\r\n      addMenuTitle\r\n    }\r\n  )(\r\n    class Menulayout extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      console.log('props---menu',props)\r\n      this.state = {\r\n        collapsed: false,\r\n        menus: [],\r\n        openKey: ['sub_sub1'],\r\n        currentTitle: '',\r\n        rootSubmenuKeys:[]\r\n      }\r\n    }\r\n    \r\n    onCollapse = collapsed => {\r\n      console.log(collapsed);\r\n      this.setState({ collapsed });\r\n    };\r\n    tabDash = (item, key, keyPath, domEvent )=>{\r\n    }\r\n    getmenu(){\r\n      this.setState({menus: menulist})\r\n\r\n      localStorage.setItem('roles', '管理员')\r\n      localStorage.setItem('adminId', 222)\r\n    }\r\n    routerTo =(path,title)=>{\r\n      this.props.history.push({pathname: path, state: {title:title}})\r\n      \r\n    } \r\n    componentDidMount() {\r\n      this.getmenu();\r\n      \r\n    }\r\n    // 当点击菜单时切换路由，如果当前组件是路由组件，可以直接调用 props 中的 history 对象，如果当前组件非路由组件，需要调用 withRouter 函数，传入当前组件，组件中就可以访问 history 对象了，当前示例 withRouter 函数的调用在代码最后\r\n    handleChangeMenu = ({key}) => {\r\n     console.log('key--menu',key)\r\n      this.props.history.push(key);\r\n    };\r\n\r\n    // 设置了默认的 openKey 后，手动点击展开关闭菜单功能失效，需要绑定 openChange 函数，动态设置 openKey\r\n    handleOpenChange = (keys) => {\r\n      console.log('handleOpenChange',keys)\r\n       const latestOpenKey = keys.find(key => this.state.openKey.indexOf(key) === -1);\r\n        if (this.state.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n         this.setState({openKey: keys})\r\n        } else {\r\n            if(latestOpenKey){\r\n                this.setState({openKey: [latestOpenKey]})\r\n            } else {\r\n              this.setState({openKey: []})\r\n            }\r\n       }\r\n    };\r\n\r\n    // 利用 createMenuListMap 的递归调用实现菜单的动态创建，当 menuList 值改变时，菜单也会动态改变，可以将此方法声明成单独的组件，传值 list，并返回 JSX 节点列表\r\n    createMenuListMap = (list) => {\r\n      return list.map((item) => {\r\n        if(item.children && item.children.length>0) {\r\n          // 如果当前循环到的菜单项有 children，那就返回 SubMenu，否则返回的直接是 Menu.Item\r\n          const path = this.props.location.pathname;\r\n          const res = item.children.find(child => path.indexOf(child.name) >= 0);\r\n          // if(res) this.openKey = item.name;\r\n        \r\n          return (\r\n            <SubMenu\r\n              key={`sub_${item.id}`}\r\n              icon={<i className={`myfont ${item.icon} ant-menu-item-icon`} style={{marginRight: '10px'}}></i>}\r\n              title={item.title}\r\n            >\r\n              {\r\n                // 根据当前菜单的 children 去生成其子菜单，由于菜单项 menuList 是个有终结的数据，且嵌套层数并不复杂，所以这里不用担心递归会造成栈溢出的问题\r\n                this.createMenuListMap(item.children)\r\n              }\r\n            </SubMenu>\r\n          );\r\n        } else {\r\n         \r\n          return (\r\n            <Menu.Item \r\n              key={item.name} \r\n              icon={<i className={`myfont ${item.icon}`} style={{marginRight: '10px'}}></i>} \r\n            >\r\n              <Link\r\n              to={{ \r\n                pathname: item.name,\r\n                state:{title: item.title}\r\n               }}>\r\n                {/* <item.icon /> */}\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        }\r\n      });\r\n    };\r\n\r\n    render() {\r\n      const { collapsed } = this.state;\r\n      let name = this.props.pathname;\r\n      let currentSelect =\"\"\r\n      if(\r\n        name.indexOf('/flowcreatehistoryLog')>=0 || \r\n        name.indexOf('/flowaction')>=0 ||\r\n        name.indexOf('/detail')>=0 ||\r\n        name.indexOf('/flow')>=0\r\n        ){\r\n          currentSelect =\"/flow\"\r\n          document.title = \"流水线\"\r\n       }\r\n       if(name.indexOf('/project')>=0){\r\n          currentSelect =\"/project\"\r\n          document.title = \"应用管理\"\r\n       }\r\n       if(name.indexOf('/release')>=0){\r\n          currentSelect =\"/release\"\r\n          document.title = \"同步管理\"\r\n       }\r\n       if(name.indexOf('/overview')>=0){\r\n        currentSelect =\"/overview\"\r\n        document.title = \"总览\"\r\n     }\r\n     if(name.indexOf('/configmanagement/nacos')>=0){\r\n        currentSelect =\"/configmanagement/nacos\"\r\n        document.title = \"nacos\"\r\n      }\r\n      if(name.indexOf('/configmanagement/configMap')>=0){\r\n          currentSelect =\"/configmanagement/configMap\"\r\n          document.title = \"configMap\"\r\n      }\r\n      if(name.indexOf('/configmanagement/nginx')>=0){\r\n        currentSelect =\"/configmanagement/nginx\"\r\n        document.title = \"nginx\"\r\n      }\r\n      // let obj = sessionStorage.getItem('setConfObj')?JSON.parse(sessionStorage.getItem('setConfObj')):{} \r\n    \r\n      return (\r\n            <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n              <Menu \r\n                theme=\"light\" \r\n                defaultSelectedKeys={['/flow']}\r\n                // onClick={this.handleChangeMenu}\r\n                selectedKeys={[currentSelect]}\r\n                onOpenChange={this.handleOpenChange}\r\n                openKeys={this.state.openKey}\r\n                mode=\"inline\"\r\n              >\r\n              {\r\n                // 获取并渲染动态的菜单内容\r\n                this.createMenuListMap(this.state.menus)\r\n              }\r\n              </Menu>\r\n            </Sider>\r\n      );\r\n    }\r\n  }\r\n)\r\n)",["543","544"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\formsGroup\\ScanForm.js",["545","546","547","548","549","550","551","552"],"import React, { useEffect ,useState} from 'react';\r\nimport { Form, Input, Button, Select ,Space, Menu, Dropdown } from 'antd';\r\nimport {PlusCircleTwoTone ,PlusOutlined ,MinusCircleOutlined } from '@ant-design/icons'\r\nimport '../../../css/index.less'\r\nconst { Option } = Select;\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n  const ScanForm = (props) => {\r\n    const [form] = Form.useForm();\r\n    const [formFeishu] = Form.useForm();\r\n    const [formEmail] = Form.useForm();\r\n    const [plugintype,setplugintype] = useState('')\r\n    const [showfeishu,setShowfeishu] = useState(false)\r\n    const [showEmail,setShowEmail] = useState(false)\r\n\r\n    const onDelete = () => {\r\n        //   form.resetFields();\r\n     props.deleteSteps(props.currentNode)\r\n    };\r\n   const saveData = async()=>{\r\n      await form.validateFields()\r\n      let values = {...form.getFieldsValue()};\r\n      let feishua = formFeishu && formFeishu.getFieldsValue();\r\n      let email = formEmail && formEmail.getFieldsValue();\r\n      console.log('values',values)\r\n      console.log('feishua',feishua)\r\n      console.log('email',email)\r\n      let is_alarm = false\r\n      let alarm_type = [];\r\n      let _emails = []\r\n      let _feishus = []\r\n     if(formFeishu || formEmail){\r\n        if(feishua.alarm_type && feishua.alarm_type.length>0){\r\n            is_alarm = true\r\n            alarm_type.push('feishu')\r\n            _feishus = feishua.alarm_type\r\n        }\r\n        if(email.alarm_type && email.alarm_type.length>0){\r\n            is_alarm = true\r\n            alarm_type.push('email')\r\n            _emails = email.alarm_type\r\n        }\r\n     }\r\n     let obj = {\r\n        step_name: values.step_name,\r\n        step_type: \"scan\",\r\n        flag: \"scan\",\r\n        code_language: values.code_language,\r\n        code_version: values.code_version,\r\n        skip: false,\r\n        auto_run: false,\r\n        is_alarm: is_alarm\r\n        // alarm_type: is_alarm && alarm_type.join(','),\r\n        // email: _emails && _emails.join(','),\r\n        // feishua: _feishus && _feishus.join(',')\r\n      }\r\n      props.receiveChildValues(obj)\r\n   }\r\n    const initForm = () => {\r\n      form.setFieldsValue({\r\n        step_name:  props.currentButtonName,\r\n        code_language:  props.nowEditdata.code_language?props.nowEditdata.code_language:\"java\",\r\n        code_version: props.nowEditdata.code_version?props.nowEditdata.code_version:\"jdk1.8\"\r\n      });\r\n      if(props.nowEditdata.is_alarm){//如果传过来的 is_alarm 有消息提醒的话 则显示\r\n            //如果飞书的长度\r\n            if(props.nowEditdata.feishua){\r\n                setShowfeishu(true)\r\n                setTimeout(()=>{\r\n                    formFeishu.setFieldsValue({\r\n                        alarm_type: props.nowEditdata.feishua.split(',')\r\n                    })\r\n                },0)\r\n            }\r\n            // 如果邮件的长度  \r\n            if(props.nowEditdata.email){\r\n                // let formEmail\r\n                setShowEmail(true)\r\n               setTimeout(()=>{\r\n                formEmail.setFieldsValue({\r\n                    alarm_type: props.nowEditdata.email.split(',')\r\n                })\r\n               },0)\r\n            }\r\n\r\n      }\r\n      \r\n    };\r\n    const addNotice = (plugintype)=>{\r\n        setplugintype(plugintype)\r\n        if(plugintype == '1'){\r\n            setShowfeishu(true)\r\n        } else if(plugintype == '2'){\r\n            setShowEmail(true)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if(props.editdrawvisible){\r\n            initForm()\r\n        } else {\r\n            setShowfeishu(false)\r\n            setShowEmail(false)\r\n            formEmail.setFieldsValue({\r\n                alarm_type:  []\r\n            })\r\n            formFeishu.setFieldsValue({\r\n                alarm_type: []\r\n            })\r\n        }\r\n    },[props.editdrawvisible])\r\n    useEffect(()=>{\r\n       if(plugintype){\r\n\r\n       }\r\n    },[plugintype])\r\n    return (\r\n        <div className=\"formbox\">\r\n            <Form {...layout} form={form} name=\"control-hooks\">\r\n                <Form.Item name=\"step_name\" label=\"步骤名称\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                {/* <Form.Item name=\"code_language\" label=\"编译语言\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                            <Option value=\"java\">java</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"code_version\" label=\"java版本\" rules={[{ required: true }]}>\r\n                    <Select>\r\n                            <Option value=\"jdk1.7\">jdk1.7</Option>\r\n                            <Option value=\"jdk1.8\">jdk1.8</Option>\r\n                            <Option value=\"jdk1.9\">jdk1.9</Option>\r\n                            <Option value=\"jdk11\">jdk11</Option>\r\n                    </Select>\r\n                </Form.Item> */}\r\n            </Form>\r\n            <Dropdown overlay={\r\n                 <Menu>\r\n                    <Menu.Item key=\"0\" onClick={()=>addNotice(1)}>\r\n                        <span>飞书群通知</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"1\" onClick={()=>addNotice(2)}>\r\n                        <span>邮件通知</span>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            } trigger={['click']}>\r\n                <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                    <PlusCircleTwoTone  /> 添加插件 \r\n                </a>\r\n            </Dropdown>\r\n            {\r\n                showfeishu?<Form name=\"dynamic_form_item\" {...layout} form={formFeishu}>\r\n                <Form.List\r\n                    name=\"alarm_type\"\r\n                >\r\n                    {(fields, { add, remove }, { errors }) => (\r\n                    <>\r\n                        {fields.map((field, index) => (\r\n                        <Form.Item\r\n                            label={'飞书群地址'}\r\n                            required={false}\r\n                            key={field.key}\r\n                        >\r\n                            <Form.Item\r\n                            {...field}\r\n                            validateTrigger={['onChange', 'onBlur']}\r\n                            rules={[\r\n                                {\r\n                                required: true,\r\n                                whitespace: true,\r\n                                message: \"此表单为必填项，如不需要 请删除\",\r\n                                },\r\n                                { type: 'url', warningOnly: true, message: \"请输入合法的URL地址\" },\r\n                            ]}\r\n                            noStyle\r\n                            >\r\n                                <Input placeholder=\"飞书群地址链接\" style={{ width: '60%' }} />\r\n                            </Form.Item>\r\n                            <MinusCircleOutlined\r\n                                className=\"dynamic-delete-button\"\r\n                                onClick={() => remove(field.name)}\r\n                            />\r\n                        </Form.Item>\r\n                        ))}\r\n                        <Form.Item  wrapperCol = {{ offset: 8, span: 16 }}>\r\n                            <Button\r\n                                type=\"dashed\"\r\n                                onClick={() => add()}\r\n                               \r\n                                icon={<PlusOutlined />}\r\n                            >\r\n                                添加飞书群地址\r\n                            </Button>\r\n                        <Form.ErrorList errors={errors} />\r\n                        </Form.Item>\r\n                    </>\r\n                    )}\r\n                    </Form.List>\r\n                    {/* <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                        </Button>\r\n                    </Form.Item> */}\r\n                </Form>:null\r\n            }\r\n            {\r\n                showEmail?<Form name=\"dynamic_form_item\" {...layout} form={formEmail}>\r\n                <Form.List\r\n                    name=\"alarm_type\"\r\n                >\r\n                    {(fields, { add, remove }, { errors }) => (\r\n                    <>\r\n                        {fields.map((field, index) => (\r\n                        <Form.Item\r\n                            label={'邮件地址'}\r\n                            required={false}\r\n                            key={field.key}\r\n                        >\r\n                            <Form.Item\r\n                            {...field}\r\n                            validateTrigger={['onChange', 'onBlur']}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    whitespace: true,\r\n                                    message: \"此表单为必填项，如不需要 请删除\",\r\n                                },\r\n                                { type: 'email', warningOnly: true , message: \"请输入合法的邮件地址\"},\r\n                            ]}\r\n                            noStyle\r\n                            >\r\n                                <Input placeholder=\"收件人邮箱地址\" type=\"email\" style={{ width: '60%' }} />\r\n                            </Form.Item>\r\n                            <MinusCircleOutlined\r\n                                className=\"dynamic-delete-button\"\r\n                                onClick={() => remove(field.name)}\r\n                            />\r\n                        </Form.Item>\r\n                        ))}\r\n                        <Form.Item wrapperCol = {{ offset: 8, span: 16 }}>\r\n                            <Button\r\n                                type=\"dashed\"\r\n                                onClick={() => add()}\r\n                                icon={<PlusOutlined />}\r\n                            >\r\n                                添加邮件收件人\r\n                            </Button>\r\n                        <Form.ErrorList errors={errors} />\r\n                        </Form.Item>\r\n                    </>\r\n                    )}\r\n                    </Form.List>\r\n                    {/* <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                        </Button>\r\n                    </Form.Item> */}\r\n                </Form>:null\r\n            }\r\n            <div className=\"footerdiv\">\r\n                <Space>\r\n                    <Button type=\"primary\" onClick={saveData}>\r\n                    保存\r\n                    </Button>\r\n                    <Button htmlType=\"button\" onClick={onDelete}>\r\n                        删除\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default ScanForm;",["553","554"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\routes\\index.js",["555"],"\r\nimport React from \"react\";\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nexport * from './config';\r\nconst routes = [\r\n    {\r\n        path:'/',\r\n        exact: true,\r\n        component:()=>(<Redirect to=\"/overview\" />)\r\n    },\r\n    {\r\n        path:'/',\r\n        component: global.HomePage,\r\n        auth: true,\r\n        children:[\r\n            {\r\n                path:'/overview',\r\n                // auth: true,\r\n                component: global.Overview,\r\n                exact: true,\r\n                name:'总览',\r\n                meta:{\r\n                    title:'总览',\r\n                    key: \"overview\"\r\n                }\r\n            },\r\n            {\r\n                path:'/flow',\r\n                // auth: true,\r\n                component: global.Flow,\r\n                exact: true,\r\n                name:'流水线',\r\n                meta:{\r\n                    title:'流水线',\r\n                    key: \"flow\"\r\n                }\r\n            },\r\n            // {\r\n            //     path:'/createhistoryLog/:id',\r\n            //     exact: true,\r\n            //     name:'流水线记录',\r\n            //     component: global.CreatehistoryLog,\r\n            //     meta:{\r\n            //         title:'流水线记录'\r\n            //     }\r\n            // },\r\n            {\r\n                path:'/flowaction/:id',\r\n                exact: true,\r\n                name:'操作流水线',\r\n                component: global.Createflow,\r\n                meta:{\r\n                    title:'操作流水线',\r\n                    key: \"flow\"\r\n                }\r\n            },\r\n            {\r\n                path: '/flowcreatehistoryLog/:id',\r\n                // component: './detail/[id]',\r\n                component: global.CreatehistoryLogList,\r\n                exact: true,\r\n                name:'流水线记录',\r\n                meta:{\r\n                    title:'流水线记录',\r\n                    key: \"flow\"\r\n                }\r\n            },\r\n            {\r\n                path: '/detail/:id',\r\n                // component: './detail/[id]',\r\n                component: global.CreatehistoryLog,\r\n                exact: true,\r\n                name:'流水线记录详情',\r\n                meta:{\r\n                    title:'流水线记录详情',\r\n                    key: \"flow\"\r\n                }\r\n            },\r\n            {\r\n                path:'/project',\r\n                exact: true,\r\n                name:'应用管理',\r\n                component: global.Projectmanagement,\r\n                meta:{\r\n                    title:'应用管理',\r\n                    key: \"project\"\r\n                }\r\n            },\r\n            {\r\n                path:'/release',\r\n                exact: true,\r\n                name:'同步管理',\r\n                component: global.Releasemanagement,\r\n                meta:{\r\n                    title:'同步管理',\r\n                    key: \"release\"\r\n                }\r\n            },\r\n            {\r\n                path:'/configmanagement',\r\n                // exact: true,\r\n                name:'配置管理',\r\n                component: global.Configmanagement,\r\n                meta:{\r\n                    title:'配置管理',\r\n                    key: \"configmanagement\"\r\n                }\r\n            },\r\n            {\r\n                path:'',\r\n                component:global.notFound\r\n            },\r\n            \r\n        ]\r\n    },\r\n    {\r\n        path:'',\r\n        component:global.notFound\r\n    }\r\n];\r\nexport default routes;\r\n",["556","557"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\[id].js",["558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\pielog\\index.js",["586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624"],"import React, { useEffect, useState } from 'react';\r\nimport {Link,withRouter} from 'react-router-dom'\r\n\r\nimport { Table,Button ,Row, Col,Space,Spin, message,Popover,Tag} from 'antd';\r\nimport {CheckCircleTwoTone,ClockCircleFilled,CloseCircleFilled,ClockCircleTwoTone, RedEnvelopeTwoTone} from '@ant-design/icons'\r\nimport  '../../../css/index.less';\r\nimport {_getPipelineDetail_id,_getscanAndCompilerLog,_getLeftLog,_retryPipeline,_deployPipeline,_Pipelineskip,_getdeployLog,_getscanLog} from '../../../service/pipeline.js'\r\nimport CodemirrorLog from '../LogcodeMirror/index'\r\nexport default withRouter(function Buildslog(props){\r\n   console.log('props.location.pathname',props.location.pathname)\r\n   const [stepData,setstepData] = useState({})\r\n   const [productname,setProductname] = useState(\"\")\r\n   const [showLog,setShowLog]  = useState(false)\r\n   const [logdata,setLogdata] = useState(\"\")\r\n   const [preojectName,setPreojectName] = useState('')\r\n   const [spinning,setSpinning]   = useState(false)\r\n   let pipelinename = props.location.pathname.split('&')[3]; \r\n   const getDetail = async()=>{\r\n        setPreojectName(props.location.pathname.split('&')[0].split('/')[2])\r\n        const res = await _getPipelineDetail_id({\r\n            history_id: props.location.pathname.split('&')[2]\r\n        })\r\n        console.log(res)\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            // let str = \"\"\r\n            // res.data.data.product.map(item=>{\r\n            //     str+=(item+\";\\n\")\r\n            // })\r\n            // setProductname(str)\r\n            setstepData(res.data.data)\r\n            \r\n        } else {\r\n            setstepData({})\r\n        }\r\n   }\r\n   const showDio = async(data)=>{\r\n    console.log(data)\r\n    setSpinning(true)\r\n    let res = null\r\n\r\n    if(data.left){\r\n        res = await _getLeftLog({\r\n            history_id: props.location.pathname.split('&')[2]\r\n        })\r\n        \r\n    } else {\r\n        let params = {}\r\n        if(data.flag == \"scan\"){\r\n            res = await _getscanLog({\r\n                history_id: props.location.pathname.split('&')[2]\r\n            })\r\n        }\r\n        if(data.flag == \"build\"){\r\n        res = await _getscanAndCompilerLog({\r\n                history_id: props.location.pathname.split('&')[2],\r\n                step_type: data.step_type\r\n            })\r\n        \r\n        }\r\n        if(data.flag==\"deploy\"){\r\n        res = await _getdeployLog({\r\n                history_id: props.location.pathname.split('&')[2],\r\n                env: data.env\r\n            })\r\n        }\r\n        \r\n    }\r\n    if( res !== null && res.status == 200 && res.data.Code === 0){\r\n        console.log('logDetail',res)\r\n        setLogdata(res.data.data)\r\n        setShowLog(true)\r\n        setSpinning(false)\r\n    } else {\r\n        setSpinning(false)\r\n    }\r\n    \r\n   }\r\n   const deployPipeline = async(data)=>{\r\n    setSpinning(true)\r\n    const res = await _deployPipeline({\r\n        history_id: props.location.pathname.split('&')[2],\r\n        params: {\r\n            // flag: data.flag,\r\n            env: data.env\r\n        }\r\n    })\r\n    if(res.status == 200 && res.data.Code === 0){\r\n        console.log('logDetail',res)\r\n        getDetail()\r\n        setSpinning(false)\r\n    } else {\r\n        message.error(res.data.Message)\r\n        setSpinning(false)\r\n    }\r\n   }\r\n   const skipPipeline = async(item)=>{\r\n       let params = {\r\n           flag: item.flag,\r\n           params:{\r\n            history_id: props.location.pathname.split('&')[2],\r\n            user: localStorage.getItem('currentUm')\r\n           }\r\n       }\r\n        const res = await _Pipelineskip(params)\r\n        if(res.status == 200 && res.data.Code === 0){\r\n            console.log('skipPipeline',res)\r\n            getDetail()\r\n            setSpinning(false)\r\n        } else {\r\n            message.error(res.data.Message)\r\n            setSpinning(false)\r\n        }\r\n   }\r\n   const retryPipeline = async(data)=>{\r\n    setSpinning(true)\r\n    const res = await _retryPipeline({\r\n        history_id: props.location.pathname.split('&')[2],\r\n        params: {\r\n            flag: data.flag,\r\n            step_type: data.step_type,\r\n            env: data.env\r\n        }\r\n    })\r\n    if(res.status == 200 && res.data.Code === 0){\r\n        console.log('retryPipeline',res)\r\n        getDetail()\r\n        setSpinning(false)\r\n    } else {\r\n        message.error(res.data.Message)\r\n        setSpinning(false)\r\n    }\r\n   }   \r\n   const closeLog = ()=>{\r\n    setShowLog(false)\r\n    setLogdata(\"\")\r\n   }\r\n   useEffect(()=>{\r\n    getDetail()\r\n   },[])\r\n   let id  =( props.location.pathname.split('/')[props.location.pathname.split('/').length-1]).split('&')[1]\r\n    return (\r\n        <Spin spinning={spinning} >\r\n            <div className=\"createhistoryLog\">\r\n                <CodemirrorLog visible={showLog} logdata={logdata} closeLog={closeLog}></CodemirrorLog>\r\n                <div\r\n                    className={'self-title'}\r\n                >\r\n                    <div className={'bread-crumbs'}>\r\n                    <a className={'home'}\r\n                        style={{\r\n                        color: 'rgba(0, 0, 0, 0.45)',\r\n                        }}\r\n                            onClick={()=>props.history.push(`/flow`)}\r\n                    >流水线首页</a>\r\n                    <span\r\n                        style={{\r\n                        marginLeft: '8px',\r\n                        marginRight: '8px',\r\n                        color: 'rgba(0, 0, 0, 0.45)',\r\n                        }}\r\n                    >/</span>\r\n                    <span>\r\n                        <Link \r\n                            to={`/flow?${preojectName}`} \r\n                            style={{\r\n                                color: 'rgba(0, 0, 0, 0.45)',\r\n                            }}>{preojectName}\r\n                        </Link>\r\n                    </span>\r\n                    <span\r\n                        style={{\r\n                        marginLeft: '8px',\r\n                        marginRight: '8px',\r\n                        color: 'rgba(0, 0, 0, 0.45)',\r\n                        }}\r\n                    >/</span>\r\n                    <span>\r\n                        <Link \r\n                            to={`/flowcreatehistoryLog/${id+'&'+ preojectName+'&'+pipelinename}`} \r\n                            style={{\r\n                                color: 'rgba(0, 0, 0, 0.45)',\r\n                            }}>{pipelinename}\r\n                        </Link>\r\n                    </span>\r\n                    <span\r\n                        style={{\r\n                        marginLeft: '8px',\r\n                        marginRight: '8px',\r\n                        color: 'rgba(0, 0, 0, 0.45)',\r\n                        }}\r\n                    >/</span>\r\n                    <span style={{color: \"#52c41a\"}}>{'#'+props.location.pathname.split('&')[2]}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"createhistoryLogBox\" >\r\n                    <div className=\"pipeline-instance_sidebar\">\r\n                        <Row gutter={8}>\r\n                            <Col span={4} style={{color: \"#52c41a\"}}>{'#'+props.location.pathname.split('&')[2]}</Col>\r\n                            <Col span={20} style={{textAlign:'right'}}> \r\n                                <Space>\r\n                                    {\r\n                                        stepData.status == \"SUCCESS\"?\r\n                                        <CheckCircleTwoTone twoToneColor=\"#52c41a\"/>:null\r\n\r\n                                    }\r\n                                    {\r\n                                        stepData.status == \"FAILED\"?\r\n                                        <CloseCircleFilled style={{color:'red'}} />:null\r\n\r\n                                    }\r\n                                    {\r\n                                        stepData.status == \"NOT RUNNING\" || stepData.status == \"\"?\r\n                                        <ClockCircleFilled style={{color:'grey'}}/>:null\r\n\r\n                                    }\r\n                                    {\r\n                                        stepData.status == \"RUNNING\"?\r\n                                        <ClockCircleTwoTone/>:null\r\n                                    }\r\n                                        <span>{stepData.status}</span>\r\n                                </Space>\r\n                        \r\n                            </Col>\r\n                        </Row>\r\n                        <Row >\r\n                            <Col span={8}>开始时间</Col>\r\n                            <Col style={{textAlign:'right',fontSize:'12px',color:'#8c8c8c'}} span={16}> {stepData.created_at}</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={8}>持续时间</Col>\r\n                            <Col style={{textAlign:'right',fontSize:'12px',color:'#8c8c8c'}} span={16}>{stepData.duration}s</Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={8}>产物</Col>\r\n                            <Col style={{fontSize:'12px',color:'#8c8c8c',textAlign:'right'}} span={16}>\r\n                                {\r\n                                    stepData.apps && stepData.apps.length>0 && stepData.apps.map((item,index)=>{\r\n                                        return <Popover\r\n                                        content={(\r\n                                            <div style={{width:'280px'}}>\r\n                                               {\r\n                                                     stepData.dir.length>0 && stepData.image.length == 0?<pre style={{whiteSpace:\"pre-wrap\",lineHeight: \"20px\",wordWrap:\"break-word\"}}>{stepData.dir[index]}</pre>\r\n                                                    :null\r\n                                                }\r\n                                                {\r\n                                                    stepData.image.length>0 && stepData.dir.length == 0?\r\n                                                    <pre style={{whiteSpace:\"pre-wrap\",lineHeight: \"20px\",wordWrap:\"break-word\"}}>{stepData.image[index]}</pre>\r\n                                                    :null\r\n                                                }\r\n                                            </div>\r\n                                        )} \r\n                                        title=\"产物详情\"\r\n                                        >\r\n                                        <div style={{textAlign:\"right\",height:index>0?'26px':'',lineHeight:index>0?\"26px\":''}}>\r\n                                            <Tag color=\"green\" style={{cursor:'pointer',margin:0,whiteSpace:'pre-wrap'}}>{item}</Tag>\r\n                                        </div>\r\n                                    </Popover>\r\n                                    })\r\n                                }\r\n                            \r\n                            </Col>\r\n                        </Row>\r\n                       <Row>\r\n                            <Col span={8}>日志</Col>\r\n                            <Col style={{textAlign:'right',fontSize:'12px',color:'#8c8c8c',wordWrap:\"break-word\"}} span={16}>\r\n                               <Button type=\"link\" size=\"small\" style={{fontSize: '12px'}} onClick={()=> showDio({left: true})}>查看日志</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"pipeline-instance__content\">\r\n                        <div className=\"flow-groups\">\r\n                            {/* <div className=\"flow-group\">\r\n                                <div className=\"toptitle\">扫描</div>\r\n                                <div className=\"stage\">\r\n                                    <div className=\"topline\"></div>\r\n                                    <div className=\"cardheader\">\r\n                                        <CheckCircleTwoTone twoToneColor=\"#52c41a\"/>  java 代码扫描\r\n                                    </div>\r\n                                    <div className=\"cardcenter\">\r\n                                    <div className=\"centerbox\">\r\n                                            <div style={{color:'green'}}>运行成功</div>\r\n                                            <div className=\"centerbottom\">运行结束，请查看日志！</div>\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"cardfooter\">\r\n                                        <div className=\"leftbutton\">\r\n                                            <Button type=\"link\" size=\"small\">重试</Button>\r\n                                            <Button type=\"link\" size=\"small\">日志</Button>\r\n                                        </div>\r\n                                        <div className=\"rightbutton\">\r\n                                            25s\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flow-group\">\r\n                                <div className=\"toptitle\">构建</div>\r\n                                <div className=\"stage\">\r\n                                    <div className=\"topline\"></div>\r\n                                    <div className=\"cardheader\">\r\n                                    < CloseCircleFilled style={{color:'red'}} />  java 代码构建\r\n                                    </div>\r\n                                    <div className=\"cardcenter\">\r\n                                        <div className=\"centerbox\">\r\n                                            <div >运行失败</div>\r\n                                            <div className=\"centerbottom\">运行失败，请查看日志！</div>\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"cardfooter\">\r\n                                        <div className=\"leftbutton\">\r\n                                            <Button type=\"link\" size=\"small\">重试</Button>\r\n                                            <Button type=\"link\" size=\"small\">日志</Button>\r\n                                        </div>\r\n                                        <div className=\"rightbutton\">\r\n                                            25s\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n                            {\r\n                                stepData.step && stepData.step.map((item,index) =>{\r\n                                    return <>\r\n                                                <div className=\"flow-group\" key={index}>\r\n                                                    <div className=\"toptitle\">{item.step_name}</div>\r\n                                                    <div className=\"stage\">\r\n                                                        <div className=\"topline\"></div>\r\n                                                        <div className=\"cardheader\">\r\n                                                            <Space>\r\n                                                                {\r\n                                                                    item.status == \"SUCCESS\"?\r\n                                                                    <CheckCircleTwoTone twoToneColor=\"#52c41a\"/>:null\r\n\r\n                                                                }\r\n                                                                {\r\n                                                                    item.status == \"RUNNING\"?\r\n                                                                    <ClockCircleTwoTone/>:null\r\n                                                                }\r\n                                                                \r\n                                                                {\r\n                                                                    item.status == \"FAILED\"?\r\n                                                                    <CloseCircleFilled style={{color:'red'}} />:null\r\n\r\n                                                                }\r\n                                                                {\r\n                                                                    item.status == \"NOT RUNNING\"?\r\n                                                                    <ClockCircleFilled style={{color:'grey'}}/>:null\r\n\r\n                                                                }\r\n                                                                {\r\n                                                                    item.step_name\r\n                                                                }\r\n                                                            </Space>\r\n                                                        </div>\r\n                                                        <div className=\"cardcenter\">\r\n                                                            <div className=\"centerbox\">\r\n                                                            {\r\n                                                                item.status == \"SUCCESS\"?\r\n                                                                <>\r\n                                                                    <div>运行成功</div>\r\n                                                                    <div className=\"centerbottom\">运行结束，请查看日志！</div>\r\n                                                                </>:null\r\n\r\n                                                            }\r\n                                                            {\r\n                                                                item.status == \"FAILED\"?\r\n                                                                <>\r\n                                                                    <div >运行失败</div>\r\n                                                                    <div className=\"centerbottom\">运行失败，请查看日志！</div>\r\n                                                                </>:null\r\n\r\n                                                            }\r\n                                                            {\r\n                                                                item.status == \"NOT RUNNING\" || item.status == \"\"?\r\n                                                                <div>等待运行</div>:null\r\n\r\n                                                            }\r\n                                                            {\r\n                                                                item.status == \"RUNNING\"?\r\n                                                                <div>正在运行中</div>:null\r\n                                                            }\r\n                                                        </div>\r\n                                                        </div>\r\n                                                        <div className=\"cardfooter\">\r\n                                                            <div className=\"leftbutton\">\r\n                                                                {\r\n                                                                     item.status !== 'NOT RUNNING'?\r\n                                                                        <>\r\n                                                                            {\r\n                                                                                item.status == 'RUNNING'?\r\n                                                                                    <>\r\n                                                                                        {\r\n                                                                                            item.step_type == 'node' ?\r\n                                                                                            <>\r\n                                                                                                <Button type=\"link\" size=\"small\" onClick={()=>skipPipeline(item)}>跳过</Button>\r\n                                                                                                <Button type=\"link\" size=\"small\" onClick={()=> showDio(item)}>日志</Button>\r\n                                                                                            </>\r\n                                                                                            :\r\n                                                                                            <Button type=\"link\" size=\"small\" onClick={()=> showDio(item)}>日志</Button>\r\n                                                                                        }\r\n                                                                                    </>\r\n                                                                                :null\r\n                                                                            }\r\n                                                                            {\r\n                                                                                 item.status == 'SUCCESS'?\r\n                                                                                 <>\r\n                                                                                    {\r\n                                                                                        item.step_type == 'node' || item.step_type == 'k8s' ?\r\n                                                                                        <Button type=\"link\" size=\"small\" onClick={()=>retryPipeline(item)}>重试</Button>\r\n                                                                                        :\r\n                                                                                        <>\r\n                                                                                            <Button type=\"link\" size=\"small\" onClick={()=> showDio(item)}>日志</Button>\r\n                                                                                            <Button type=\"link\" size=\"small\" onClick={()=>retryPipeline(item)}>重试</Button>\r\n                                                                                        </>\r\n                                                                                    }\r\n                                                                                    {\r\n                                                                                        item.sonar_url?\r\n                                                                                        <Link to={{pathname:item.sonar_url}} target=\"_blank\" style={{fontSize: '14px',padding:'0px 7px'}}>详情</Link>\r\n                                                                                        :\r\n                                                                                        null\r\n                                                                                    }\r\n                                                                                    \r\n                                                                                 </>:null\r\n                                                                            }\r\n                                                                            {\r\n                                                                                item.status == 'FAILED'?\r\n                                                                                <>\r\n                                                                                   {\r\n                                                                                       item.flag == 'scan' || item.step_type == 'node' ?\r\n                                                                                       <>\r\n                                                                                           <Button type=\"link\" size=\"small\" onClick={()=>skipPipeline(item)}>跳过</Button>\r\n                                                                                           <Button type=\"link\" size=\"small\" onClick={()=> showDio(item)}>日志</Button>\r\n                                                                                           <Button type=\"link\" size=\"small\" onClick={()=>retryPipeline(item)}>重试</Button>\r\n                                                                                       </>\r\n                                                                                       :\r\n                                                                                       <>\r\n                                                                                        <Button type=\"link\" size=\"small\" onClick={()=> showDio(item)}>日志</Button>\r\n                                                                                        <Button type=\"link\" size=\"small\" onClick={()=>retryPipeline(item)}>重试</Button>\r\n                                                                                       </>\r\n                                                                                       \r\n                                                                                   }\r\n                                                                                </>:null \r\n                                                                            }\r\n                                                                            {\r\n                                                                              \r\n                                                                            }\r\n                                                                        </>\r\n                                                                    :\r\n                                                                    <>\r\n                                                                        {\r\n                                                                            item.flag == 'deploy'?\r\n                                                                            <Button type=\"link\" size=\"small\" onClick={()=>deployPipeline(item)}>发布</Button>\r\n                                                                            :null\r\n                                                                        }\r\n                                                                    </>\r\n                                                                }\r\n                                                            </div>\r\n                                                            <div className=\"rightbutton\">\r\n                                                                {item.time}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='bottombox' style={{width: '100%'}}>\r\n                                                        {\r\n                                                            item.duration && item.duration!== \"0\"?\r\n                                                            <div>持续时间：{item.duration}s</div>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                        {\r\n                                                            item.created_at?\r\n                                                            <div>\r\n                                                                  运行时间：\r\n                                                                 <span style={{ wordBreak: 'break-all',whiteSpace:'pre-line', display: 'inline-block'}}>\r\n                                                                    {item.created_at}\r\n                                                                </span>\r\n                                                                {/* <Row gutter={4}>\r\n                                                                    <Col span={5}>\r\n                                                                        运行时间： {item.created_at}\r\n                                                                    </Col>\r\n                                                                    <Col  span={12}>\r\n                                                                       \r\n                                                                    </Col>\r\n                                                                </Row> */}\r\n                                                            </div>\r\n                                                            :\r\n                                                            null\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                })\r\n                            }\r\n                            \r\n                            {/* <div className=\"flow-group\">\r\n                                <div className=\"toptitle\">部署</div>\r\n                                <div className=\"stage\">\r\n                                    <div className=\"topline\"></div>\r\n                                    <div className=\"cardheader\">\r\n                                        头\r\n                                    </div>\r\n                                    <div className=\"cardcenter\">\r\n                                        中间\r\n                                    </div>\r\n                                    <div className=\"cardfooter\">\r\n                                        尾部\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        </Spin>\r\n    )\r\n   \r\n})","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\formsGroup\\CodeForm.js",["625","626"],"import React, { useEffect } from 'react';\r\nimport { Form, Input, Button, Select ,Space} from 'antd';\r\nconst {Option} = Select\r\nconst layout = {\r\n    labelCol: { span: 4 },\r\n    wrapperCol: { span: 20 },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 9, span: 16 },\r\n  };\r\n  const Codeform = (props) => {\r\n    console.log('Codeformprops',props)\r\n    const [form] = Form.useForm();\r\n  \r\n    const onFinish = (values) => {\r\n      console.log(values);\r\n      props.addCodeOrigin(values)\r\n    };\r\n  \r\n    const onReset = () => {\r\n      form.resetFields();\r\n    };\r\n  \r\n    const initForm = () => {\r\n      if(!props.updateType){ //新建流水线 \r\n        \r\n      }\r\n      form.setFieldsValue({\r\n        address: props.codeoriginData.address?props.codeoriginData.address:'',\r\n        // jenkins_token: props.codeoriginData.jenkins_token? props.codeoriginData.jenkins_token:\"\",\r\n        // branch: props.codeoriginData.branch?props.codeoriginData.branch:\"master\",\r\n        git_trigger: props.codeoriginData.git_trigger?props.codeoriginData.git_trigger:\"all\",\r\n        trigger_regex: props.codeoriginData.trigger_regex?props.codeoriginData.trigger_regex:\"\",\r\n        trigger_type: props.codeoriginData.trigger_type?props.codeoriginData.trigger_type:[],\r\n      });\r\n      \r\n    };\r\n  useEffect(()=>{\r\n    if(props.addCoderawvisible){\r\n      initForm()\r\n    }\r\n  },[props.addCoderawvisible])\r\n    return (\r\n      <Form \r\n        {...layout} \r\n        form={form} \r\n        name=\"control-hooks\" \r\n        onFinish={onFinish}\r\n        >\r\n          {/* repoData */}\r\n        <Form.Item name=\"address\" label=\"仓库\" rules={[{ required: true }]}>\r\n          <Select>\r\n             {\r\n               props.repoData.map(item =>{\r\n                 return  <Option value={item} key={item}>{item}</Option>\r\n               })\r\n             }\r\n          </Select>\r\n        </Form.Item>\r\n        {/* <Form.Item name=\"branch\" label=\"分支\" rules={[{ required: true }]}>\r\n          <Input />\r\n        </Form.Item> */}\r\n        {/* <Form.Item name=\"jenkins_token\" label=\"jenkins_token\" rules={[{ required: true }]}>\r\n          <Input />\r\n        </Form.Item> */}\r\n        <Form.Item label=\"触发方式\" name=\"git_trigger\">\r\n          <Select>\r\n                  <Option value=\"manual\">手动触发</Option>\r\n                  <Option value=\"auto\">自动触发</Option>\r\n                  <Option value=\"all\">全部</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"触发类型\" name=\"trigger_type\">\r\n          <Select  mode=\"multiple\">\r\n                  <Option value=\"push\">分支触发</Option>\r\n                  <Option value=\"tag_push\">tag触发</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item name=\"trigger_regex\" label=\"触发规则\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Space>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              保存\r\n            </Button>\r\n          </Space>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  };\r\n\r\nexport default Codeform;","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\formsGroup\\BuildForm.js",["627","628","629","630","631","632","633","634","635","636"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\formsGroup\\PublishForm.js",["637","638","639","640","641","642","643","644","645","646","647","648","649","650","651"],"import React, { useEffect ,useState} from 'react';\r\nimport { Form, Input, Button, Select ,Space, Menu, Dropdown,Switch  } from 'antd';\r\nimport {PlusCircleTwoTone ,PlusOutlined ,MinusCircleOutlined } from '@ant-design/icons'\r\nimport {_getHostList,_getclusterList,_getmoduleList} from '../../../service/pipeline.js'\r\nimport '../../../css/index.less'\r\nconst { Option } = Select;\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n  };\r\n  const PublishForm = (props) => {\r\n      console.log('props',props)\r\n    const [form] = Form.useForm();\r\n    const [formFeishu] = Form.useForm();\r\n    const [formEmail] = Form.useForm();\r\n    const [plugintype,setplugintype] = useState('')\r\n    const [showfeishu,setShowfeishu] = useState(false)\r\n    const [showEmail,setShowEmail] = useState(false)\r\n    const [deployType,setDeployType] = useState('')\r\n    const [clusterList,setClusterList] = useState([])\r\n    const [moduleNameList,setModuleNameList] = useState([])\r\n    const [hostList,setHostList] = useState([])\r\n    // const onFinish = (values) => {\r\n    //   console.log(values);\r\n    //   values.task_flag = 'scan'\r\n    //   props.receiveChildValues(values)\r\n    // };\r\n  \r\n    const onDelete = () => {\r\n        //   form.resetFields();\r\n     props.deleteSteps(props.currentNode)\r\n    };\r\n\r\n    const saveData = async()=>{\r\n        await form.validateFields()\r\n        let values = {...form.getFieldsValue()};\r\n        let feishua = formFeishu && formFeishu.getFieldsValue();\r\n        let email = formEmail && formEmail.getFieldsValue();\r\n       \r\n        let is_alarm = false\r\n        let alarm_type = [];\r\n        let _emails = []\r\n        let _feishus = []\r\n       if(formFeishu || formEmail){\r\n          if(feishua.alarm_type && feishua.alarm_type.length>0){\r\n              is_alarm = true\r\n              alarm_type.push('feishu')\r\n              _feishus = feishua.alarm_type\r\n          }\r\n          if(email.alarm_type && email.alarm_type.length>0){\r\n              is_alarm = true\r\n              alarm_type.push('email')\r\n              _emails = email.alarm_type\r\n          }\r\n       }\r\n     \r\n       let obj = {\r\n          step_name: values.step_name,\r\n          step_type: props.currentType,\r\n          flag: \"deploy\",\r\n          env: values.env,\r\n          skip: values.skip,\r\n          auto_run: values.auto_run,\r\n          is_alarm: is_alarm,\r\n          deploy_type: values.deploy_type,\r\n          configuration: values.configuration? values.configuration:\"\"\r\n        //   alarm_type: is_alarm && alarm_type.join(','),\r\n        //   email: _emails && _emails.join(','),\r\n        //   feishua: _feishus && _feishus.join(',')\r\n        }\r\n        if(values.deploy_type == 'k8s'){\r\n            obj.cluster_name = values.cluster_name\r\n            obj.namespace = values.namespace?values.namespace:\"\"\r\n            obj.module_name = values.module_name?values.module_name:[]\r\n        }\r\n        if(values.deploy_type == 'node'){\r\n            obj.node_list = values.node_list\r\n            obj.deploy_script = values.deploy_script?values.deploy_script:\"\"\r\n        }\r\n        props.receiveChildValues(obj)\r\n     }\r\n    const initForm = () => {\r\n       setDeployType(props.nowEditdata.deploy_type)\r\n       console.log( props.currentType)\r\n    //    debugger\r\n        form.setFieldsValue({\r\n            step_name:  props.nowEditdata.step_name? props.nowEditdata.step_name: props.currentButtonName,\r\n            env: props.currentType == 'k8s'?\"uat\":\"it\",\r\n            deploy_type: props.nowEditdata.deploy_type,\r\n            skip: props.nowEditdata.skip?props.nowEditdata.skip:false,\r\n            auto_run:  props.nowEditdata.auto_run?props.nowEditdata.auto_run:false,\r\n            configuration: props.nowEditdata.configuration?props.nowEditdata.configuration:\"\"\r\n        });\r\n        if(props.nowEditdata.deploy_type == 'node'){\r\n                getHostlist()\r\n                form.setFieldsValue({\r\n                    node_list:  props.nowEditdata.node_list,\r\n                    deploy_script:  props.nowEditdata.deploy_script\r\n                })\r\n        } else if(props.nowEditdata.deploy_type == 'k8s'){\r\n                getClusterlist()\r\n                getmodulelistlist()\r\n                form.setFieldsValue({\r\n                    module_name: props.nowEditdata.module_name?props.nowEditdata.module_name:undefined,\r\n                    cluster_name:  props.nowEditdata.cluster_name,\r\n                    namespace: props.nowEditdata.namespace?props.nowEditdata.namespace:\"\"\r\n                })\r\n        }\r\n     \r\n      if(props.nowEditdata.is_alarm){  //如果传过来的 is_alarm 有消息提醒的话 则显示\r\n        //如果飞书的长度\r\n        if(props.nowEditdata.feishua){\r\n            setShowfeishu(true)\r\n            setTimeout(()=>{\r\n                formFeishu.setFieldsValue({\r\n                    alarm_type: props.nowEditdata.feishua.split(',')\r\n                })\r\n            },0)\r\n        }\r\n        // 如果邮件的长度  \r\n        if(props.nowEditdata.email){\r\n            // let formEmail\r\n            setShowEmail(true)\r\n           setTimeout(()=>{\r\n            formEmail.setFieldsValue({\r\n                alarm_type: props.nowEditdata.email.split(',')\r\n            })\r\n           },0)\r\n        }\r\n\r\n  }\r\n    };\r\n    const addNotice = (plugintype)=>{\r\n        setplugintype(plugintype)\r\n        if(plugintype == '1'){\r\n            setShowfeishu(true)\r\n        } else if(plugintype == '2'){\r\n            setShowEmail(true)\r\n        }\r\n    }\r\n    const deployTypeChange = (value)=>{\r\n        if(value == 'node'){\r\n            getHostlist()\r\n        } else if(value == 'k8s'){\r\n            getClusterlist()\r\n            getmodulelistlist()\r\n        }\r\n        setDeployType(value)\r\n    }\r\n    const getClusterlist = async()=>{\r\n        const res = await _getclusterList({user: localStorage.getItem('currentUm')})\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            setClusterList(res.data.data)\r\n        } else {\r\n            setClusterList([])\r\n        }\r\n    }\r\n    const getmodulelistlist = async()=>{\r\n        const res = await _getmoduleList({project_name: props.project_name})\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            setModuleNameList(res.data.data)\r\n        } else {\r\n            setModuleNameList([])\r\n        }\r\n    }\r\n    const getHostlist = async()=>{\r\n        const res = await _getHostList({project_name: props.project_name})\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            setHostList(res.data.data)\r\n        } else {\r\n            setHostList([])\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if(props.editdrawvisible){\r\n            initForm()\r\n        } else {\r\n            setShowfeishu(false)\r\n            setShowEmail(false)\r\n            formEmail.setFieldsValue({\r\n                alarm_type:  []\r\n            })\r\n            formFeishu.setFieldsValue({\r\n                alarm_type: []\r\n            })\r\n        }\r\n    },[props.editdrawvisible])\r\n    useEffect(()=>{\r\n       if(plugintype){\r\n\r\n       }\r\n    },[plugintype])\r\n  \r\n    return (\r\n      <div className=\"formbox\">\r\n           <Form {...layout} form={form} name=\"control-hooks\">\r\n                <Form.Item name=\"step_name\" label=\"任务名称\" rules={[{ required: true }]}>\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item name=\"env\" label=\"环境\" rules={[{ required: true }]}>\r\n                    <Select disabled>\r\n                            <Option value=\"it\">it</Option>\r\n                            <Option value=\"uat\">uat</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item name=\"deploy_type\" label=\"部署方式\" rules={[{ required: true }]} >\r\n                    <Select onChange={deployTypeChange}>\r\n                            <Option value=\"node\">主机部署</Option>\r\n                            <Option value=\"k8s\">k8s部署</Option>\r\n                            <Option value=\"helm\" disabled>helm部署</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                {\r\n                    deployType == 'node'?\r\n                    <>\r\n                    <Form.Item name=\"deploy_script\" label=\"部署脚本\">\r\n                        <Input.TextArea rows={6} wrap=\"hard\" style={{backgroundColor: '#000',color: '#fff'}}/>\r\n                    </Form.Item>\r\n                    <Form.Item name=\"node_list\" label=\"主机列表\" rules={[{ required: true }]}>\r\n                        <Select mode=\"multiple\">\r\n                        {\r\n                                hostList && hostList.map((item,index)=>{\r\n                                    return <Option value={item} key={index}>{item}</Option>\r\n                                })\r\n                            }\r\n                        </Select>\r\n                    </Form.Item>\r\n                    </>\r\n                    :null\r\n                }\r\n                {\r\n                    deployType == 'k8s'?\r\n                    <>\r\n                        <Form.Item name=\"module_name\" label=\"模块名称\">\r\n                            <Select mode=\"multiple\">\r\n                                {\r\n                                    moduleNameList && moduleNameList.map((item,index)=>{\r\n                                    return <Option value={item} key={index}>{item}</Option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"cluster_name\" label=\"集群名称\" rules={[{ required: true }]}>\r\n                            <Select>\r\n                                {\r\n                                    clusterList && clusterList.map((item,index)=>{\r\n                                    return <Option value={item} key={index}>{item}</Option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item name=\"namespace\" label=\"namespace\">\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </>\r\n                    :null\r\n                }\r\n                <Form.Item name=\"configuration\" label=\"配置文件\">\r\n                    <Input.TextArea rows={6} wrap=\"hard\" style={{backgroundColor: '#000',color: '#fff'}}/>\r\n                </Form.Item>\r\n                <Form.Item name=\"skip\" label=\"是否允许跳过\" rules={[{ required: true }]} valuePropName=\"checked\">\r\n                    <Switch />\r\n                </Form.Item>\r\n                <Form.Item name=\"auto_run\" label=\"是否自动部署\" rules={[{ required: true }]} valuePropName=\"checked\">\r\n                    <Switch />\r\n                </Form.Item>\r\n            </Form>\r\n            <Dropdown overlay={\r\n                 <Menu>\r\n                    <Menu.Item key=\"0\" onClick={()=>addNotice(1)}>\r\n                        <span>飞书群通知</span>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"1\" onClick={()=>addNotice(2)}>\r\n                        <span>邮件通知</span>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            } trigger={['click']}>\r\n                <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                    <PlusCircleTwoTone  /> 添加插件 \r\n                </a>\r\n            </Dropdown>\r\n            {\r\n                showfeishu?<Form name=\"dynamic_form_item\" {...layout} form={formFeishu}>\r\n                <Form.List\r\n                    name=\"alarm_type\"\r\n                >\r\n                    {(fields, { add, remove }, { errors }) => (\r\n                    <>\r\n                        {fields.map((field, index) => (\r\n                        <Form.Item\r\n                            label={'飞书群地址'}\r\n                            required={false}\r\n                            key={field.key}\r\n                        >\r\n                            <Form.Item\r\n                            {...field}\r\n                            validateTrigger={['onChange', 'onBlur']}\r\n                            rules={[\r\n                                {\r\n                                required: true,\r\n                                whitespace: true,\r\n                                message: \"此表单为必填项，如不需要 请删除\",\r\n                                },\r\n                                { type: 'url', warningOnly: true, message: \"请输入合法的URL地址\" },\r\n                            ]}\r\n                            noStyle\r\n                            >\r\n                                <Input placeholder=\"飞书群地址链接\" style={{ width: '60%' }} />\r\n                            </Form.Item>\r\n                            <MinusCircleOutlined\r\n                                className=\"dynamic-delete-button\"\r\n                                onClick={() => remove(field.name)}\r\n                            />\r\n                        </Form.Item>\r\n                        ))}\r\n                        <Form.Item  wrapperCol = {{ offset: 8, span: 16 }}>\r\n                            <Button\r\n                                type=\"dashed\"\r\n                                onClick={() => add()}\r\n                               \r\n                                icon={<PlusOutlined />}\r\n                            >\r\n                                添加飞书群地址\r\n                            </Button>\r\n                        <Form.ErrorList errors={errors} />\r\n                        </Form.Item>\r\n                    </>\r\n                    )}\r\n                    </Form.List>\r\n                    {/* <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                        </Button>\r\n                    </Form.Item> */}\r\n                </Form>:null\r\n            }\r\n            {\r\n                showEmail?<Form name=\"dynamic_form_item\" {...layout} form={formEmail}>\r\n                <Form.List\r\n                    name=\"alarm_type\"\r\n                >\r\n                    {(fields, { add, remove }, { errors }) => (\r\n                    <>\r\n                        {fields.map((field, index) => (\r\n                        <Form.Item\r\n                            label={'邮件地址'}\r\n                            required={false}\r\n                            key={field.key}\r\n                        >\r\n                            <Form.Item\r\n                            {...field}\r\n                            validateTrigger={['onChange', 'onBlur']}\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    whitespace: true,\r\n                                    message: \"此表单为必填项，如不需要 请删除\",\r\n                                },\r\n                                { type: 'email', warningOnly: true , message: \"请输入合法的邮件地址\"},\r\n                            ]}\r\n                            noStyle\r\n                            >\r\n                                <Input placeholder=\"收件人邮箱地址\" type=\"email\" style={{ width: '60%' }} />\r\n                            </Form.Item>\r\n                            <MinusCircleOutlined\r\n                                className=\"dynamic-delete-button\"\r\n                                onClick={() => remove(field.name)}\r\n                            />\r\n                        </Form.Item>\r\n                        ))}\r\n                        <Form.Item wrapperCol = {{ offset: 8, span: 16 }}>\r\n                            <Button\r\n                                type=\"dashed\"\r\n                                onClick={() => add()}\r\n                                icon={<PlusOutlined />}\r\n                            >\r\n                                添加邮件收件人\r\n                            </Button>\r\n                        <Form.ErrorList errors={errors} />\r\n                        </Form.Item>\r\n                    </>\r\n                    )}\r\n                    </Form.List>\r\n                    {/* <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                        </Button>\r\n                    </Form.Item> */}\r\n                </Form>:null\r\n            }\r\n            <div className=\"footerdiv\">\r\n                <Space>\r\n                    <Button type=\"primary\" onClick={saveData}>\r\n                        保存\r\n                    </Button>\r\n                    <Button htmlType=\"button\" onClick={onDelete}>\r\n                        删除\r\n                    </Button>\r\n                </Space>\r\n            </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default PublishForm;","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\App.js",["652"],"import React from \"react\";\r\nimport {BrowserRouter as Router,Switch,Route,Redirect} from 'react-router-dom';\r\nimport routes from \"../src/routes/index\";\r\nimport 'antd/dist/antd.css';\r\nimport '../src/css/scroll.css';\r\nimport {ConfigProvider} from 'antd';\r\nimport cn from 'antd/es/locale/zh_CN';\r\nexport default function App(props) {\r\n  // let token = localStorage.getItem('token');\r\n  return (\r\n    <ConfigProvider locale={cn}>\r\n       <Router>\r\n          <Switch>\r\n              {\r\n                routes.map(\r\n                  route=>(\r\n                  <Route \r\n                    path={route.path} \r\n                    key={route.path}\r\n                    exact={route.exact}\r\n                    render={\r\n                      ()=>(\r\n                        !route.auth?\r\n                        (\r\n                          <route.component child={route.children}  meta={route.meta}/>\r\n                        )\r\n                        :(\r\n                          // localStorage.getItem('token')?\r\n                          <route.component child={route.children} meta={route.meta}/>\r\n                          // : <Redirect to='/login' />\r\n                        )\r\n                      )\r\n                      }>\r\n                    </Route>\r\n                  )\r\n                )\r\n              }\r\n          </Switch>\r\n      </Router>\r\n  </ConfigProvider>\r\n  );\r\n}\r\n\r\n",["653","654"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\_404Page.js",["655"],"import React from 'react';\nimport notfoundImag from '../static/images/404.png'\nexport default function Notfound(){\n    return (\n       <div style={{width: '100%',height:'100%'}}>\n           <div style={{position:'absolute',left:'50%',top:'50%',transform:'translate(-50%,-50%)'}}>\n            <img src={notfoundImag}/>\n           </div>\n       </div>  \n    )\n   \n}",["656","657"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\action\\user.js",[],["658","659"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\action\\loginSaga.js",["660","661","662"],"// 调用异步操作 call\n// 状态更新 put 相当于dispatch\n// 做监听 take| takeEvery\nimport {\n  call,\n  put,\n  takeEvery,\n  take,\n  fork\n} from \"redux-saga/effects\";\n\n// watcher saga\nfunction* loginHandle(action) {\n  console.log('loginSagaaction',action)\n\n  yield put({\n    type: action.payload.type,\n    payload: action.payload.payload || {}\n  });\n  \n  // yield put({type: \"REQUEST\"});\n  // try {\n  //   // 第一个异步请求\n  //   const res1 = yield call(LoginService.login, action.payload);\n  //   // 同步的方式 调用第二个请求，这个请求依懒于第一个请求的返回值\n  //   const res2 = yield call(LoginService.getMoreUserInfo, res1);\n  //   // 同步的方式 触发状态更新\n  //   yield put({\n  //     type: \"LOGIN_SUCCESS\",\n  //     payload: {...res2}\n  //   });\n  // } catch (err) {\n  //   yield put({\n  //     type: \"LOGIN_FAILURE\",\n  //     payload: err\n  //   });\n  // }\n}\n\n// workder saga\n\nfunction* loginSaga() {\n  yield takeEvery(\"LOGIN_SAGA\", loginHandle);\n}\n\n\nexport default loginSaga;\n",["663","664"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\index.js",[],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\index.js",["665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\plugins\\axios.js",["683","684","685"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport qs from 'qs'\r\naxios.defaults.withCredentials = true\r\naxios.interceptors.request.use(\r\n  async config =>{\r\n    const token = localStorage.getItem('token');\r\n    const tokenHead = localStorage.getItem('tokenHead');\r\n    console.log(process.env.NODE_ENV)\r\n    if(token){\r\n      config.headers.common['authorization'] = tokenHead+token\r\n    }\r\n    return config\r\n  },\r\n  error=>{\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n//响应拦截\r\naxios.interceptors.response.use(\r\n  async response =>{\r\n    let router=new Router();\r\n    console.log('axios.interceptors.response',response)\r\n    let {data} = response\r\n    if(response.status === 400){\r\n      // console.log('token 失败 跳转到login',router);\r\n         localStorage.clear()\r\n         window.location.href = `https://sso.i.wxblockchain.com/user/login?redirectUrl=https://acd-pipeline.i.wxblockchain.com`\r\n    }\r\n\r\n    return response\r\n  },\r\n  error=>{\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nReact.axios = axios;//axios绑到对象包上\r\nReact.Component.prototype.axios = axios; // axios绑定到Component类的原型 组件|this.axios\r\nwindow.axios = axios; //× 希望全局使用axios , 使用webpack 来配置\r\nexport default axios;\r\n",["686","687"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\action\\menu.js",[],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\static\\js\\flexible.js",[],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\action\\menuSaga.js",["688","689","690"],"import {\r\n  call,\r\n  put,\r\n  takeEvery,\r\n  take,\r\n  fork\r\n} from \"redux-saga/effects\";\r\nfunction* loginHandle(action) {\r\n\r\n  console.log('MENU_SAGA',action)\r\n  yield put({\r\n    type: action.type,\r\n    payload: action.payload\r\n  });\r\n}\r\n\r\nfunction* menuSaga() {\r\n  yield takeEvery(\"MENU_SAGA\", loginHandle);\r\n}\r\n\r\n\r\nexport default menuSaga;",["691","692"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\routes\\menu.js",["693"],"\r\nexport default [\r\n    {\r\n        title:'总览',\r\n        name:'/overview',\r\n        icon:'fa fa-tachometer',\r\n        id: '0'\r\n    },\r\n    {\r\n        title:'流水线',\r\n        name:'/flow',\r\n        icon:'fa fa-map-signs',\r\n        id: '1'\r\n    },\r\n    {\r\n        title:'应用管理',\r\n        name:'/project',\r\n        icon:'fa fa-file',\r\n        id: '2'\r\n    },\r\n    {\r\n        title:'同步管理',\r\n        name:'/release',\r\n        icon:'fa fa-legal',\r\n        id: '3'\r\n    },\r\n    {\r\n        title:'配置管理',\r\n        name:'/configmanagement',\r\n        icon:'fa fa-cogs',\r\n        id: '4',\r\n        children:[\r\n            {\r\n                title:'ConfigMap',\r\n                name:'/configmanagement/configMap',\r\n                icon:'',\r\n                id: '4-1',\r\n            },\r\n            {\r\n                title:'Nacos',\r\n                name:'/configmanagement/nacos',\r\n                icon:'',\r\n                id: '4-2',\r\n            },\r\n            // {\r\n            //     title:'Nginx',\r\n            //     name:'/configmanagement/nginx',\r\n            //     icon:'',\r\n            //     id: '4-3',\r\n            // }\r\n        ]\r\n    },\r\n]","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\store\\loginReducer.js",[],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\components\\loading\\index.js",["694"],"import React, {Component} from 'react';\r\nimport {Spin, Alert} from 'antd';\r\n\r\nclass Loading extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"example\">\r\n\t\t\t\t<Spin tip=\"Loading...\"  size=\"large\" >\r\n\t\t\t\t<Alert\r\n\t\t\t\tmessage=\"ACD管理平台\"\r\n\t\t\t\tdescription=\"ACD管理平台欢迎您，页面正在加载中，请您耐心等待，谢谢！\"\r\n\t\t\t\ttype=\"info\"\r\n\t\t\t\t/>\r\n\t\t\t\t</Spin>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Loading","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\createhistoryLog\\[fake].js",["695","696"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\service\\pipeline.js",["697"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\service\\server.js",[],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\store\\menuReducer.js",[],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\store\\index.js",["698"],"import {loginReducer} from \"./loginReducer\";\nimport {menuReducer} from \"./menuReducer\";\nimport {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../action/rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  combineReducers({user: loginReducer,menu: menuReducer}),\n  // applyMiddleware(thunk)\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n",["699","700"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\action\\rootSaga.js",[],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\flow\\LogcodeMirror\\index.js",["701"],"import React from 'react';\r\nimport CodeMirror from '@uiw/react-codemirror';\r\n// import {tags,HighlightStyle} from \"@codemirror/highlight\"\r\n\r\nimport { Drawer, Button } from 'antd';\r\n// import '../../../css/304.css'\r\nexport default class CodemirrorLog extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.codemirror = React.createRef()\r\n        this.state = {\r\n           visible: false,\r\n           code: \"\",\r\n          \r\n        }\r\n    }\r\n    onClose = ()=>{\r\n        this.props.closeLog()\r\n    }\r\n    // static getDerivedStateFromProps(nextProps,prevState){\r\n    //     //该方法内禁止访问this\r\n    //     if(nextProps.visible){\r\n    //         //通过对比nextProps和prevState，返回一个用于更新状态的对象\r\n    //         return {\r\n    //             value: nextProps.visible\r\n    //         }\r\n    //     }\r\n    //     //不需要更新状态，返回null\r\n    //     return null\r\n    // }\r\n    componentDidMount(){\r\n      \r\n    }\r\n    render() {\r\n        return (\r\n            <Drawer title=\"日志\" width=\"100%\" placement=\"right\" onClose={this.onClose.bind(this)} visible={this.props.visible}>\r\n                    <div style={{minHeight: '100%',background: '#2c313a'}}>\r\n                        <CodeMirror\r\n                            value={this.props.logdata}\r\n                            ref={this.codemirror}\r\n                            theme=\"dark\"\r\n                            editable={false}\r\n                            // extensions={[HighlightStyle.define([\r\n                            //     {tag: tags.keyword, color: \"#fc6\"},\r\n                            //     {tag: tags.comment, color: \"#f5d\", fontStyle: \"italic\"}\r\n                            // ])]}\r\n                            onBeforeChange={(editor, data, value) => {\r\n                                console.log('value',value)\r\n                                this.setState({ value });\r\n                            }}\r\n                            onChange={(editor, value) => {\r\n                                console.log('controlled', { value });\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n            </Drawer>\r\n        );\r\n    }\r\n}","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\utils\\titleConfig.js",[],["702","703"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\project\\index.js",["704","705","706","707","708","709","710","711","712","713","714","715","716","717"],"import React, { Component} from \"react\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport { Row, Col, Select,Table,Menu, Dropdown, Spin ,Popconfirm,message,Button,Modal} from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport \"../../css/index.less\"\r\nimport BreadNav from '../breadNav'\r\nimport {_getcluterList,_getnamespaceList,_getpodList,_getkubernetesSetting,_restartpod,_deletepod} from '../../service/project'\r\nimport DetailSet from './components/setting'\r\nimport PodLogDrawer from './components/log'\r\nconst {Option} = Select\r\nlet ws;\r\nclass ProjectManagement extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            projectList:[],\r\n            tabledata:[],\r\n            clusterList: [],\r\n            nameSpacelist: [],\r\n            podTabledata:[],\r\n            params:{\r\n                cluster_name:\"\",\r\n                namespace:\"\",\r\n                kind: 'deployment'\r\n            },\r\n            spinning: false,\r\n            modalVisible: false,\r\n            modalVisible_pod: false,\r\n            settingdata:{},\r\n            podLogData:\"\",\r\n            podLogVisible: false,\r\n            checked: true,\r\n            isModalVisible: false,//展示pod\r\n            line: 1000,\r\n            currentName: \"\",\r\n            CtrlChange:{},\r\n            tableheight: (document.documentElement.clientHeight || document.body.clientHeight)-200\r\n        }\r\n        this.columns_sate = [\r\n            {  \r\n                title: '名称', \r\n                dataIndex: 'name', \r\n                key: 'name',\r\n                render:(text,record)=>{\r\n                    return <a href=\"javascript:;\" onClick={this.showPodDio.bind(this,record)}>{text}</a>\r\n                }\r\n             },\r\n            { title: '状态', dataIndex: 'ready', key: 'ready' },\r\n            { title: '运行时长', dataIndex: 'age', key: 'age' },\r\n            { title: '容器名称', dataIndex: 'container', key: 'container' },\r\n            { title: '镜像', dataIndex: 'image', key: 'image' },\r\n            { \r\n                title: '操作', \r\n                dataIndex: 'action', \r\n                key: 'action' ,\r\n                width:120,\r\n                align:\"center\",\r\n                render:(text,record)=>{\r\n                    return (\r\n                        <Dropdown overlay={\r\n                            (\r\n                                <Menu>\r\n                                    <Menu.Item key=\"0\">\r\n                                        <span onClick={this.showSetting.bind(this,record)}>查看配置</span>\r\n                                    </Menu.Item>\r\n                                    {/* <Menu.Item key=\"1\">\r\n                                        <span onClick={this.showLog.bind(this,record)}>查看Log</span>\r\n                                    </Menu.Item> */}\r\n                                    {/* <Menu.Item key=\"2\">\r\n                                        <Popconfirm\r\n                                            title=\"你确定重启么？\"\r\n                                            onConfirm={this.confirm.bind(this,'restart',record)}\r\n                                            onCancel={this.cancel.bind(this,'restart',record)}\r\n                                            okText=\"是\"\r\n                                            cancelText=\"否\"\r\n                                        >\r\n                                            <span>重启Pod</span>\r\n                                        </Popconfirm>\r\n                                    </Menu.Item> */}\r\n                                    <Menu.Item key=\"2\">\r\n                                        <Popconfirm\r\n                                            title=\"你确定删除么？\"\r\n                                            onConfirm={this.confirm.bind(this,'delete',record)}\r\n                                            onCancel={this.cancel.bind(this,'delete',record)}\r\n                                            okText=\"是\"\r\n                                            cancelText=\"否\"\r\n                                        >\r\n                                            <span>删除</span>\r\n                                        </Popconfirm>\r\n                                    </Menu.Item>\r\n                                </Menu>\r\n                            )\r\n                        }>\r\n                            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                            更多 <DownOutlined />\r\n                            </a>\r\n                        </Dropdown>\r\n                    )\r\n                }\r\n            },\r\n        ]\r\n        this.columns_dep = [\r\n            {  \r\n                title: '名称', \r\n                dataIndex: 'name', \r\n                key: 'name',\r\n                render:(text,record)=>{\r\n                    return <a href=\"javascript:;\" onClick={this.showPodDio.bind(this,record)}>{text}</a>\r\n                }\r\n             },\r\n            { title: '状态', dataIndex: 'ready', key: 'ready' },\r\n            { title: '可用数量', dataIndex: 'available', key: 'available' },\r\n            { title: '运行时长', dataIndex: 'age', key: 'age' },\r\n            { title: '容器名称', dataIndex: 'container', key: 'container' },\r\n            { title: '镜像', dataIndex: 'image', key: 'image' },\r\n            { title: '标签', dataIndex: 'selector', key: 'selector' },\r\n            { \r\n                title: '操作', \r\n                dataIndex: 'action', \r\n                key: 'action' ,\r\n                width:120,\r\n                align:\"center\",\r\n                render:(text,record)=>{\r\n                    return (\r\n                        <Dropdown overlay={\r\n                            (\r\n                                <Menu>\r\n                                    <Menu.Item key=\"0\">\r\n                                        <span onClick={this.showSetting.bind(this,record)}>查看配置</span>\r\n                                    </Menu.Item>\r\n                                    {/* <Menu.Item key=\"1\">\r\n                                        <span onClick={this.showLog.bind(this,record)}>查看Log</span>\r\n                                    </Menu.Item> */}\r\n                                    {/* <Menu.Item key=\"2\">\r\n                                        <Popconfirm\r\n                                            title=\"你确定重启么？\"\r\n                                            onConfirm={this.confirm.bind(this,'restart',record)}\r\n                                            onCancel={this.cancel.bind(this,'restart',record)}\r\n                                            okText=\"是\"\r\n                                            cancelText=\"否\"\r\n                                        >\r\n                                            <span>重启Pod</span>\r\n                                        </Popconfirm>\r\n                                    </Menu.Item> */}\r\n                                    <Menu.Item key=\"2\">\r\n                                        <Popconfirm\r\n                                            title=\"你确定删除么？\"\r\n                                            onConfirm={this.confirm.bind(this,'delete',record)}\r\n                                            onCancel={this.cancel.bind(this,'delete',record)}\r\n                                            okText=\"是\"\r\n                                            cancelText=\"否\"\r\n                                        >\r\n                                            <span>删除</span>\r\n                                        </Popconfirm>\r\n                                    </Menu.Item>\r\n                                </Menu>\r\n                            )\r\n                        }>\r\n                            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                            更多 <DownOutlined />\r\n                            </a>\r\n                        </Dropdown>\r\n                    )\r\n                }\r\n            },\r\n        ]\r\n        this.columns_pod = [\r\n            {  \r\n                title: '名称', \r\n                dataIndex: 'name', \r\n                key: 'name',\r\n            },\r\n            {  \r\n                title: '状态', \r\n                dataIndex: 'status', \r\n                key: 'status',\r\n            },\r\n            // {  \r\n            //     title: '重启次数', \r\n            //     dataIndex: 'restarts', \r\n            //     key: 'restarts',\r\n            // },\r\n            {  \r\n                title: '运行时长', \r\n                dataIndex: 'age', \r\n                key: 'age',\r\n            },\r\n            {  \r\n                title: 'IP', \r\n                dataIndex: 'ip', \r\n                key: 'ip',\r\n            },\r\n            {  \r\n                title: '节点', \r\n                dataIndex: 'node_name', \r\n                key: 'node_name',\r\n            },\r\n            { \r\n                title: '操作', \r\n                dataIndex: 'action', \r\n                key: 'action' ,\r\n                // width:120,\r\n                align:\"center\",\r\n                render:(text,record)=>{\r\n                    return(\r\n                        <>\r\n                            <Dropdown overlay={\r\n                            (\r\n                                <Menu>\r\n                                    <Menu.Item key=\"0\">\r\n                                        <span onClick={this.showSetting_pod.bind(this,record)}>查看配置</span>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"1\">\r\n                                        <span onClick={this.showLog.bind(this,record)}>查看Log</span>\r\n                                    </Menu.Item>\r\n                                    <Menu.Item key=\"2\">\r\n                                        <Popconfirm\r\n                                            title=\"你确定重启么？\"\r\n                                            onConfirm={this.confirm.bind(this,'restart',record)}\r\n                                            onCancel={this.cancel.bind(this,'restart',record)}\r\n                                            okText=\"是\"\r\n                                            cancelText=\"否\"\r\n                                        >\r\n                                            <span>重启Pod</span>\r\n                                        </Popconfirm>\r\n                                    </Menu.Item>\r\n                                    {/* <Menu.Item key=\"2\">\r\n                                        <Popconfirm\r\n                                            title=\"你确定删除么？\"\r\n                                            onConfirm={this.confirm.bind(this,'delete',record)}\r\n                                            onCancel={this.cancel.bind(this,'delete',record)}\r\n                                            okText=\"是\"\r\n                                            cancelText=\"否\"\r\n                                        >\r\n                                            <span>删除</span>\r\n                                        </Popconfirm>\r\n                                    </Menu.Item> */}\r\n                                </Menu>\r\n                            )\r\n                        }>\r\n                            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\r\n                            更多 <DownOutlined />\r\n                            </a>\r\n                        </Dropdown>\r\n                            {/* <Popconfirm\r\n                                title=\"你确定重启么？\"\r\n                                onConfirm={this.confirm.bind(this,'restart',record)}\r\n                                onCancel={this.cancel.bind(this,'restart',record)}\r\n                                okText=\"是\"\r\n                                cancelText=\"否\"\r\n                            >\r\n                                <Button stype=\"link\" size=\"small\" >重启pod</Button>\r\n                            </Popconfirm>\r\n                            <Button stype=\"link\" size=\"small\" onClick={this.showLog.bind(this,record)}>查看Log</Button>\r\n                            <Button stype=\"link\" size=\"small\" onClick={this.showSetting.bind(this,record)}>查看配置</Button> */}\r\n                        </>\r\n                    )\r\n                }\r\n            }\r\n        ]\r\n        this.getPodlist.bind(this)\r\n        this.getNamespace.bind(this)\r\n    }\r\n    showPodDio = async (record)=>{\r\n        console.log(record);\r\n        this.setState({\r\n            spinning: true,\r\n            currentName:  record.name\r\n        })\r\n        const res = await _getpodList({\r\n            cluster_name:  this.state.params.cluster_name,\r\n            namespace: this.state.params.namespace,\r\n            kind: 'pod',\r\n            name: record.name,\r\n            label: this.state.params.kind\r\n        })\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            this.setState({\r\n                podTabledata: res.data.data,\r\n                spinning: false,\r\n                isModalVisible: true\r\n            })\r\n        }\r\n    }\r\n    handleCancel = () => {\r\n        this.setState({\r\n            isModalVisible: false\r\n        })\r\n        \r\n    }\r\n    showSetting = async(record)=>{\r\n        console.log(record)\r\n        let params = {\r\n            cluster_name: this.state.params.cluster_name,\r\n            namespace:this.state.params.namespace,\r\n            name:record.name,\r\n            kind: this.state.isModalVisible?\"pod\":this.state.params.kind\r\n        }\r\n      const res = await _getkubernetesSetting({...params})\r\n      console.log('resssss',res)\r\n      if(res.status === 200 && res.data.Code === 0){\r\n        this.setState({\r\n            settingdata: res.data.data,\r\n            spinning: true\r\n        },()=>{\r\n            this.setState({\r\n                modalVisible: true,\r\n                spinning: false\r\n            })\r\n        })\r\n      } else {\r\n          if(res.data && res.data.Message){\r\n            message.error(res.data.Message)\r\n          } else {\r\n              message.error('请求错误')\r\n          }\r\n      }\r\n    }\r\n    showSetting_pod = async(record)=>{\r\n        console.log(record)\r\n        let params = {\r\n            cluster_name: this.state.params.cluster_name,\r\n            namespace:this.state.params.namespace,\r\n            name:record.name,\r\n            kind: this.state.isModalVisible?\"pod\":this.state.params.kind\r\n        }\r\n      const res = await _getkubernetesSetting({...params})\r\n      console.log('resssss',res)\r\n      if(res.status === 200 && res.data.Code === 0){\r\n        this.setState({\r\n            settingdata: res.data.data,\r\n            spinning: true\r\n        },()=>{\r\n            this.setState({\r\n                modalVisible_pod: true,\r\n                spinning: false\r\n            })\r\n        })\r\n      } else {\r\n          if(res.data && res.data.Message){\r\n            message.error(res.data.Message)\r\n          } else {\r\n              message.error('请求错误')\r\n          }\r\n      }\r\n    }\r\n    getNamespace = async(value) =>{\r\n        const res = await _getnamespaceList({cluter: value,user:localStorage.getItem('currentUm')})\r\n        console.log('res',res)\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            let params = {\r\n                ...this.state.params\r\n            }\r\n            params.cluster_name = value\r\n            params.namespace =  res.data.data.length>0?res.data.data[0]:''\r\n            this.setState({\r\n                nameSpacelist: res.data.data,\r\n                params: {...params},\r\n            },()=>{\r\n                if(res.data.data.length>0){\r\n                    this.getPodlist(value, this.state.params.namespace?this.state.params.namespace:res.data.data[0],this.state.params.kind)\r\n                }\r\n                \r\n            })\r\n            \r\n        }\r\n    }\r\n    ClusterOnchange = async(value)=>{\r\n       this.getNamespace(value)\r\n    }\r\n    NamespaceOnchange = async(value) =>{\r\n        let params = {...this.state.params}\r\n        params.namespace = value\r\n        this.setState({\r\n            params: params\r\n        },()=>{\r\n            this.getPodlist(this.state.params.cluster_name,value,this.state.params.kind)\r\n        })\r\n    }\r\n    kindOnchange = (value)=>{\r\n        let params = {...this.state.params}\r\n        params.kind = value\r\n        this.setState({\r\n            params: params\r\n        },()=>{\r\n            this.getPodlist(this.state.params.cluster_name,this.state.params.namespace,value)\r\n        })\r\n\r\n    }\r\n    getCluster = async()=>{\r\n      let _params={\r\n          user: localStorage.getItem('currentUm')\r\n      }\r\n        const res = await _getcluterList({user: _params.user})\r\n        console.log(res)\r\n        let params = {\r\n            ...this.state.params\r\n        }\r\n        params.cluster_name =  res.data.data[0]\r\n        params.namespace = \"\"\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            this.setState({\r\n                clusterList: res.data.data,\r\n                params: {...params}\r\n            },()=>{\r\n                if(res.data.data.length>0){\r\n                    this.getNamespace(res.data.data[0])\r\n                } else {\r\n                   \r\n                }\r\n                \r\n            })\r\n        }\r\n    }\r\n    getPodlist = async(cluster_name,namespace,kind,name)=>{\r\n        this.setState({\r\n            spinning: true\r\n        })\r\n        const res2 = await _getpodList({\r\n            cluster_name:  cluster_name,\r\n            namespace: namespace,\r\n            kind: this.state.isModalVisible?'pod':kind,\r\n            name: name?name:undefined,\r\n            label: this.state.isModalVisible?this.state.params.kind:undefined\r\n        })\r\n        if(res2.status === 200 && res2.data.Code ===0){\r\n            let arr = []\r\n            if(this.state.isModalVisible){\r\n                this.setState({\r\n                    podTabledata: res2.data.data,\r\n                    spinning: false\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    tabledata: res2.data.data,\r\n                    spinning: false\r\n                })\r\n            }\r\n           \r\n        }\r\n    }\r\n    showLog = (record)=>{\r\n        this.setState({\r\n            CtrlChange: record\r\n        })\r\n        let params = {}\r\n        params.namespace = record.namespace;\r\n        params.name = record.name;\r\n        ws = new WebSocket(`wss://acd-pipeline.i.wxblockchain.com/ajax/pod/log?cluster_name=${this.state.params.cluster_name}&namespace=${params.namespace}&pod_name=${params.name}&user=${localStorage.getItem('currentUm')}&line=${this.state.line}`);\r\n        this.setState({\r\n            spinning: true\r\n        })\r\n        const _this = this\r\n        ws.onmessage = function(event) {\r\n          console.log(event);\r\n          console.log('podLogData',_this.state.podLogData)\r\n          if(event.isTrusted){\r\n            if(event.data){\r\n                _this.setState({\r\n                    spinning: false,\r\n                    podLogData: event.data,\r\n                    podLogVisible: true\r\n                })\r\n\r\n            }else {\r\n                _this.setState({\r\n                    spinning: false,\r\n                    podLogData: \"\",\r\n                    podLogVisible: true\r\n                })\r\n            }\r\n        }\r\n        };\r\n    }\r\n    closeModal = ()=>{\r\n       this.setState({\r\n            modalVisible: false\r\n       })\r\n    };\r\n    closeModal_pod = ()=>{\r\n        this.setState({\r\n             modalVisible_pod: false\r\n        })\r\n     };\r\n    wsReload = () =>{\r\n        if(ws){\r\n            ws.close();\r\n        }\r\n        let params = {};\r\n            params.namespace = this.state.CtrlChange.namespace;\r\n            params.name = this.state.CtrlChange.name;\r\n            ws = new WebSocket(`wss://acd-pipeline.i.wxblockchain.com/ajax/pod/log?cluster_name=${this.state.params.cluster_name}&namespace=${params.namespace}&pod_name=${params.name}&user=${localStorage.getItem('currentUm')}&line=${this.state.line}`);\r\n            this.setState({\r\n                spinning: true\r\n            })\r\n            const _this = this\r\n            ws.onmessage = function(event) {\r\n            console.log(event);\r\n            console.log('podLogData',_this.state.podLogData)\r\n        \r\n            if(event.isTrusted){\r\n                if(event.data){\r\n                    _this.setState({\r\n                        spinning: false,\r\n                        podLogData: event.data,\r\n                        podLogVisible: true\r\n                    })\r\n\r\n                }else {\r\n                _this.setState({\r\n                    spinning: false,\r\n                    podLogData: \"\",\r\n                    podLogVisible: true\r\n                })\r\n                }\r\n            }\r\n        };\r\n    }\r\n    closePodLogDrawer = ()=>{\r\n        this.setState({\r\n                podLogVisible: false\r\n        },()=>{\r\n            ws.close();\r\n        })\r\n    \r\n    };\r\n    wsClose = () =>{\r\n        ws.close();\r\n    }\r\n    closeTableSpining = ()=>{\r\n        this.setState({\r\n            spinning: false,\r\n        })\r\n    };\r\n    checkedChange = (value) =>{\r\n        this.setState({\r\n            checked: value\r\n        })\r\n    }\r\n    setline = (line)=>{\r\n        this.setState({\r\n            line: line\r\n        },()=>{\r\n            if(this.state.line  && this.state.podLogVisible && this.state.checked){\r\n                this.wsReload()\r\n            }\r\n        })\r\n    }\r\n    confirm = async (type,record)=> {\r\n        let params = {\r\n            cluster_name: this.state.params.cluster_name,\r\n            namespace: this.state.params.namespace,\r\n            name: record.name,\r\n            kind: this.state.isModalVisible?\"pod\":this.state.params.kind\r\n        }\r\n        let msg = \"\"\r\n        let res = null\r\n       if(type == \"restart\"){\r\n            res = await _deletepod(params)\r\n            msg = \"重启成功\" \r\n       }\r\n       if(type == \"delete\"){\r\n            res = await _deletepod(params)\r\n            msg = \"删除成功\" \r\n            \r\n       }\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            message.success(msg)\r\n            if(this.state.isModalVisible){\r\n                this.getPodlist(this.state.params.cluster_name,this.state.params.namespace,this.state.params.kind,this.state.currentName)\r\n            } else {\r\n                this.getPodlist(this.state.params.cluster_name,this.state.params.namespace,this.state.params.kind)\r\n            }\r\n        }\r\n    }\r\n    cancel = (e)=> {\r\n        console.log(e);\r\n    }\r\n    refreashData = () =>{\r\n        this.getPodlist(this.state.params.cluster_name,this.state.params.namespace,this.state.params.kind)\r\n    }\r\n    handleResize = ()=>{\r\n        let boxheight = (document.documentElement.clientHeight || document.body.clientHeight) - 200;\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                tableheight: boxheight\r\n            })\r\n        },100)\r\n    } \r\n    componentDidMount(){\r\n        this.getCluster()\r\n        let boxheight = (document.documentElement.clientHeight || document.body.clientHeight)  -200;\r\n        this.setState({\r\n            tableheight: boxheight\r\n        })\r\n        window.addEventListener('resize', this.handleResize.bind(this));\r\n        return ()=>{\r\n          window.removeEventListener('resize', this.handleResize.bind(this));\r\n        }\r\n    }\r\n    componentWillUnmount(){\r\n        if(ws){\r\n            ws.close();\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BreadNav title={\"应用管理\"} props={this.props}></BreadNav>\r\n                <DetailSet\r\n                    modalVisible={this.state.modalVisible}\r\n                    nowWatchData = {this.state.settingdata}\r\n                    closeModal = {this.closeModal.bind(this)}\r\n                />\r\n                 <Modal title=\"Pod信息\"  width=\"80%\"  maskClosable={false} visible={this.state.isModalVisible}  onCancel={this.handleCancel.bind(this)}>\r\n                        <Table\r\n                            columns={this.columns_pod}\r\n                            size=\"small\"\r\n                            dataSource={this.state.podTabledata}\r\n                        />\r\n                        <DetailSet\r\n                            modalVisible={this.state.modalVisible_pod}\r\n                            title={'pod配置'}\r\n                            nowWatchData = {this.state.settingdata}\r\n                            closeModal = {this.closeModal_pod.bind(this)}\r\n                        />\r\n                </Modal>\r\n                <PodLogDrawer\r\n                    logData = {this.state.podLogData}\r\n                    Reload = {this.wsReload.bind(this)}\r\n                    checkedChange = {this.checkedChange.bind(this)}\r\n                    linechange= {this.setline.bind(this)}\r\n                    Closeconnect = {this.wsClose.bind(this)}\r\n                    logDrawervisible = {this.state.podLogVisible}\r\n                    closeLogDrawer={this.closePodLogDrawer.bind(this)}\r\n                    closeTableSpining={this.closeTableSpining.bind(this)}\r\n                />\r\n                <div className=\"seacher\">\r\n                    <div className=\"floatele\">\r\n                        <span style={{color: \"rgb(0 0 0 / 85%)\",fontSize:'14px'}}>集群 </span>\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: 200 }}\r\n                            onChange={this.ClusterOnchange.bind(this)}\r\n                            value={this.state.params.cluster_name}\r\n                            filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                                {\r\n                                        this.state.clusterList.map(item=>{\r\n                                            return  <Option value={item}>{item}</Option>\r\n                                    })\r\n                                }\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"floatele\">\r\n                        <span style={{color: \"rgb(0 0 0 / 85%)\",fontSize:'14px'}}>命名空间 </span>\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: 200 }}\r\n                            value={this.state.params.namespace}\r\n                            onChange={this.NamespaceOnchange.bind(this)}\r\n                            filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                                    {\r\n                                        this.state.nameSpacelist.map(item=>{\r\n                                            return  <Option value={item}>{item}</Option>\r\n                                    })\r\n                                }\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"floatele\">\r\n                        <span style={{color: \"rgb(0 0 0 / 85%)\",fontSize:'14px'}}>pod控制器 </span>\r\n                        <Select\r\n                            style={{ width: 120 }}\r\n                            value={this.state.params.kind}\r\n                            onChange={this.kindOnchange.bind(this)}\r\n                        >\r\n                            <Option value={'deployment'}>deployment</Option>\r\n                            <Option value={'statefulset'}>statefulset</Option>\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"floatele\">\r\n                        <Button type=\"primary\" onClick={this.refreashData.bind(this)}>刷新</Button>\r\n                    </div>\r\n                </div>\r\n                <div style={{width:\"100%\",marginTop:'10px',height: this.state.tableheight+'px',background:'#fff',padding:'10px',boxSizing:'border-box',overflow:\"hidden\",overflowY:'scroll'}}>\r\n                    <Spin spinning={this.state.spinning}>\r\n                        <Table\r\n                            columns={this.state.params.kind == 'deployment'? this.columns_dep:this.columns_sate}\r\n                            size=\"small\"\r\n                            dataSource={this.state.tabledata}\r\n                        />\r\n                    </Spin>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(ProjectManagement);","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\breadNav.js",["718","719","720"],"import React, { useState ,Component} from \"react\";\r\nimport \"../css/index.less\"\r\nconst BreadNav = (props)=>{\r\n    console.log(props)\r\n    return(\r\n        <div\r\n            className={'self-title'}\r\n        >\r\n            <div className={'bread-crumbs'}>\r\n            <a className={'home'}\r\n                style={{\r\n                color: 'rgba(0, 0, 0, 0.45)',\r\n                }}\r\n                    onClick={()=>props.props.history.push(`/overview`)}\r\n            >首页</a>\r\n            <span\r\n                style={{\r\n                marginLeft: '8px',\r\n                marginRight: '8px',\r\n                color: 'rgba(0, 0, 0, 0.45)',\r\n                }}\r\n            >/</span>\r\n            <span\r\n                style={{\r\n                color: props.childtitle?'rgba(0, 0, 0, 0.45)':\"\",\r\n                }}\r\n            >{props.title}</span>\r\n            {\r\n                props.childtitle?\r\n                <>\r\n                    <span\r\n                        style={{\r\n                        marginLeft: '8px',\r\n                        marginRight: '8px',\r\n                        color: 'rgba(0, 0, 0, 0.45)',\r\n                    }}\r\n                    >/</span>\r\n                    <span>{props.childtitle}</span></>\r\n                    :\r\n                    null\r\n                \r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default BreadNav;","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\service\\project.js",[],["721","722"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\project\\components\\setting.js",["723","724","725","726"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {\r\n  Modal,\r\n  Select,\r\n  Input,\r\n  Form,\r\n} from 'antd';\r\nimport yaml from 'json2yaml';\r\nimport '../../../css/index.less'\r\nconst DetailSet = (props)=>{\r\n  const [nowWatch, setNowWatch] = useState('');\r\n  const [nowTextAreaValue, setNowTextAreaValue] = useState({});\r\n  const [form] = Form.useForm();\r\n  const changeNowWatch=(value)=>{\r\n    setNowWatch(value);\r\n  };\r\n  useEffect(()=>{\r\n    if(props.modalVisible){\r\n      nowTextAreaValue.json = JSON.stringify(props.nowWatchData,null,2);\r\n      nowTextAreaValue.yaml = yaml.stringify(props.nowWatchData,null,2);\r\n      setNowTextAreaValue(nowTextAreaValue);\r\n      form.setFieldsValue({'select':'yaml'});\r\n      setNowWatch('yaml');\r\n    }\r\n  },[props.modalVisible]);\r\n  const slefClose = ()=>{\r\n    setNowTextAreaValue({});\r\n    setNowWatch('');\r\n    form.setFieldsValue({'select':''});\r\n  };\r\n  return(\r\n    <>\r\n      <Modal\r\n        visible={props.modalVisible}\r\n        onCancel={()=>{props.closeModal();slefClose();}}\r\n        className={'configurationInfo'}\r\n        title={props.title?props.title:'配置详情'}\r\n        footer={[]}\r\n        width=\"70%\"\r\n        style={{\r\n          top: '20px'\r\n        }}\r\n      >\r\n        {/* <Form\r\n          form={form}\r\n          name={'logForm'}\r\n        >\r\n          <Form.Item\r\n            name={'select'}\r\n          >\r\n            <Select\r\n              onChange={changeNowWatch}\r\n              style={{\r\n                width: '100px',\r\n              }}\r\n              defaultValue={'yaml'}\r\n            >\r\n              <Select.Option value={'json'}>json</Select.Option>\r\n              <Select.Option value={'yaml'}>yaml</Select.Option>\r\n            </Select>\r\n          </Form.Item>\r\n        </Form> */}\r\n        <Input.TextArea\r\n          value={nowTextAreaValue[nowWatch]}\r\n        />\r\n      </Modal>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default DetailSet;\r\n","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\project\\components\\log.js",["727","728"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {Drawer, Select ,Space,Switch } from 'antd';\r\nimport CodeHighLight from './CodeHighLight/CodeHighLight'\r\nconst { Option } = Select;\r\nlet timeOut;\r\nconst PodLogDrawer = (props)=>{\r\n  const [defaultChecked,setdefaultChecked] = useState(true);\r\n  const stopDataFetch = ()=>{\r\n\r\n  };\r\n  const onChange = (value)=>{\r\n    console.log('value',value)\r\n    setdefaultChecked(value)\r\n    props.checkedChange(value)\r\n    if(value){\r\n      props.Reload()\r\n    } else {\r\n      props.Closeconnect()\r\n    }\r\n  }\r\n  const closeDraw = ()=>{\r\n  \r\n    props.closeLogDrawer()\r\n  }\r\n  const handleChange  = (value)=>{\r\n    console.log('value',value)\r\n    props.linechange(value)\r\n  }\r\n  useEffect(()=>{\r\n    if(props.logDrawervisible){\r\n      props.closeTableSpining();\r\n      setdefaultChecked(true)\r\n    }\r\n  },[props.logDrawervisible]);\r\n  useEffect(()=>{\r\n    console.log(props.logData);\r\n    if(props.logData){\r\n      timeOut = setTimeout(()=>{\r\n        document.getElementById('selfPodLog').scrollTop = document.getElementById('slefPodSpan').clientHeight;\r\n        clearTimeout(timeOut);\r\n      },100);\r\n    }\r\n  },[props.logData]);\r\n  return(\r\n    <Drawer\r\n      title={'log日志'}\r\n      placement=\"right\"\r\n      width={1200}\r\n      maskClosable={false}\r\n      onClose={closeDraw}\r\n      visible={props.logDrawervisible}\r\n      className={'logDrawer'}\r\n    >\r\n      <div style={{height: '40px',lineHeight: '40px',padding: '0 20px',boxSizing:'border-box'}}>\r\n         <Space>\r\n            {/* <Button type=\"primary\" size=\"small\" onClick={props.Reload}>开始滚动</Button>\r\n            <Button  type=\"danger\" size=\"small\" onClick={props.Closeconnect}>停止滚动</Button> */}\r\n            <Switch checked={defaultChecked} onChange={onChange} checkedChildren=\"开始滚动\" unCheckedChildren=\"停止滚动\"/>\r\n            <span>条数：</span><Select defaultValue=\"1000\" style={{ width: 120 }} onChange={handleChange}>\r\n              <Option value=\"1000\">1000</Option>\r\n              <Option value=\"500\">500</Option>\r\n              <Option value=\"100\">100</Option>\r\n            </Select>\r\n         </Space>\r\n      </div>\r\n      <pre\r\n       style={{'white-space':'pre-wrap','word-wrap':'break-word','word-break':'break-all', height: \"calc(100% - 40px)\", margin: 0,backgroundColor:'#001529'}}\r\n        id={'selfPodLog'}\r\n      >\r\n        <span\r\n          style={{\r\n            height: 'auto',\r\n            display: 'inline-block',\r\n            // width: '100%',\r\n            background:'#001529'\r\n          }}\r\n          id={'slefPodSpan'}\r\n        >\r\n              <CodeHighLight\r\n                code = {props.logData}\r\n                stopDataFetch={stopDataFetch}\r\n                logDrawervisible={props.logDrawervisible}\r\n              />\r\n        </span>\r\n      </pre>\r\n    </Drawer>\r\n  )\r\n};\r\nexport default PodLogDrawer;\r\n","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\project\\components\\CodeHighLight\\CodeHighLight.js",["729","730","731","732","733","734","735","736"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport \"./CodeHighLight.less\"\r\n\r\nconst CodeHighLight = (props)=>{\r\n  const [lineArr,setLineArr] = useState([]);\r\n  const [codeString,setCodeString] = useState('');\r\n  let str = props.code;\r\n  useEffect(()=>{\r\n    console.log(props)\r\n  });\r\n  // console.log(str);\r\n  let makeLine = ()=>{\r\n    // console.log(str);\r\n    let rowLength = str.split(/\\r\\n|\\r|\\n/).length;\r\n    console.log(rowLength);\r\n    let arr =[];\r\n    for(let i=1; i<=rowLength-1; i++){\r\n      arr.push(<div key={i}>{i}</div>);\r\n    }\r\n    setLineArr(arr);\r\n  };\r\n  let makeCode = ()=>{\r\n    let totalStr ='';\r\n\r\n    str.split(/\\r\\n|\\r|\\n/).forEach((item)=>{\r\n      if(item){\r\n        let wordsArr = item.split(' ');\r\n        let textPipeline = /\\[Pipeline]/;\r\n        let textGit = /> git/;\r\n        let rowArr = [];\r\n        let rowString = '';\r\n        wordsArr.forEach((word,index)=>{\r\n          let useWord = '';\r\n          useWord = word.replace(/\\</g, '&lt;');\r\n          useWord = useWord.replace(/\\>/g, '&gt;');\r\n          if(useWord === '[Pipeline]'){\r\n            rowString = rowString+`<span class='green'>[Pipeline] </span>`;\r\n          }else if(useWord === 'git'){\r\n            rowString = rowString+`<span class='gitBlue'>git</span> `;\r\n          }else if(useWord.match(/http|https/)){\r\n            rowString = rowString+`<span class='http'>${useWord}</span> `;\r\n          }else if(useWord === '='){\r\n            if(wordsArr[index+2] && wordsArr[index+2].search(':')){\r\n              rowString = rowString+`<span class=\"variable\">${wordsArr[index-1]}</span> <span>=</span> <span class=\"variableValue\">${wordsArr[index+1]} ${wordsArr[index+2]} </span>`;\r\n            }else {\r\n              rowString = rowString+`<span class=\"variable\">${wordsArr[index-1]}</span> <span>=</span> <span class=\"variableValue\">${wordsArr[index+1]} </span>`;\r\n            }\r\n\r\n          }else if(useWord === ''){\r\n            rowString = rowString+` `;\r\n          } else {\r\n            // console.log(word);\r\n            if(wordsArr[index-1] !== '=' && wordsArr[index+1] !== '=' && wordsArr[index-2] !== '='){\r\n              rowString = rowString+`<span>${useWord} </span>`;\r\n            }\r\n          }\r\n          if(useWord === 'Finished:'){\r\n            props.stopDataFetch();\r\n          }\r\n        });\r\n        rowString = `<div class=\"code-row\">${rowString}</div>`;\r\n        totalStr = totalStr+rowString;\r\n      }else {\r\n        // arr.push(<><br/></>);\r\n        totalStr = totalStr + '<br/>'\r\n      }\r\n\r\n    });\r\n    console.log(totalStr);\r\n    setCodeString(totalStr);\r\n  };\r\n  useEffect(()=>{\r\n    if(props.code){\r\n      makeLine();\r\n      makeCode();\r\n    }\r\n  },[props.code]);\r\n  if(str){\r\n    return(\r\n      <>\r\n        <div className={'codeHighLight-box'} >\r\n          {/* <div className={'line-box'}>\r\n            {lineArr}\r\n          </div> */}\r\n          <pre  style={{'white-space':'pre-wrap',' word-wrap':'break-word',' word-break':'break-all'}} className={'code-box'} dangerouslySetInnerHTML = {{ __html: codeString }}>\r\n        </pre>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  else {\r\n    return <></>\r\n  }\r\n};\r\nexport default CodeHighLight;\r\n",["737","738"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\release\\index.js",["739","740","741","742","743","744"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Table, Tag, DatePicker,Popover ,Select,Space,Spin,Menu, Dropdown, message} from 'antd';\r\nimport {\r\n  PlusCircleOutlined,\r\n  ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\nimport \"../../css/index.less\"\r\nimport Synchronization from './synchronization';\r\nimport BreadNav from '../breadNav'\r\nimport {_getReleasehistory} from '../../service/release'\r\nimport {_getProjectList} from '../../service/server'\r\n\r\nconst {Option} = Select;\r\nconst { RangePicker } = DatePicker;\r\nconst ReleaseManager = (props)=>{\r\nconst columns = [\r\n    {\r\n        title: '同步计划名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: '同步版本',\r\n        dataIndex: 'modules',\r\n        key: 'modules',\r\n    },\r\n    {\r\n        title: '镜像状态',\r\n        dataIndex: 'sync_image_status',\r\n        key: 'sync_image_status',\r\n    },\r\n    {\r\n        title: 'sql状态',\r\n        dataIndex: 'sync_sql_status',\r\n        key: 'sync_sql_status',\r\n        render: (text,record)=>{\r\n        if(text === 'FAILED'){\r\n            return (\r\n            <>\r\n                <Popover\r\n                  content={(<pre style={{'white-space':'pre-wrap',' word-wrap':'break-word',' word-break':'break-all'}}>{record.log?record.log:\"无log\"}</pre>)}\r\n                >\r\n                    {text}\r\n                <ExclamationCircleOutlined\r\n                    style={{\r\n                    marginLeft: '5px'\r\n                    }}\r\n                />\r\n                </Popover>\r\n            </>)\r\n        }\r\n        else if(text !== 'FAILED') {\r\n            return (<>{text}</>)\r\n        }\r\n        }\r\n    },\r\n    {\r\n        title: '同步时间',\r\n        dataIndex: 'time',\r\n        key: 'time',\r\n    },\r\n    {\r\n        title: '创建人',\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        },\r\n];\r\nconst [tableheight,setTableheight] = useState((document.documentElement.clientHeight || document.body.clientHeight)-200)\r\n  const [spinning, setSpinning ] = useState(false);\r\n  const [synVisible, setSynVisible] = useState(false);\r\n  const [projectList,setProjectList] = useState([])\r\n  const [issueHistoryData, setIssueHistoryData] = useState([]);\r\n  const [projectname, setProjectname] = useState(undefined);\r\n  const [envName,setEnvname] = useState('it')\r\n  const selectRef = useRef();\r\n  const synOpenModal = ()=>{\r\n    setSynVisible(true);\r\n  };\r\n  const synCloseModal = ()=>{\r\n    setSynVisible(false);\r\n    makeIssueHistoryData({projectname: projectname,envName})\r\n  };\r\n  const getProjectlist = async()=>{\r\n    const res = await _getProjectList({user: localStorage.getItem('currentUm')})\r\n    if(res.status === 200 && res.data.Code === 0){\r\n        setProjectList(res.data.data)\r\n        if(res.data.data.length>0){\r\n            setProjectname(res.data.data[0])\r\n            // makeIssueHistoryData(res.data.data[0].name);\r\n        }\r\n    }\r\n  }\r\n  const makeIssueHistoryData = async(obj)=>{\r\n        setSpinning(true)\r\n      const res = await _getReleasehistory({projectname: obj.projectname,env: obj.envName})\r\n      console.log('release',res)\r\n      if(res.status === 200 && res.data.Code === 0){\r\n        setIssueHistoryData(res.data.data)\r\n        setSpinning(false)\r\n      } else {\r\n          message.error('获取发布历史失败')\r\n          setSpinning(false)\r\n      }\r\n  };\r\n\r\n  const appNameChange = (value) =>{\r\n    console.log('appNameChange',value)\r\n    setProjectname(value)\r\n  }\r\n  const envChange = (value)=>{\r\n    setEnvname(value)\r\n  }\r\n  useEffect(()=>{\r\n    getProjectlist()\r\n  },[])\r\n  useEffect(()=>{\r\n    if(!projectname || !envName) return\r\n    makeIssueHistoryData({projectname,envName})\r\n  },[projectname]);\r\n  useEffect(()=>{\r\n    if(!projectname || !envName) return\r\n    makeIssueHistoryData({projectname,envName})\r\n  },[envName])\r\n  useEffect(()=>{ \r\n    let boxheight = (document.documentElement.clientHeight || document.body.clientHeight)  -200;\r\n    setTableheight(boxheight)\r\n    window.addEventListener('resize', handleResize);\r\n    return ()=>{\r\n      window.removeEventListener('resize', handleResize);\r\n    }\r\n  },[]);\r\nconst handleResize = ()=>{\r\n    let boxheight = (document.documentElement.clientHeight || document.body.clientHeight) - 200;\r\n    setTimeout(()=>{\r\n        setTableheight(boxheight)\r\n    },100)\r\n}\r\n  return(\r\n    <>\r\n      <BreadNav title={\"同步管理\"} props={props}></BreadNav>\r\n      <div className=\"seacher\" style={{marginBottom: '10px'}}>\r\n        <Space>\r\n          <div>\r\n            <span style={{fontSize: '12px'}}>项目名称 </span>\r\n            <Select onChange={appNameChange} value={projectname} style={{width: '200px'}} allowClear placeholder=\"请选择项目\" ref={selectRef} showSearch>\r\n              {projectList.map((item,index) => {\r\n                return <Option value={item} key={'Option'+index}>{item}</Option>;\r\n              })}\r\n            </Select>\r\n          </div>\r\n           <div>\r\n              <span style={{fontSize: '12px'}}>环境  </span>\r\n              <Select onChange={envChange} value={envName} style={{width: '200px'}} allowClear placeholder=\"请选择项目\" ref={selectRef} showSearch>\r\n                <Option value='it'>it</Option>\r\n                <Option value='uat'>uat</Option>\r\n              </Select>\r\n           </div>\r\n            <Button\r\n                icon={<PlusCircleOutlined />}\r\n                onClick={synOpenModal}\r\n            >\r\n                创建同步计划\r\n            </Button>\r\n           \r\n          </Space>\r\n      </div>\r\n      <div style={{minHeight:tableheight+'px',background:'#fff',padding:'10px',boxSizing:'border-box'}}>\r\n        <Spin spinning={spinning}>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={issueHistoryData}\r\n            size={'small'}\r\n            rowKey={record => record.id}\r\n            \r\n          />\r\n        </Spin>\r\n      </div>\r\n      \r\n      <Synchronization\r\n        synVisible = {synVisible}\r\n        projectname={projectname}\r\n        envName={envName}\r\n        synCloseModal = {synCloseModal}\r\n      />\r\n    </>\r\n  )\r\n};\r\nexport default withRouter(ReleaseManager);\r\n","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\release\\synchronization.js",["745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {Button, Transfer , Form, Input, Select, Modal, Descriptions ,Upload,message,Popconfirm ,Spin, Row} from \"antd\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport {_getReleaseversion,_getReleasePlainname,_createPlan,_forcePlan} from '../../service/release'\r\nconst Synchronization = (props)=>{\r\n  const [form] = Form.useForm();\r\n  const [planList, setPlanList] = useState([]);\r\n  \r\n  const [currentVersion, setCurrentVersion] = useState([]);\r\n  const [targetKeys, setTargetKeys] = useState([]);\r\n  const [surevisible,setSurevisible]  = useState(false);\r\n  const [spinning,setSpinning]   = useState(false);\r\n  const [fileList,setfileList]  = useState([]);\r\n  const [allversions,setAllversions] = useState([]);\r\n  const [blobs,setBlob] = useState('');\r\n  const [selectedKeys, setSelectedKeys] = useState([]);\r\n  const onChange = (nextTargetKeys, direction, moveKeys) => {\r\n    console.log('targetKeys:', nextTargetKeys);\r\n    \r\n    setTargetKeys(nextTargetKeys);\r\n  };\r\n\r\n  const onSelectChange = (sourceSelectedKeys, targetSelectedKeys) => {\r\n    // console.log('sourceSelectedKeys:', sourceSelectedKeys);\r\n    // console.log('targetSelectedKeys:', targetSelectedKeys);\r\n    setSelectedKeys([...sourceSelectedKeys, ...targetSelectedKeys]);\r\n  };\r\n\r\n  const onScroll = (direction, e) => {\r\n    console.log('direction:', direction);\r\n    console.log('target:', e.target);\r\n  };\r\n  const confirm = ()=>{\r\n      setSurevisible(false)\r\n      creatPlain()\r\n  }\r\n  const cancel = () => {\r\n      setSurevisible(false)\r\n      message.error('您已经取消创建发布任务！！！');\r\n  };\r\n  const creatPlain = async()=>{\r\n    \r\n    let filedsValue = form.getFieldsValue();\r\n    let canCreateSynPlan = form.validateFields();\r\n    await canCreateSynPlan;\r\n    console.log('filedsValue',filedsValue,'fileList',fileList)\r\n    let params = {};\r\n \r\n    if(fileList.length!==0){\r\n      if (filedsValue.files.file.type !== '' && filedsValue.files.file.name.indexOf('.sql') == -1) {\r\n        message.error(`${filedsValue.files.file.name} 不是sql文件`);\r\n        return false;\r\n      } \r\n      if(filedsValue.files.file.name.indexOf('.sql') >=0 && filedsValue.files.file.name.indexOf('ddl') == -1){\r\n        message.error(`${filedsValue.files.file.name} 不包含ddl字段信息 `);\r\n        return false;\r\n      }else {\r\n        params.sql = blobs\r\n        params.sql_name  = filedsValue.files.file.name\r\n      }\r\n    }\r\n    \r\n    params.name = filedsValue.planName;\r\n    params.project = props.projectname;\r\n    let versions = []\r\n    if(targetKeys.length>0 && allversions.length>0){\r\n      targetKeys.map(item =>{\r\n        let arr = item.split(':')\r\n        let obj = {\r\n          name: arr[0],\r\n          tag: arr[1]\r\n        }\r\n        versions.push(obj)\r\n      })\r\n    }\r\n    params.modules = versions;\r\n    params.env = props.envName;\r\n    setSpinning(true)\r\n    const res = await _forcePlan(params)\r\n    if( res.status === 200 && res.data.Code  === 0){\r\n        setSpinning(false)\r\n        resetForm()\r\n    } else {\r\n      message.error(res.data.Message)\r\n      setSpinning(false)\r\n    }\r\n\r\n  }\r\n  const getData = ()=>{\r\n    _getReleaseversion({projectname: props.projectname,env: props.envName}).then(res=>{\r\n      console.log('_getReleaseversion',res)\r\n      if(res.status === 200 && res.data.Code == 0){\r\n        let arr = []\r\n        // for(let i = 0; i<= 10;i++){\r\n        //   let obj = {\r\n        //     key: i,\r\n        //     title: 'content'+i,\r\n        //     description: 'content'+i,\r\n        //   }\r\n        //   arr.push(obj)\r\n        // }\r\n        res.data.data && res.data.data.length>0 && res.data.data.map( (item, index) =>{\r\n          let obj = {\r\n            key: item.name+' : '+ item.tag,\r\n            title:item.name+' : '+ item.tag,\r\n            description: item.name,\r\n          }\r\n          arr.push(obj)\r\n        })\r\n        setAllversions(res.data.data)\r\n        setCurrentVersion(arr)\r\n        \r\n      } \r\n    })\r\n    _getReleasePlainname({projectname: props.projectname}).then(res=>{\r\n      console.log('_getReleasePlainname',res)\r\n      if(res.status === 200 && res.data.Code == 0){\r\n        setPlanList(res.data.data)\r\n      }\r\n    })\r\n  }\r\n  useEffect(()=>{\r\n    if(props.synVisible){\r\n      getData()\r\n    }\r\n  },[props.synVisible]);\r\n  const beforeUpload = (file)=>{\r\n    console.log('beforeUpload == file',file)\r\n    if (file.type !== '' && file.name.indexOf('.sql') == -1) {\r\n      message.error(`${file.name} 不是sql文件 `);\r\n      return false;\r\n    }\r\n    if(file.name.indexOf('.sql') >=0 && file.name.indexOf('ddl') == -1){\r\n      message.error(`${file.name} 不包含ddl字段信息 `);\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n const onFilechange = (info)=>{\r\n    console.log('onFilechange',info)\r\n    if (info.file.type !== '' && info.file.name.indexOf('.sql')== -1) {\r\n      return false;\r\n    }\r\n    if(info.file.name.indexOf('.sql') >=0 && info.file.name.indexOf('ddl') == -1){\r\n      return false;\r\n    }\r\n    let blob = null;\r\n    let arr = [info.file]\r\n    var file = info.file\r\n    var reader = new FileReader()\r\n    try{\r\n      reader.readAsDataURL(file)\r\n    }catch(e){\r\n      reader.readAsDataURL( info.file.originFileObj)\r\n    }\r\n    reader.onload = function(e) {\r\n      if(typeof e.target.result == 'object'){\r\n        blob = new Blob([e.target.result])\r\n      } else {\r\n        blob = e.target.result\r\n      }\r\n      let str = blob.replace('data:application/octet-stream;base64,','')\r\n      console.log(str)\r\n      setBlob(str)\r\n    }\r\n  setfileList(arr)\r\n }\r\n  const checkSyncplain = async ()=>{\r\n    let filedsValue = form.getFieldsValue();\r\n    let canCreateSynPlan = form.validateFields();\r\n    await canCreateSynPlan;\r\n    console.log('filedsValue',filedsValue,'fileList',fileList)\r\n    let params = {};\r\n \r\n    if(fileList.length!==0){\r\n      if (filedsValue.files.file.type !== '' && filedsValue.files.file.name.indexOf('.sql') == -1) {\r\n        message.error(`${filedsValue.files.file.name} 不是sql文件`);\r\n        return false;\r\n      } \r\n      if(filedsValue.files.file.name.indexOf('.sql') >=0 && filedsValue.files.file.name.indexOf('ddl') == -1){\r\n        message.error(`${filedsValue.files.file.name} 不包含ddl字段信息 `);\r\n        return false;\r\n      }else {\r\n        params.sql = blobs\r\n        params.sql_name  = filedsValue.files.file.name\r\n      }\r\n    }\r\n\r\n    params.name = filedsValue.planName;\r\n    params.project = props.projectname;\r\n    let versions = []\r\n    if(targetKeys.length>0 && allversions.length>0){\r\n      targetKeys.map(item =>{\r\n        let arr = item.split(':')\r\n        let obj = {\r\n          name: arr[0],\r\n          tag: arr[1]\r\n        }\r\n        versions.push(obj)\r\n      })\r\n    }\r\n    params.modules = versions;\r\n    params.env = props.envName;\r\n    setSpinning(true)\r\n    const res = await _createPlan(params)\r\n    if( res.status === 200 && res.data.Code  === 201){\r\n       setSurevisible(true)\r\n       setSpinning(false)\r\n    } else if(res.data.Code == 0) {\r\n      resetForm()\r\n    }\r\n  };\r\n  const resetForm =()=>{\r\n    setSpinning(false)\r\n    form.setFieldsValue({\r\n      files: {},\r\n      planName:[]\r\n    })\r\n    setfileList([])\r\n    setCurrentVersion([])\r\n    setBlob('')\r\n    props.synCloseModal();\r\n  }\r\n  const  cancelModal = ()=>{\r\n   \r\n    resetForm()\r\n  }\r\n  return(\r\n    <Modal\r\n      visible = {props.synVisible}\r\n      onCancel={cancelModal}\r\n      title={'创建同步计划'}\r\n      placement=\"right\"\r\n      width='60%'\r\n      footer={[\r\n        <Popconfirm\r\n          title=\"计划名重复了,您确定覆盖么？\"\r\n          visible={surevisible}\r\n          onConfirm={confirm}\r\n          onCancel={cancel}\r\n          okText=\"覆盖\"\r\n          cancelText=\"取消\"\r\n          >\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            onClick={checkSyncplain}\r\n          >\r\n            确定\r\n          </Button>\r\n        </Popconfirm>,\r\n        <Button\r\n          key=\"back\"\r\n          onClick={props.synCloseModal}\r\n        >\r\n          关闭\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Spin spinning={spinning} tip='正在创建发布中......'>\r\n        <Form\r\n          form={form}\r\n          name={'synchronization'}\r\n        >\r\n          <Form.Item\r\n            label={'SQL文件'}\r\n            name={'files'}\r\n            style={{marginTop: \"20px\"}}\r\n          >\r\n            <Upload\r\n              maxCount={1}\r\n              onChange = {onFilechange}\r\n              beforeUpload = {beforeUpload}\r\n            >\r\n                <Button icon={<UploadOutlined />}>选择文件</Button>\r\n            </Upload>\r\n            {/* <input type=\"file\" onChange={fileChange} /> */}\r\n          </Form.Item>\r\n  \r\n          <Form.Item\r\n              label={'同步模块'}\r\n              name={'modules'}\r\n            >\r\n               <Transfer\r\n                dataSource={currentVersion}\r\n                titles={['请选择待同步的模块', '待同步的模块']}\r\n                targetKeys={targetKeys}\r\n                selectedKeys={selectedKeys}\r\n                onChange={onChange}\r\n                onSelectChange={onSelectChange}\r\n                onScroll={onScroll}\r\n                listStyle={{\r\n                  width: '100%',\r\n                }}\r\n                render={item => item.title}\r\n              />\r\n              {/* <Descriptions\r\n                size={'small'}\r\n                column = {2}\r\n                // bordered = {true}\r\n              >\r\n                {\r\n                  currentVersion && currentVersion.map((item)=>{\r\n                    return(\r\n                      <>\r\n                        <Descriptions.Item\r\n                          label=\"模块名\"\r\n                        >\r\n                          {item.name}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item\r\n                          label={'tag'}\r\n                        >\r\n                          {item.tag}\r\n                        </Descriptions.Item>\r\n                      </>\r\n                    )\r\n                  })\r\n                }\r\n              </Descriptions> */}\r\n            </Form.Item>\r\n          <Form.Item\r\n            label={'计划名'}\r\n            name={'planName'}\r\n            rules={[{ required: true, message: '该项为必填项' }]}\r\n          >\r\n            <Select>\r\n              {\r\n                planList && planList.map((item,index)=>{\r\n                  return(<Select.Option value={item} key={index+'pl'}>{item}</Select.Option>)\r\n                })\r\n              }\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n      </Spin>\r\n    </Modal>\r\n  )\r\n};\r\nexport default Synchronization;\r\n","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\service\\release.js",[],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\main.js",[],["764","765"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\overview\\index.js",["766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\overview\\colors.js",[],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\overview\\options.js",[],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\index.js",["792","793","794"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {Route, Switch,withRouter} from \"react-router-dom\";\r\nconst Configmanagement = (props)=>{\r\n    // useEffect(()=>{ \r\n    //     let boxheight = (document.documentElement.clientHeight || document.body.clientHeight)  -200;\r\n    //     setTableheight(boxheight)\r\n    //     window.addEventListener('resize', handleResize);\r\n    //     return ()=>{\r\n    //     window.removeEventListener('resize', handleResize);\r\n    //     }\r\n    // },[]);\r\n    // const handleResize = ()=>{\r\n    //     let boxheight = (document.documentElement.clientHeight || document.body.clientHeight) - 200;\r\n    //     setTimeout(()=>{\r\n    //         setTableheight(boxheight)\r\n    //     },100)\r\n    // }\r\n  return(\r\n    <>\r\n       <Switch>\r\n          <Route path='/configmanagement/configMap'  exact={true}  component={global.ConfigMap} />\r\n          <Route path='/configmanagement/nacos'    exact={true}  component={global.Nacos} />\r\n          <Route path='/configmanagement/nginx'    exact={true}  component={global.Nginx} />\r\n        </Switch>\r\n    </>\r\n  )\r\n};\r\nexport default withRouter(Configmanagement);\r\n","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\configMap.js",["795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Tabs , Input, DatePicker,Popover ,Select,Space,Spin,Menu, Dropdown, message} from 'antd';\r\nimport {\r\n  PlusCircleOutlined,\r\n  ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\nimport \"../../css/index.less\"\r\nimport BreadNav from '../breadNav'\r\n// import {_getReleasehistory} from '../../service/release'\r\nimport {_getauthInfo} from '../../service/server'\r\nimport {_getClusterlist,_getNamespacelist,_getkubernetesresource,_getConfiguration,_saveConfiguration,_updatedatefiguration} from '../../service/config'\r\nimport Setting from './components/seeting'\r\nimport Deploy from './components/deploy'\r\nconst {Option} = Select;\r\nconst { TabPane } = Tabs;\r\nconst { RangePicker } = DatePicker;\r\nconst Configmanagement = (props)=>{\r\n    const [params,setParams] = useState({\r\n        cluster_name: '',\r\n        namespace:\"\",\r\n        kind:\"configmap\",\r\n    })\r\n    const [nameSpacelist,setNameSpacelist] = useState([])\r\n    const [clusterList,setClusterList] = useState([])\r\n    const [configmaplist,setConfigmaplist] = useState([])\r\n    const [configList,setConfigList] = useState([])\r\n    const [tableheight,setTableheight] = useState(0)\r\n    const [deploy,setdeploy]  = useState('')\r\n    const [currenttype,setCurrenttype] =  useState(\"1\")\r\n    const [spinning,setSpinning] = useState(false)\r\n    const [addfalse,setAddfalse]  = useState(false)\r\n    const ClusterOnchange = async(value) =>{\r\n        let user  = localStorage.getItem('currentUm');\r\n        let _params = params;\r\n        const res2 = await _getNamespacelist({cluster_name: value,user})\r\n        if(res2.status === 200 && res2.data.Code === 0){\r\n            setNameSpacelist(res2.data.data)\r\n            _params.namespace = res2.data.data[0]\r\n            _params.cluster_name = value\r\n            setTimeout(() => {\r\n                setParams({..._params})\r\n                getSetting({..._params})\r\n            }, 0);\r\n        }\r\n    }\r\n    const NamespaceOnchange = (value)=>{\r\n        let _params = {...params}\r\n        _params.namespace = value\r\n        setParams({..._params})\r\n       \r\n        if(currenttype == '1'){\r\n            getSetting({..._params})\r\n        }\r\n        if( currenttype == '2'){\r\n            setdeploy(+new Date())\r\n        }\r\n    }\r\n    const doseacher = ()=>{\r\n        if(currenttype == '1'){\r\n            getSetting(params)\r\n        }\r\n    }\r\n    // const getconfiglist = async(params)=>{\r\n    //     const res = await _getkubernetesresource({...params})\r\n    //     if(res.status === 200 && res.data.Code === 0){\r\n    //         setConfigmaplist(res.data.data)\r\n    //     } else {\r\n    //         setConfigmaplist([])\r\n    //     }\r\n    // }\r\n    const getClusterlist = async()=>{\r\n        let user  = localStorage.getItem('currentUm');\r\n        let _params = params\r\n        const res = await _getClusterlist({user})\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            if(res.data.data.length>0){\r\n                setClusterList(res.data.data)\r\n                _params.cluster_name = res.data.data[0]\r\n                const res2 = await _getNamespacelist({cluster_name: res.data.data[0],user})\r\n                if(res2.status === 200 && res2.data.Code === 0){\r\n                    setNameSpacelist(res2.data.data)\r\n                    _params.namespace = res2.data.data[0]\r\n                    setTimeout(() => {\r\n                        setParams({..._params})\r\n                        getSetting({..._params})\r\n                    }, 0);\r\n                }\r\n            }\r\n           \r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getClusterlist()\r\n    },[])\r\n    useEffect(()=>{ \r\n        let boxheight = (document.documentElement.clientHeight || document.body.clientHeight)  -200;\r\n        setTableheight(boxheight)\r\n        window.addEventListener('resize', handleResize);\r\n        return ()=>{\r\n        window.removeEventListener('resize', handleResize);\r\n        }\r\n    },[]);\r\n    const handleResize = ()=>{\r\n        let boxheight = (document.documentElement.clientHeight || document.body.clientHeight) - 200;\r\n        setTimeout(()=>{\r\n            setTableheight(boxheight)\r\n        },100)\r\n    }\r\n    const getSetting = async(_params)=>{\r\n        setSpinning(true)\r\n        const res = await _getConfiguration(_params);\r\n            if( res.status === 200 && res.data.Code === 0){\r\n                setConfigList(res.data.data)\r\n                setSpinning(false)\r\n            } else {\r\n                setConfigList([])\r\n                setSpinning(false)\r\n            }\r\n    }\r\n   const callback = async (key) =>{\r\n        console.log(key);\r\n        setCurrenttype(key)\r\n        if(key == '1'){\r\n            getSetting(params)\r\n            // setdeploy(false)\r\n        }\r\n        if( key == '2'){\r\n            setdeploy(+new Date())\r\n        }\r\n      }\r\n    const saveData = async(values,type)=>{\r\n        console.log('codevalue',values)\r\n        let res = null;\r\n        if(type == 0){\r\n            res = await _saveConfiguration(values)\r\n        } \r\n        if(type == 1){\r\n            res = await _updatedatefiguration(values)\r\n        }\r\n       \r\n        if(res.status === 200 && res.data.Code === 0){\r\n            message.success('配置成功')\r\n            setAddfalse(true)\r\n        } else {\r\n            message.error(res.data.message || '配置失败')\r\n        }\r\n    }\r\n\r\n  return(\r\n    <>\r\n      <BreadNav title={\"配置管理\"} props={props} childtitle={'ConfigMap'}></BreadNav>\r\n        <div className=\"seacher\">\r\n                    <div className=\"floatele\">\r\n                        <span style={{color: \"rgb(0 0 0 / 85%)\",fontSize:'14px'}}>集群 </span>\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: 200 }}\r\n                            onChange={ClusterOnchange}\r\n                            value={params.cluster_name}\r\n                            filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                                {\r\n                                        clusterList.map(item=>{\r\n                                            return  <Option value={item}>{item}</Option>\r\n                                    })\r\n                                }\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"floatele\">\r\n                        <span style={{color: \"rgb(0 0 0 / 85%)\",fontSize:'14px'}}>命名空间 </span>\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: 300 }}\r\n                            value={params.namespace}\r\n                            onChange={NamespaceOnchange}\r\n                            filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                                {\r\n                                    nameSpacelist.map(item=>{\r\n                                        return  <Option value={item}>{item}</Option>\r\n                                    })\r\n                                }\r\n                        </Select>\r\n                    </div>\r\n                    {/* <div className=\"floatele\">\r\n                        <span style={{color: \"rgb(0 0 0 / 85%)\",fontSize:'14px'}}>名称 </span>\r\n                        <Input value={params.name} style={{width: '180px'}}/>\r\n                    </div> */}\r\n                    {/* <div className=\"floatele\">\r\n                        <Button type=\"primary\" size=\"small\" onClick={doseacher}>查询</Button>\r\n                    </div> */}\r\n        </div>\r\n        <div style={{height: tableheight+'px',overflow:'hidden',overflowY:'scroll',background: '#fff',marginTop:'10px',padding: '0 20px'}} className=\"configmapbox\">\r\n            <Spin spinning={spinning}>\r\n                <Tabs defaultActiveKey=\"1\" onChange={callback}>\r\n                    <TabPane tab=\"配置\" key=\"1\">\r\n                        <Setting params={params} clusterList={clusterList} nameSpacelist={nameSpacelist} addfalse={addfalse} configList={configList} saveData={saveData}/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"发布\" key=\"2\">\r\n                        <Deploy deploy={deploy} params={params}/>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </Spin>\r\n        </div>\r\n    </>\r\n  )\r\n};\r\nexport default withRouter(Configmanagement);\r\n","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\nacos.js",["818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\nginx.js",["843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Table, Tag, DatePicker,Popover ,Select,Space,Spin,Menu, Dropdown, message} from 'antd';\r\nimport {\r\n  PlusCircleOutlined,\r\n  ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\nimport \"../../css/index.less\"\r\n// import Synchronization from './synchronization';\r\nimport BreadNav from '../breadNav'\r\n// import {_getReleasehistory} from '../../service/release'\r\n// import {_getProjectList} from '../../service/server'\r\n\r\nconst {Option} = Select;\r\nconst { RangePicker } = DatePicker;\r\nconst Configmanagement = (props)=>{\r\n\r\n    // useEffect(()=>{ \r\n    //     let boxheight = (document.documentElement.clientHeight || document.body.clientHeight)  -200;\r\n    //     setTableheight(boxheight)\r\n    //     window.addEventListener('resize', handleResize);\r\n    //     return ()=>{\r\n    //     window.removeEventListener('resize', handleResize);\r\n    //     }\r\n    // },[]);\r\n    // const handleResize = ()=>{\r\n    //     let boxheight = (document.documentElement.clientHeight || document.body.clientHeight) - 200;\r\n    //     setTimeout(()=>{\r\n    //         setTableheight(boxheight)\r\n    //     },100)\r\n    // }\r\n  return(\r\n    <>\r\n      nginx\r\n    </>\r\n  )\r\n};\r\nexport default withRouter(Configmanagement);\r\n","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\service\\config.js",[],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\components\\seeting.js",["860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {Table,Space,Button,Modal,Form, Input,Tooltip ,Spin,Row,Col,Popconfirm,message,Select} from 'antd';\r\nimport {PlusOutlined,DeleteOutlined,EditOutlined} from '@ant-design/icons'\r\n// import CodeMirror from '@uiw/react-codemirror';\r\nimport {UnControlled as _CodeMirror} from 'react-codemirror2'\r\nimport getYAMLJS from 'yamljs'\r\nimport {_getConfigurationDetail} from '../../../service/config'\r\nimport CodeMirrors from '../codediff/codeDiff'\r\nimport 'codemirror/mode/yaml/yaml';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/lib/codemirror.js'\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/idea.css'  // 主题: idea\r\nimport 'codemirror/theme/solarized.css'\r\n// import '../../../css/newSet.styl'\r\nimport {_getClusterlist,_configurationdelete,_getNamespacelist,_updatedatefiguration,_getConfiguration,_getConfigurationdiff} from '../../../service/config'\r\nconst { Option } = Select;\r\nconst Setting  =  (props)=>{\r\n    console.log('prpes====',props)\r\n    const [data,setData] = useState([])\r\n    const [selectedRowKeys,setselectedRowKeys] = useState([])\r\n    const [filterdata,setFilterdata]  = useState([])\r\n    const [modalfilterdata,setModalfilterdata]  = useState([])\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [lodaing,setlodaing] = useState(false)\r\n    const [currenttype,setCurrenttype] = useState(null)\r\n    const [currentrow, setCurrentrow] = useState({})\r\n    const [detaildata, setDetaildata] = useState({})\r\n    const columns = []\r\n    let editref =  null;\r\n    const [spinning, setSpinning] = useState(false)\r\n    const [instance,setInstance] = useState(null)\r\n    const [form] = Form.useForm();\r\n    const [codevalue,setCodevalue] = useState('')\r\n    const [nowname,setNowname] = useState({\r\n        cluster_name: props.params.cluster_name,\r\n        namespace:  props.params.namespace,\r\n        kind:\"configmap\" ,\r\n        name: ''\r\n    })\r\n    const [showedit,setshowedit] = useState(false)\r\n    const [FileContentData,setFileContentData] = useState({lhContent: '',rhContent: ''})\r\n    const [params,setParams] = useState({\r\n        cluster_name: props.params.cluster_name,\r\n        namespace: props.params.namespace,\r\n        kind:\"configmap\",\r\n    })\r\n    const [leftSelectname,setLeftSelectname] =  useState(undefined)\r\n    const [nameSpacelist,setNameSpacelist] = useState([])\r\n    const [clusterList,setClusterList] = useState([])\r\n    const [isdiffModalVisible,setIsdiffModalVisible] = useState(false);\r\n    const rowSelection = {\r\n        selectedRowKeys: selectedRowKeys,\r\n        onChange: selectedRowKeys => {\r\n            console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n            // this.setState({ selectedRowKeys });\r\n            setselectedRowKeys(selectedRowKeys)\r\n          },\r\n        // getCheckboxProps: (record) => ({\r\n        //   disabled: record.name === 'Disabled User',\r\n        //   // Column configuration not to be checked\r\n        //   name: record.name,\r\n        // }),\r\n    }\r\n    const getData = ()=>{\r\n        if( props.configList && props.configList.length > 0 ){\r\n            let arr = [];\r\n            let _arrfilter = []\r\n            props.configList.map((item,index)=>{\r\n                let obj = {}\r\n                obj.text = <span>{item.name}</span>\r\n                obj.value = item.name\r\n                item.key = index;\r\n                arr.push(item)\r\n                _arrfilter.push(obj)\r\n            })\r\n            setData(arr)\r\n            setFilterdata(_arrfilter)\r\n        }\r\n    }\r\n    const addSetting = (type,row)=>{\r\n        // debugger\r\n    //    codeMirrorref.current.setSize(\"100%\",\"100%\") \r\n        if(type == 0){\r\n            form.setFieldsValue({\r\n                cluster: props.params.cluster,\r\n                namespace:  props.params.namespace,\r\n            })\r\n            setIsModalVisible(true)\r\n           \r\n        } else if(type == 1 || type == 2){\r\n            form.setFieldsValue({\r\n                name: row.name,\r\n            })\r\n            setCurrentrow(row)\r\n            getdetail(row)\r\n        } \r\n        setCurrenttype(type)\r\n       \r\n    }\r\n    const getdetail = async(data)=>{\r\n        let params = {\r\n            cluster_name: props.params.cluster_name,\r\n            namespace: props.params.namespace,\r\n            name: data.name,\r\n            kind: \"configmap\",// 该字段是固定的\r\n        }\r\n        setlodaing(true)\r\n        const res = await _getConfigurationDetail(params)\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            let _data = res.data.data;\r\n            let obj2 = getYAMLJS.stringify(_data);\r\n            setCodevalue(obj2)\r\n            setDetaildata(res.data.data)\r\n            setIsModalVisible(true)\r\n        }\r\n        setlodaing(false)\r\n    }\r\n    const cancel = () =>{\r\n        addhandleCancel()\r\n        \r\n    }\r\n    const  confirm = async(e) =>{\r\n        let type = currenttype;\r\n        let filedsValue = form.getFieldsValue();\r\n        let canCreateSynPlan = form.validateFields();\r\n        await canCreateSynPlan;\r\n        console.log('filedsValue',filedsValue)\r\n        let data = instance.getValue();\r\n        let obj2 = null\r\n        // debugger\r\n        // console.log('codemrrow',instance)\r\n        if(data=='' || data==null || data==undefined){\r\n            message.error('请输入编译内容')\r\n            return false\r\n          }\r\n        try {\r\n            // 校验文件是否为 yaml\r\n            obj2 = getYAMLJS.parse(data);\r\n            console.log('obj',obj2) \r\n        \r\n        } catch {\r\n            message.error(\"请使用 yaml 文件\")\r\n            // CodeMirror.doc.setValue(\"\")\r\n            return false\r\n        }\r\n        let params = {\r\n            cluster_name: props.params.cluster_name,\r\n            namespace: props.params.namespace,\r\n            name: filedsValue.name,\r\n            user: localStorage.getItem('currentUm'),\r\n            kind: \"configmap\",// 该字段是固定的\r\n            data: getYAMLJS.parse(data)\r\n        }\r\n        props.saveData(params,type);\r\n        addhandleCancel()\r\n\r\n    }\r\n    const addhandleCancel = ()=>{\r\n        form.resetFields();\r\n        form.setFieldsValue({\r\n            name: '',\r\n        })\r\n        instance.setValue('')\r\n        setCodevalue('')\r\n        // setInstance(null)\r\n        setIsModalVisible(false)\r\n    }\r\n    const onFinish =(value)=>{\r\n        // // let data = codeMirrorref.current.editor.getValue();\r\n        // console.log('codevalue',codevalue)\r\n        // debugger\r\n        // console.log('codemrrow',instance)\r\n    }\r\n    const ClusterOnchange = async(value) =>{\r\n        let _params = params;\r\n        setModalfilterdata([])\r\n        setNameSpacelist([])\r\n        _params.namespace = undefined\r\n        _params.name = undefined\r\n        let user  = localStorage.getItem('currentUm');\r\n      \r\n        const res2 = await _getNamespacelist({cluster_name: value,user})\r\n        if(res2.status === 200 && res2.data.Code === 0){\r\n            setNameSpacelist(res2.data.data)\r\n            _params.namespace = res2.data.data[0]\r\n            _params.cluster_name = value\r\n            setTimeout(() => {\r\n                setParams({..._params})\r\n            }, 0);\r\n        }\r\n    }\r\n    const NamespaceOnchange = (value)=>{\r\n        setModalfilterdata([])\r\n        let _params = {...params}\r\n        _params.namespace = value\r\n        // _params.name = undefined\r\n        setLeftSelectname(undefined)\r\n        setParams({..._params})\r\n        getSetting({..._params})\r\n        \r\n    }\r\n    const getClusterlist = async()=>{\r\n        let user  = localStorage.getItem('currentUm');\r\n        let _params = params\r\n        const res = await _getClusterlist({user})\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            if(res.data.data.length>0){\r\n                setClusterList(res.data.data)\r\n                _params.cluster_name = res.data.data[0]\r\n                const res2 = await _getNamespacelist({cluster_name: res.data.data[0],user})\r\n                if(res2.status === 200 && res2.data.Code === 0){\r\n                    setNameSpacelist(res2.data.data)\r\n                    _params.namespace = res2.data.data[0]\r\n                    getSetting({..._params})\r\n                    setTimeout(() => {\r\n                        setParams({..._params})\r\n                    }, 0);\r\n                }\r\n            }\r\n           \r\n        }\r\n    }\r\n    const nameonChange = async(value)=>{\r\n        setLeftSelectname(value)\r\n      let _leftparams = {\r\n          ...params\r\n      }\r\n      _leftparams.name = value;\r\n      let _params = [\r\n        {..._leftparams},\r\n        {...nowname}\r\n        ]\r\n      getdiffCode(_params)\r\n    }\r\n    const getSetting = async(_params)=>{\r\n        const res = await _getConfiguration(_params);\r\n            if( res.status === 200 && res.data.Code === 0){\r\n                setModalfilterdata(res.data.data)\r\n            } else {\r\n                setModalfilterdata([])\r\n            }\r\n    }\r\n    const showdiff = async(data)=>{\r\n            setLeftSelectname(data.name)\r\n            let params = {\r\n                cluster_name: props.params.cluster_name,\r\n                namespace: props.params.namespace,\r\n                name: data.name,\r\n                kind: \"configmap\",\r\n            }//对应对比的右边参数\r\n            setNowname(params)\r\n            let _params = [\r\n                {...params},\r\n                {...params}\r\n            ]\r\n            getdiffCode(_params)\r\n    }\r\n    const getdiffCode = async(_params)=>{\r\n        setSpinning(true)\r\n        const res = await _getConfigurationdiff(_params)\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            setIsdiffModalVisible(true)\r\n            let _leftobj = []\r\n            let _rightobj = []\r\n            if(res.data.data.length>0){\r\n                _leftobj = res.data.data[0];\r\n                _rightobj = res.data.data[1];\r\n            }\r\n           setTimeout(() => {\r\n            setFileContentData({lhContent: _leftobj, rhContent: _rightobj})\r\n            setIsdiffModalVisible(true)\r\n            setSpinning(false)\r\n           }, 40); \r\n    }\r\n    }\r\n    const confirmsave = async(e)=> {\r\n       let newValue = editref.getValuefromChild()\r\n       try { // 校验文件是否为 yaml\r\n        let obj2 = getYAMLJS.parse(newValue);\r\n        console.log('newValue',newValue) // 引用父级通过自定义的onChange()函数接收需要的数据\r\n      } catch {\r\n        message.error(\"请使用 yaml 文件\")\r\n        // CodeMirror.doc.setValue(\"\")\r\n        return false\r\n      }\r\n      setSpinning(true)\r\n       let params = {\r\n        cluster_name: props.params.cluster_name,\r\n        namespace: props.params.namespace,\r\n        name: nowname.name,\r\n        user: localStorage.getItem('currentUm'),\r\n        kind: \"configmap\",// 该字段是固定的\r\n        data: getYAMLJS.parse(newValue)\r\n    }\r\n       const res = await _updatedatefiguration(params)\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            message.success('编辑配置成功')\r\n            // setAddfalse(true)\r\n        } else {\r\n            message.error(res.data.message || '编辑配置失败')\r\n        }\r\n        setSpinning(false)\r\n    \r\n    }\r\n    const deleteset = async(type,record)=>{\r\n        let paramsarr = []\r\n        if( type == 'all'){\r\n            console.log('roww',selectedRowKeys)\r\n            let arr = []\r\n            data.map( item =>{\r\n                if(selectedRowKeys.indexOf(item.index)>=0){\r\n                    let obj = {}\r\n                    obj.cluster_name = props.params.cluster_name\r\n                    obj.namespace = props.params.namespace\r\n                    obj.name = item.name\r\n                    obj.kind = 'configmap'\r\n                    obj.user = localStorage.getItem('currentUm')\r\n                    arr.push(obj)\r\n                }\r\n            })\r\n            paramsarr = [...arr]\r\n        } else {\r\n            paramsarr = [\r\n                {\r\n                    cluster_name: props.params.cluster_name,\r\n                    namespace: props.params.namespace,\r\n                    name: record.name,\r\n                    kind: 'configmap',\r\n                    user: localStorage.getItem('currentUm')\r\n                }\r\n            ]\r\n        }\r\n        const res = await _configurationdelete(paramsarr)\r\n        if(res.status === 200 && res.data.Code === 0){\r\n            message.success('删除成功')\r\n        } else {\r\n            message.error('删除失败')\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getClusterlist()\r\n    },[])\r\n    useEffect(()=>{\r\n        if(isModalVisible){\r\n            instance &&  instance.setValue(codevalue)\r\n        }\r\n    },[isModalVisible])\r\n    useEffect(()=>{\r\n        console.log(props)\r\n        getData()\r\n    },[props.configList])\r\n    useEffect(()=>{\r\n        if(props.addfalse){\r\n            addhandleCancel()\r\n        }\r\n    },[props.addfalse])\r\n return (\r\n     <div style={{position: 'relative'}}>\r\n         <Modal  maskClosable={false} title=\"配置对比\" width=\"100%\" visible={isdiffModalVisible} onCancel={()=>setIsdiffModalVisible(false)} footer={null}>\r\n            <div>\r\n                <div className=\"seacher\" style={{width:'50%',padding: 0,height: '40px',lineHeight: '40px',display:'inline-block'}}>\r\n                    <div className=\"floatele\" style={{ width: '20%',marginRight: 0 }}>\r\n                        <span style={{color: \"rgb(0 0 0 / 85%)\",fontSize:'14px'}}>集群 </span>\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: '70%' }}\r\n                            onChange={ClusterOnchange}\r\n                            value={params.cluster_name}\r\n                            filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                                {\r\n                                        clusterList && clusterList.map(item=>{\r\n                                            return  <Option value={item}>{item}</Option>\r\n                                    })\r\n                                }\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"floatele\" style={{ width: '45%',marginRight: 0 }}>\r\n                        <span style={{color: \"rgb(0 0 0 / 85%)\",fontSize:'14px'}}>命名空间 </span>\r\n                        <Select\r\n                            showSearch\r\n                            style={{ width: '70%' }}\r\n                            value={params.namespace}\r\n                            onChange={NamespaceOnchange}\r\n                            filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                                {\r\n                                    nameSpacelist && props.nameSpacelist.map(item=>{\r\n                                        return  <Option value={item}>{item}</Option>\r\n                                    })\r\n                                }\r\n                        </Select>\r\n                    </div>\r\n                    <div className=\"floatele\" style={{ width: '30%',marginRight: 0 }}>\r\n                        <span style={{color: \"rgb(0 0 0 / 85%)\",fontSize:'14px'}}>名称 </span>\r\n                        <Select\r\n                                showSearch\r\n                                placeholder=\"请选择名称\"\r\n                                style={{ width: '80%' }}\r\n                                // defaultValue={nowname.name}\r\n                                value={leftSelectname}\r\n                                optionFilterProp=\"children\"\r\n                                onChange={nameonChange}\r\n                                // onSearch={onSearch}\r\n                                filterOption={(input, option) =>\r\n                                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\r\n                            }\r\n                        >\r\n                            {\r\n                                modalfilterdata && modalfilterdata.map((item,index)=>{\r\n                                   return <Option value={item.name} key={index+'key'}>{item.name}</Option>\r\n                                })\r\n                            }\r\n                    </Select>\r\n                    </div>\r\n                </div>\r\n                <div style={{width:'46%',float:'right',padding: 0,display:'inline-block',height: '40px',lineHeight: '40px'}}>\r\n                    <Row gutter={2}>\r\n                        <Col span={6}>\r\n                            <span className='leftspan'>集群：</span>\r\n                            <span className='rightspan'>{nowname.cluster_name}</span>\r\n                        </Col>\r\n                        <Col span={9}>\r\n                            <span  className='leftspan'>命名空间：</span>\r\n                            <Tooltip title={nowname.namespace}>\r\n                                <span  className='rightspan'>{nowname.namespace}</span>\r\n                            </Tooltip>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <span  className='leftspan'>名称：</span>\r\n                            <Tooltip title={nowname.name}>\r\n                                <span  className='rightspan'>{nowname.name}</span>\r\n                            </Tooltip>\r\n                        </Col>\r\n                        <Col span={3}>\r\n                            <Popconfirm\r\n                                title=\"您确定保存编辑么?\"\r\n                                onConfirm={()=>confirmsave('edit')}\r\n                                // onCancel={cancel}\r\n                                okText=\"确定\"\r\n                                cancelText=\"取消\"\r\n                            >\r\n                                <Button type=\"primary\" size=\"small\">保存</Button>\r\n                            </Popconfirm>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            </div>\r\n            <Spin spinning={spinning}>\r\n                <CodeMirrors onRef={ node => editref = node} FileContentData={FileContentData} showedit={true}></CodeMirrors>\r\n            </Spin>\r\n         </Modal>\r\n        <Modal  maskClosable={false} title=\"配置\" width=\"60%\" visible={isModalVisible} footer={null} onCancel={cancel}>\r\n            <div className='peizhicodemirrow'>\r\n            <Form\r\n                name=\"basic\"\r\n                form={form}\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 18 }}\r\n                initialValues={{ \r\n                    cluster_name: props.params.cluster_name,\r\n                    namespace: props.params.namespace,\r\n                    name: currentrow && currentrow.name,\r\n                 }}\r\n                onFinish={onFinish}\r\n                autoComplete=\"off\"\r\n                >\r\n                <Form.Item\r\n                    label=\"集群\"\r\n                    name=\"cluster_name\"\r\n                >\r\n                    <Input disabled/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"命名空间\"\r\n                    name=\"namespace\"\r\n                >\r\n                    <Input disabled/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"ConfigMap名称\"\r\n                    rules={[{ required: true, message: '请输入ConfigMap名称' }]}\r\n                    name=\"name\"\r\n                >\r\n                    <Input disabled={currenttype == 0?false:true}/>\r\n                </Form.Item>\r\n            </Form>\r\n            <Row style={{marginBottom: '10px'}}>\r\n                <Col span={18} offset={4}>{\r\n                    isModalVisible? <_CodeMirror\r\n                    value={codevalue}\r\n                    editorDidMount={(editor) => {\r\n                         setInstance(editor);\r\n                    }}\r\n                    // ref={codeMirrorref}\r\n                    theme=\"dark\"\r\n                    onBeforeChange={(editor, data, value) => {\r\n                        console.log(\"onBeforeChange fresh\")\r\n                         console.log(JSON.stringify(data));\r\n                    }}\r\n                    options={{\r\n                        mode: {name: 'text/yaml'},\r\n                        theme: 'solarized dark',\r\n                        autofocus: true, //自动获取焦点\r\n                        autoRefresh: true,\r\n                        styleActiveLine:true,//光标代码高亮\r\n                        // lineNumbers: true, //显示行号\r\n                        smartIndent:true,  //自动缩进\r\n                        //start-设置支持代码折叠\r\n                        lineWrapping:true,\r\n                        readOnly: currenttype==2?true:false,\r\n                        foldGutter:true,\r\n                        cursorHeight:1,\r\n                        gutters:['CodeMirror-linenumbers','CodeMirror-foldgutter'],//end\r\n                        extraKeys:{\r\n                            \"Ctrl\":\"autocomplete\",\r\n                            \"Ctrl-S\": function (editor) {\r\n                                    // that.codeSave(editor)\r\n                                },\r\n                            \"Ctrl-Z\":function (editor) {\r\n                                    editor.undo();\r\n                                },//undo\r\n                            \"F8\":function (editor) {\r\n                                    editor.redo();\r\n                                },//Redo\r\n                                },\r\n                            matchBrackets: true,  //括号匹配，光标旁边的括号都高亮显示\r\n                            autoCloseBrackets: true //键入时将自动关闭()[]{}''\"\"\r\n                        }}\r\n                    \r\n                    // onChange={(editor, data, value) => {\r\n                    //     console.log(editor,data, value)\r\n                    //     setCodevalue(editor)\r\n                    //   }}\r\n                />:null\r\n                }\r\n                   \r\n                </Col>\r\n            </Row>\r\n            </div>\r\n            <div style={{textAlign: \"center\"}}>\r\n                {\r\n                    currenttype !==2?\r\n                    <Space>\r\n                    <Popconfirm\r\n                        title=\"您确定保存么?\"\r\n                        onConfirm={confirm}\r\n                        // onCancel={cancel}\r\n                        okText=\"确定\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <Button type='primary' size=\"small\">保存</Button>\r\n                    </Popconfirm>\r\n                    <Button type='primary' size=\"small\" onClick={cancel}>取消</Button>\r\n                </Space>:\r\n                null\r\n                }\r\n            </div>\r\n        </Modal>\r\n         <div style={{position: 'absolute', right: 0,top: '-53px'}}>\r\n             <Space>\r\n                 {\r\n                     selectedRowKeys.length >0 ?\r\n                     <Popconfirm\r\n                        title=\"您确定删除么?\"\r\n                        onConfirm={()=>deleteset('all',{})}\r\n                        // onCancel={cancel}\r\n                        okText=\"确定\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <Button  danger  style={{fontSize: '12px'}} size=\"small\">删除</Button>\r\n                    </Popconfirm>\r\n                     :\r\n                     null\r\n                 }\r\n                 <Button  style={{fontSize: '12px'}} onClick={()=>addSetting(0)} size=\"small\">新增配置</Button>\r\n            </Space>\r\n        </div>\r\n        <Table\r\n            rowSelection={rowSelection}\r\n            bordered={true}\r\n            loading={lodaing}\r\n            columns={[\r\n                {\r\n                    title: \"名称\",\r\n                    dataIndex: \"name\",\r\n                    filters: [\r\n                        ...filterdata\r\n                    ],\r\n                    filterSearch: true,\r\n                    onFilter: (value, record) => record.name.startsWith(value),\r\n                    filterSearch: (input, record) => record.value.indexOf(input) > -1,\r\n                },\r\n                {\r\n                    title: \"版本\",\r\n                    dataIndex: \"version\",\r\n                    align:\"center\",\r\n                },\r\n                {\r\n                    title: \"操作\",\r\n                    dataIndex: \"action\",\r\n                    align: \"center\",\r\n                    width: \"220px\",\r\n                    render:(text,record)=>{\r\n                        return (\r\n                            <Space>\r\n                                <Button type=\"link\"  size=\"small\" onClick={()=>addSetting(2,record)}>详情</Button>\r\n                                <Button type=\"link\"  size=\"small\" onClick={()=>addSetting(1,record)}>编辑</Button>\r\n                                <Button type=\"link\"  size=\"small\" onClick={()=>showdiff(record)}>比对</Button>\r\n                                <Popconfirm\r\n                                    title=\"您确定删除么?\"\r\n                                    onConfirm={()=>deleteset('',record)}\r\n                                    // onCancel={cancel}\r\n                                    okText=\"确定\"\r\n                                    cancelText=\"取消\"\r\n                                >\r\n                                     <Button type=\"link\"  size=\"small\">删除</Button>\r\n                                </Popconfirm>\r\n                               \r\n                            </Space>\r\n                        )\r\n                    }\r\n                }\r\n            ]} \r\n            dataSource={data} \r\n        />\r\n     </div>\r\n )\r\n}\r\nexport default Setting;","D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\components\\deploy.js",["885","886","887","888","889","890","891","892","893","894","895","896","897"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\nacoscomponents\\deploy.js",["898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\nacoscomponents\\seeting.js",["917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948"],"D:\\wanxiang\\acd_pipeline\\acd_pipeline\\src\\pages\\configmanagement\\codediff\\codeDiff.js",["949","950","951"],"D:\\wanxiang\\sql_plat\\src\\App.js",["952"],["953","954"],"D:\\wanxiang\\sql_plat\\src\\routes\\menu.js",["955"],"D:\\wanxiang\\sql_plat\\src\\routes\\index.js",["956"],"D:\\wanxiang\\sql_plat\\src\\routes\\config.js",[],"D:\\wanxiang\\sql_plat\\src\\pages\\HomePage.js",["957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984"],"D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\instancelist.js",["985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015"],"D:\\wanxiang\\sql_plat\\src\\components\\leftMenu\\menu.js",["1016","1017"],"// 注意这里我们除了从antd中引入了Layout布局组件，还引入了Menu菜单组件，Icon图标组件\r\n\r\nimport { Component } from 'react';\r\nimport {Link,withRouter} from 'react-router-dom'\r\nimport { Layout, Menu ,message} from 'antd';\r\nimport {addMenuTitle} from '../../action/menu'\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'react-fontawesome';\r\nimport menulist from '../../routes/menu.js'\r\n// import {getTreeList} from '../../service/server.js';\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default withRouter(\r\n  connect(\r\n    ({menu}) => ({menu}),\r\n    {\r\n      addMenuTitle\r\n    }\r\n  )(\r\n    class Menulayout extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      console.log('props---menu',props)\r\n      this.state = {\r\n        collapsed: false,\r\n        menus: [],\r\n        openKey: ['sub_sub1'],\r\n        currentTitle: '',\r\n        rootSubmenuKeys:[]\r\n      }\r\n    }\r\n    \r\n    onCollapse = collapsed => {\r\n      console.log(collapsed);\r\n      this.setState({ collapsed });\r\n    };\r\n    tabDash = (item, key, keyPath, domEvent )=>{\r\n    }\r\n    getmenu(){\r\n      this.setState({menus: menulist})\r\n\r\n      localStorage.setItem('roles', '管理员')\r\n      localStorage.setItem('adminId', 222)\r\n    }\r\n    routerTo =(path,title)=>{\r\n      this.props.history.push({pathname: path, state: {title:title}})\r\n      \r\n    } \r\n    componentDidMount() {\r\n      this.getmenu();\r\n      \r\n    }\r\n    // 当点击菜单时切换路由，如果当前组件是路由组件，可以直接调用 props 中的 history 对象，如果当前组件非路由组件，需要调用 withRouter 函数，传入当前组件，组件中就可以访问 history 对象了，当前示例 withRouter 函数的调用在代码最后\r\n    handleChangeMenu = ({key}) => {\r\n     console.log('key--menu',key)\r\n      this.props.history.push(key);\r\n    };\r\n\r\n    // 设置了默认的 openKey 后，手动点击展开关闭菜单功能失效，需要绑定 openChange 函数，动态设置 openKey\r\n    handleOpenChange = (keys) => {\r\n      console.log('handleOpenChange',keys)\r\n       const latestOpenKey = keys.find(key => this.state.openKey.indexOf(key) === -1);\r\n        if (this.state.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n         this.setState({openKey: keys})\r\n        } else {\r\n            if(latestOpenKey){\r\n                this.setState({openKey: [latestOpenKey]})\r\n            } else {\r\n              this.setState({openKey: []})\r\n            }\r\n       }\r\n    };\r\n\r\n    // 利用 createMenuListMap 的递归调用实现菜单的动态创建，当 menuList 值改变时，菜单也会动态改变，可以将此方法声明成单独的组件，传值 list，并返回 JSX 节点列表\r\n    createMenuListMap = (list) => {\r\n      return list.map((item) => {\r\n        if(item.children && item.children.length>0) {\r\n          // 如果当前循环到的菜单项有 children，那就返回 SubMenu，否则返回的直接是 Menu.Item\r\n          const path = this.props.location.pathname;\r\n          const res = item.children.find(child => path.indexOf(child.name) >= 0);\r\n          // if(res) this.openKey = item.name;\r\n        \r\n          return (\r\n            <SubMenu\r\n              key={`sub_${item.id}`}\r\n              icon={<i className={`myfont ${item.icon} ant-menu-item-icon`} style={{marginRight: '10px'}}></i>}\r\n              title={item.title}\r\n            >\r\n              {\r\n                // 根据当前菜单的 children 去生成其子菜单，由于菜单项 menuList 是个有终结的数据，且嵌套层数并不复杂，所以这里不用担心递归会造成栈溢出的问题\r\n                this.createMenuListMap(item.children)\r\n              }\r\n            </SubMenu>\r\n          );\r\n        } else {\r\n         \r\n          return (\r\n            <Menu.Item \r\n              key={item.name} \r\n              icon={<i className={`myfont ${item.icon}`} style={{marginRight: '10px'}}></i>} \r\n            >\r\n              <Link\r\n              to={{ \r\n                pathname: item.name,\r\n                state:{title: item.title}\r\n               }}>\r\n                {/* <item.icon /> */}\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          );\r\n        }\r\n      });\r\n    };\r\n\r\n    render() {\r\n      const { collapsed } = this.state;\r\n      let name = this.props.pathname;\r\n      let currentSelect =\"\"\r\n      if(name.indexOf('/instancemanagement/instancelist')>=0){\r\n        currentSelect =\"/instancemanagement/instancelist\"\r\n        document.title = \"实例列表\"\r\n      }\r\n      if(name.indexOf('/sql/sqlcheck')>=0){\r\n        currentSelect =\"/sql/sqlcheck\"\r\n        document.title = \"SQL上线\"\r\n      }\r\n      if(name.indexOf('/history/checkhistory')>=0){\r\n        currentSelect =\"/history/checkhistory\"\r\n        document.title = \"审核记录\"\r\n      }\r\n      if(name.indexOf('/history/carryouthistory')>=0){\r\n        currentSelect =\"/history/carryouthistory\"\r\n        document.title = \"执行记录\"\r\n      }\r\n      // let obj = sessionStorage.getItem('setConfObj')?JSON.parse(sessionStorage.getItem('setConfObj')):{} \r\n    \r\n      return (\r\n            <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\r\n              <Menu \r\n                theme=\"light\" \r\n                defaultSelectedKeys={['/flow']}\r\n                // onClick={this.handleChangeMenu}\r\n                selectedKeys={[currentSelect]}\r\n                onOpenChange={this.handleOpenChange}\r\n                openKeys={this.state.openKey}\r\n                mode=\"inline\"\r\n              >\r\n              {\r\n                // 获取并渲染动态的菜单内容\r\n                this.createMenuListMap(this.state.menus)\r\n              }\r\n              </Menu>\r\n            </Sider>\r\n      );\r\n    }\r\n  }\r\n)\r\n)",["1018","1019"],"D:\\wanxiang\\sql_plat\\src\\plugins\\axios.js",["1020","1021","1022"],"D:\\wanxiang\\sql_plat\\src\\components\\loading\\index.js",["1023"],["1024","1025"],"D:\\wanxiang\\sql_plat\\src\\action\\menu.js",[],"D:\\wanxiang\\sql_plat\\src\\pages\\sql\\index.js",["1026","1027","1028"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {Route, Switch,withRouter} from \"react-router-dom\";\r\nconst Instancemanagement = (props)=>{\r\n  \r\n  return(\r\n    <>\r\n       <Switch>\r\n          <Route path='/sql/sqlcheck'  exact={true}  component={global.Sqlcheck} />\r\n        </Switch>\r\n    </>\r\n  )\r\n};\r\nexport default withRouter(Instancemanagement);\r\n",["1029","1030"],"D:\\wanxiang\\sql_plat\\src\\pages\\sql\\sqlcheck.js",["1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {Route, withRouter} from \"react-router-dom\";\r\nimport {Row,Col,Upload,Button,Form,message,Input,Table,Select,Space ,Card  ,Tabs,Spin } from 'antd'\r\nimport {UploadOutlined,ArrowDownOutlined,CloseOutlined, RedditCircleFilled } from '@ant-design/icons'\r\nimport BreadNav from '../breadNav'\r\nimport {_getproject,_getdbinstance} from '../../service/server'\r\nimport {_currentDbinstancequery} from '../../service/instance'\r\nimport {_auditsql,_get_sql_file_content,_getunit,_getVersions,_getsqlfiles,_getschema,_executesql} from '../../service/sqlcheck'\r\nimport Codemirrowindex from '../../components/sqlcomponent/index.js'\r\nimport '../../css/sql.styl'\r\nconst {Option} = Select\r\nconst { TabPane } = Tabs;\r\n\r\nconst Sqlcheck = (props)=>{\r\n  const codemirrowref = useRef(null)\r\n  const [tableheight,setTableheight] = useState(0)\r\n  const [edidit,setEdit] = useState(true)\r\n  const [projectlist,setProjectlist] = useState([])\r\n  const [sevicelist,setSevicelist]  = useState([])\r\n  const [versionlist,setVersionlist]  = useState([])\r\n  const [sqllist,setSqllist]  = useState([])\r\n  const [instancelist,setInstancelist]  = useState([])\r\n  const [databaselist,setDatabaselist]  = useState([])\r\n  const [sqlcontent,setSqlcontent] = useState('')\r\n  const [resultcheck,setResultcheck] = useState([])\r\n  const [resultexcute,setResultexcute]  = useState([])\r\n  const [spinning,setSpinning]  = useState(false)\r\n\r\n  const [modulespinning,setmodulespinning]  = useState(false)\r\n  const [versionspinning,setversionspinning]  = useState(false)\r\n  const [sqlspinning,setsqlspinning]  = useState(false)\r\n  const [isExcute,setIsexcute] = useState(null)\r\n  const [activekey,setActivekey] = useState('1')\r\n  const [alreadycheck,setAlreadycheck]  = useState(false)\r\n\r\n  const [form] = Form.useForm();\r\n  const nameValue = Form.useWatch('name', form);\r\n  const moduleValue = Form.useWatch('module', form);\r\n  const typeValue = Form.useWatch('type', form);\r\n  const envValue = Form.useWatch('env', form);\r\n  const instanceValue = Form.useWatch('instance', form);\r\n  const sqlValue = Form.useWatch('sql', form);\r\n  const versionValue =  Form.useWatch('version', form);\r\n  const dbvalue =  Form.useWatch('db', form);\r\n \r\n  const checkColumn = [\r\n    {\r\n        dataIndex: 'no',\r\n        title: \"序号\",\r\n        align:\"center\",\r\n        width: 80,\r\n    },\r\n    {\r\n      dataIndex: 'sql',\r\n      title: \"SQL语句\",\r\n      align:\"left\",\r\n      render:(text,record)=>{\r\n        return <pre style={{whiteSpace:'pre-line'}}>{text}</pre>\r\n      }\r\n    },\r\n    {\r\n      dataIndex: 'result',\r\n      title: \"审核结果\",\r\n      align:\"left\",\r\n      // width: 400,\r\n      render:(text,record)=>{\r\n       return <pre style={{whiteSpace:'pre-line'}}>{text}</pre>\r\n       \r\n      }\r\n    }\r\n  ]\r\n  const excuteColumn = [\r\n    {\r\n        dataIndex: 'no',\r\n        title: \"序号\",\r\n        align:\"center\",\r\n        width: 80,\r\n    },\r\n    {\r\n      dataIndex: 'sql',\r\n      title: \"SQL语句\",\r\n      align:\"left\",\r\n      render:(text,record)=>{\r\n        return <pre style={{whiteSpace:'pre-line'}}>{text}</pre>\r\n      }\r\n    },\r\n    {\r\n      dataIndex: 'result',\r\n      title: \"执行结果\",\r\n      align:\"left\",\r\n    }\r\n  ]\r\n  const options = {\r\n    name: 'file',\r\n    action: '/api/v1/file/upload',\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    },\r\n    onChange(info){\r\n      if (info.file.status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      setAlreadycheck(false)\r\n      if (info.file.status === 'done') {\r\n        message.success(`${info.file.name} 上传成功`);\r\n        console.log(info)\r\n        if(info.file.response.code === 1000){\r\n          setSqlcontent(info.file.response.data.fileContent)\r\n          setIsexcute(null)\r\n          setActivekey('1')\r\n          setEdit(false)\r\n        }\r\n\r\n      } else if (info.file.status === 'error') {\r\n        message.error(`${info.file.name} 上传失败`);\r\n      }\r\n    },\r\n    beforeUpload(file) {\r\n      // debugger\r\n      // if(file.name.indexOf('ddl.sql') == -1){\r\n      //   message.error('请上传带ddl的sql文件')\r\n      //   return false\r\n      // }\r\n    },\r\n  }\r\n  \r\n  const onFinish = async(values)=>{\r\n    if(isExcute!== 'git'){ \r\n        message.warning('仅限于项目Git SQL 可执行')\r\n        return false\r\n      }\r\n      let _values =  form.getFieldsValue()\r\n      // await form.validateFields()\r\n      console.log(_values)\r\n      if(_values.instance == undefined || _values.instance == ''){\r\n        message.warning('请选择实例')\r\n        return false\r\n      }\r\n      if(_values.db == undefined || _values.db == ''){\r\n        message.warning('请选择库')\r\n        return false\r\n      }\r\n      if(_values.version == undefined || _values.version == ''){\r\n        message.warning('请选择版本')\r\n        return false\r\n      }\r\n      if(sqlcontent == '' || sqlcontent == null || sqlcontent == undefined){\r\n        message.warning('请选择sql文件')\r\n        return false\r\n      }\r\n      let params= {\r\n        dbInstanceId: 0+_values.instance ,//实例ID，integer, # 实例选项中选择的 实例的ID\r\n        dsn:{\r\n          dbName: _values.db,// # 库选项中库名\r\n        },\r\n        relatedChainId: localStorage.getItem('currentUm'), //\"提交人\",\r\n        sql:   codemirrowref.current.getcodevalue(),// # 查看SQL获取到的展示到SQL文本框的SQL文本 # 此处限制只能项目Git SQL可以执行\r\n        startNo: 0, //# 默认0\r\n        tag: _values.version// # 版本选项中选择的版本名（ref名）\r\n      }\r\n      setSpinning(true)\r\n      const res = await _executesql(params)\r\n      if(res.status === 200 && ( res.data.code === 1000 ||  res.data.code === 1012)){\r\n        message.success('执行成功')\r\n        setResultexcute(res.data.data.result)\r\n        setActivekey('2')\r\n      } else {\r\n        message.error(res.data.data)\r\n      }\r\n      setSpinning(false)\r\n  }\r\n  const showedit = (value)=>{\r\n    console.log('value',value)\r\n    setEdit(value)\r\n  }\r\n  const handleResize = ()=>{\r\n      let boxheight = (document.documentElement.clientHeight || document.body.clientHeight) - 130;\r\n      setTimeout(()=>{\r\n          setTableheight(boxheight)\r\n      },100)\r\n  }\r\n  const getmodulelist = async(nameValue)=>{\r\n    setmodulespinning(true)\r\n    let id = (projectlist.filter(item=>item.name == nameValue))[0].id\r\n    const res = await _getunit({id: id,name: nameValue})\r\n    console.log('getmodulelist',res)\r\n    if(res.status === 200 && res.data.code === 1000){\r\n      setSevicelist(res.data.data)\r\n    }\r\n    setmodulespinning(false)\r\n  }\r\n  const getinstancelist = async(nameValue,envValue)=>{\r\n    if(nameValue == '' || nameValue == undefined){\r\n      message.warning('请选择项目')\r\n      return false\r\n    }\r\n    if(envValue == '' || envValue == undefined){\r\n      message.warning('请选择环境')\r\n      return false\r\n    }\r\n    let params = {\r\n      name: '',\r\n      type: '',\r\n      env: envValue,\r\n      projectName: nameValue,\r\n      dbInstanceStatus: 'inuse',\r\n      status: ''\r\n    }\r\n    const res = await _currentDbinstancequery(params)\r\n        console.log('res',res)\r\n        if(res.status == 200 && res.data.code === 1000){\r\n          setInstancelist(res.data.data)\r\n        }\r\n  }\r\n  const getprojectlist = async()=>{\r\n      const res = await _getproject({id: 0,name: \"\"})\r\n      console.log('ressss',res)\r\n      if(res.status === 200 && res.data.code === 1000){\r\n          setProjectlist(res.data.data)\r\n      }\r\n  }\r\n  const getdblist = async(id)=>{\r\n    const res = await _getdbinstance({id})\r\n      if(res.status === 200 && res.data.code === 1000){\r\n        setDatabaselist(res.data.data.db)\r\n      }\r\n  }\r\n  const checksql = async()=>{\r\n    const codevalue =  codemirrowref.current.getcodevalue()\r\n    console.log('codevalue',codevalue)\r\n    if(codevalue == ''){\r\n      message.warning('请确定sql文件是否为空!!!')\r\n      return\r\n    }\r\n    let pramas = {\r\n      submitter: localStorage.getItem('currentUm'),\r\n      sql: codevalue\r\n    }\r\n    setSpinning(true)\r\n    const res = await _auditsql(pramas)\r\n    if(res.status === 200 && ( res.data.code === 1000 ||  res.data.code === 1005)){\r\n      message.success('审核完毕')\r\n      setResultcheck(res.data.data.result)\r\n      setAlreadycheck(true)\r\n    }\r\n    setSpinning(false)\r\n  }\r\n  const getsqltype = async()=>{\r\n    if(typeValue == undefined || typeValue == ''){\r\n      message.warning('请选择版本')\r\n      return false\r\n    }\r\n    if(moduleValue == undefined || moduleValue == ''){\r\n      message.warning('请选择服务模块')\r\n      return false\r\n    }\r\n    //过滤出 版本所需要的参数 从而接入版本的接口数据\r\n    let moduledata = sevicelist.filter(item => item.unitName == moduleValue)\r\n    let {baseUnitGitPid,baseUnitName,unitGitPid,unitName} = moduledata[0]\r\n    let params = {\r\n      type: typeValue,\r\n      unit_pid: unitGitPid,\r\n      base_unit_name: baseUnitName,\r\n      base_unit_pid: baseUnitGitPid,\r\n      unit_name: unitName\r\n    }\r\n    setversionspinning(true)\r\n    const res = await _getVersions(params)\r\n    if(res.status === 200 && res.data.code === 1000){\r\n      setVersionlist(res.data.data)\r\n    }\r\n    setversionspinning(false)\r\n  }\r\n  const getsqlfile = async()=>{\r\n    if(versionValue == undefined || versionValue == '' ){\r\n      message.warning('请选择版本')\r\n      return false\r\n    }\r\n    let sqltypefile = versionlist.filter(item => item.refName == versionValue)\r\n    let {refName,refUnitName,refUnitPid,refUnitType} = sqltypefile[0]   \r\n  \r\n    let params = {\r\n      ref_unit_pid: refUnitPid,\r\n      ref_unit_name: refUnitName,\r\n      ref_unit_type: refUnitType,\r\n      ref_name: refName\r\n    }\r\n    setsqlspinning(true)\r\n    const res = await _getsqlfiles(params)\r\n    if(res.status === 200 && res.data.code === 1000){\r\n      setSqllist(res.data.data)\r\n    }\r\n    setsqlspinning(false)\r\n\r\n  }\r\n  const getgitsqlcontent = async()=>{\r\n      if(sqlValue == '' || sqlValue == undefined){\r\n        message.warning('请选择文件')\r\n        return false\r\n      }\r\n     let sqlfile = sqllist.filter( item=>item.sqlFileName == sqlValue)\r\n     let {sqlFileName,sqlFilePath,refUnitPid,refUnitName,refName} = sqlfile[0]\r\n     let params = {\r\n      sql_file_name: sqlFileName,\r\n      sql_file_path: sqlFilePath,\r\n      ref_unit_pid: refUnitPid,\r\n      ref_unit_name: refUnitName,\r\n      ref_name: refName,\r\n     }\r\n     setSpinning(true)\r\n     const res = await _get_sql_file_content(params)\r\n     if( res.status === 200 && res.data.code === 1000){\r\n        setSqlcontent(res.data.data.sqlFileContent)\r\n        setIsexcute('git')\r\n        setEdit(false)\r\n     }\r\n     setSpinning(false)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(versionValue!== '' && versionValue !==undefined)\r\n    {\r\n      getsqlfile()\r\n    }\r\n    form.setFieldsValue({\r\n      db: undefined,\r\n      instance: undefined,\r\n      sql: undefined,\r\n      env: undefined\r\n    })\r\n    setAlreadycheck(false)\r\n  },[versionValue])\r\n  useEffect(()=>{\r\n    if(instanceValue!== '' && instanceValue !==undefined)\r\n    {\r\n      getdblist(instanceValue)\r\n    }\r\n    form.setFieldsValue({\r\n      db: undefined,\r\n    })\r\n    setAlreadycheck(false)\r\n  },[instanceValue])\r\n  useEffect(()=>{\r\n    if((nameValue !== undefined && nameValue!=='') && (envValue !== undefined && envValue !== '') ){\r\n      getinstancelist(nameValue,envValue)\r\n    }\r\n    if(nameValue!==undefined && nameValue!==''){\r\n      getmodulelist(nameValue)\r\n    }\r\n    form.setFieldsValue({\r\n      module: undefined,\r\n      type: undefined,\r\n      version: undefined,\r\n      db: undefined,\r\n      instance: undefined,\r\n      sql: undefined,\r\n      env: undefined\r\n    })\r\n    setAlreadycheck(false)\r\n    \r\n  },[nameValue])\r\n\r\n  useEffect(()=>{\r\n    if(moduleValue!==undefined && moduleValue!==''){\r\n      getsqltype()\r\n    }\r\n    form.setFieldsValue({\r\n      type: undefined,\r\n      version: undefined,\r\n      db: undefined,\r\n      instance: undefined,\r\n      sql: undefined,\r\n      env: undefined\r\n    })\r\n    setAlreadycheck(false)\r\n  },[moduleValue])\r\n  useEffect(()=>{\r\n    if(typeValue !== undefined && typeValue!==''){\r\n      getsqltype()\r\n    }\r\n    form.setFieldsValue({\r\n      version: undefined,\r\n      db: undefined,\r\n      instance: undefined,\r\n      sql: undefined,\r\n      env: undefined\r\n    })\r\n    setAlreadycheck(false)\r\n  },[typeValue])\r\n  useEffect(()=>{\r\n    if(envValue !== undefined && envValue !== ''){\r\n      getinstancelist(nameValue,envValue)\r\n    }\r\n    form.setFieldsValue({\r\n      db: undefined,\r\n      instance: undefined,\r\n      \r\n    })\r\n    setAlreadycheck(false)\r\n  },[envValue])\r\n  useEffect(()=>{ \r\n    let boxheight = (document.documentElement.clientHeight || document.body.clientHeight)  -130;\r\n    setTableheight(boxheight)\r\n    getprojectlist()//获取项目列表\r\n    window.addEventListener('resize', handleResize);\r\n    return ()=>{\r\n        window.removeEventListener('resize', handleResize);\r\n        }\r\n    },[]);\r\n    useEffect(()=>{\r\n      if(sqlValue !== undefined && sqlValue !== ''){\r\n        getgitsqlcontent()\r\n      }\r\n      setAlreadycheck(false)\r\n    },[sqlValue])\r\n    useEffect(()=>{\r\n      setAlreadycheck(false)\r\n    },[dbvalue])\r\n    \r\n  return(\r\n    <div id=\"sqlbox\">\r\n       <BreadNav title={\"sql管理\"} props={props} childtitle={'SQL上线'}></BreadNav>\r\n       <Spin spinning={spinning}>\r\n       <div style={{height: tableheight+'px',overflow:'hidden',overflowY:'scroll'}}>\r\n          <Row>\r\n            <Col span={14} style={{height: '527px',background:'#fff'}}>\r\n            {/* <Switch\r\n              checkedChildren={'编辑'}\r\n              unCheckedChildren={'只读'}\r\n              defaultChecked\r\n              onChange={showedit}\r\n            /> */}\r\n              <div>\r\n                <Codemirrowindex ref={codemirrowref} edidit={edidit} height={500} sqlcontent={sqlcontent}/>\r\n              </div>\r\n              {/* <div  className='spanfont'>\r\n                    <span>请在上面输入SQL语句 <ArrowDownOutlined  style={{color: 'orange',fontWeight: 'bold'}}/></span>\r\n                </div> */}\r\n            </Col>\r\n            <Col span={10} style={{paddingLeft: '10px',boxSizing: 'border-box  '}}>\r\n              <Card title=\"\">\r\n                  <div style={{width: '100%',marginBottom:'12px'}}>\r\n                    <Card title=\"本地SQL文件审核\" size=\"small\">\r\n                      <Upload {...options} showUploadList={false} accept=\".sql\" style={{width: '100%'}}>\r\n                        <Button icon={<UploadOutlined />} style={{width: '100%'}}>点击上传本地SQL文件</Button>\r\n                      </Upload>\r\n                    </Card>\r\n                  </div>\r\n                  <div>\r\n                        <Card title=\"项目Git SQL\" size=\"small\">\r\n                          <Form\r\n                            name=\"basic\"\r\n                            form={form}\r\n                            labelCol={{\r\n                              span:6,\r\n                            }}\r\n                            wrapperCol={{\r\n                              span: 18,\r\n                            }}\r\n                            size={'small'}\r\n                            onFinish={onFinish}\r\n                            autoComplete=\"off\"\r\n                        >\r\n                          <Form.Item\r\n                            label=\"项目\"\r\n                            name=\"name\"\r\n                            rules={[{ required: true}]}\r\n                          >\r\n                            <Select showSearch>\r\n                              {\r\n                                projectlist.map((item,index)=>{\r\n                                  return <Option value={item.name} key={index+'op'}>{item.name}</Option>\r\n                                })\r\n                              }\r\n                              \r\n                            </Select>\r\n                          </Form.Item>\r\n                          <Spin spinning={modulespinning}>\r\n                            <Form.Item\r\n                              label=\"服务模块\"\r\n                              name=\"module\"\r\n                              rules={[{ required: true}]}\r\n                            >\r\n                              <Select showSearch>\r\n                                {\r\n                                  sevicelist.map((item,index)=>{\r\n                                    return <Option value={item.unitName} key={index+'sv'}>{item.unitName}</Option>\r\n                                  })\r\n                                }\r\n                                \r\n                              </Select>\r\n                            </Form.Item>\r\n                          </Spin>\r\n                         \r\n                          <Form.Item\r\n                            label=\"版本类型\"\r\n                            name=\"type\"\r\n                            rules={[{ required: true}]}\r\n                          >\r\n                            <Select showSearch>\r\n                              <Option value=\"tag\">tag</Option>\r\n                              <Option value=\"branch\">branch</Option>\r\n                            </Select>\r\n                          </Form.Item>\r\n                          <Spin spinning={versionspinning}>\r\n                            <Form.Item\r\n                              label=\"版本\"\r\n                              name=\"version\"\r\n                              rules={[{ required: true}]}\r\n                            >\r\n                              <Select \r\n                              showSearch\r\n                              >\r\n                                {\r\n                                  versionlist.map((item,index)=>{\r\n                                    return <Option value={item.refName} key={index+'sv'}>{item.refName}</Option>\r\n                                  })\r\n                                }\r\n                                \r\n                              </Select>\r\n                            </Form.Item>\r\n                          </Spin>\r\n                          <Spin spinning={sqlspinning}>\r\n                            <Form.Item\r\n                              label=\"sql文件\"\r\n                              name=\"sql\"\r\n                              rules={[{ required: true}]}\r\n                            >\r\n                              <Select showSearch>\r\n                                {\r\n                                  sqllist.map((item,index)=>{\r\n                                    return <Option value={item.sqlFileName} key={index+'ssql'}>{item.sqlFileName}</Option>\r\n                                  })\r\n                                }\r\n                                \r\n                              </Select>\r\n                            </Form.Item>\r\n                          </Spin>\r\n                          <Form.Item\r\n                            label=\"环境\"\r\n                            name=\"env\"\r\n                            rules={[{ required: true}]}\r\n                          >\r\n                            <Select showSearch>\r\n                              <Option value=\"it\">it</Option>\r\n                              <Option value=\"uat\">uat</Option>\r\n                            </Select>\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"实例\"\r\n                            name=\"instance\"\r\n                            rules={[{ required: true}]}\r\n                          >\r\n                            <Select \r\n                             showSearch\r\n                             filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\r\n                             >\r\n                              {\r\n                                instancelist.map((item,index)=>{\r\n                                  return <Option value={item.dbInstanceId} key={index+'instancev'}>{item.dbInstanceName}</Option>\r\n                                })\r\n                              }\r\n                            </Select>\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"库\"\r\n                            name=\"db\"\r\n                            rules={[{ required: true}]}\r\n                          >\r\n                            <Select showSearch>\r\n                              {\r\n                                databaselist.map((item,index)=>{\r\n                                  return <Option value={item.name} key={index+'db'}>{item.name}</Option>\r\n                                })\r\n                              }\r\n                            </Select>\r\n                          </Form.Item>\r\n                        </Form>\r\n                        </Card>\r\n                        <div style={{textAlign: 'center',marginTop: '10px'}}>\r\n                          <Space>\r\n                            {/* <Button size=\"small\" disabled={( sqlValue !=='' && sqlValue !== undefined)?false:true}>查看SQL</Button> */}\r\n                              <Button type=\"primary\" size=\"small\" onClick={checksql}>\r\n                                SQL审核\r\n                              </Button>\r\n                              <Button type=\"primary\" disabled={isExcute == 'git' && alreadycheck ?false:true} size=\"small\" onClick={onFinish}>\r\n                                SQL执行\r\n                              </Button>\r\n                            </Space>\r\n                        </div>\r\n                  </div>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row style={{marginTop: '10px'}}>\r\n            <Col span={24} >\r\n              <Card title=\"\"  size=\"small\">\r\n                <Tabs  type=\"card\" activeKey={activekey} onChange={(key)=>setActivekey(key)}>\r\n                    <TabPane tab=\"审核结果\" key=\"1\">\r\n                          <Table\r\n                            bordered\r\n                            size=\"small\"\r\n                            \r\n                            columns = {checkColumn}\r\n                            dataSource={resultcheck} \r\n                            />    \r\n                    </TabPane>\r\n                    <TabPane tab=\"执行结果\" key=\"2\" >\r\n                          <Table\r\n                            bordered\r\n                            size=\"small\"\r\n                            columns = {excuteColumn}\r\n                            dataSource={resultexcute} \r\n                            />    \r\n                    </TabPane>\r\n                  </Tabs>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n       </Spin>\r\n     \r\n    </div>\r\n  )\r\n};\r\nexport default withRouter(Sqlcheck);\r\n",["1072","1073"],"D:\\wanxiang\\sql_plat\\src\\components\\sqlcomponent\\index.js",["1074","1075","1076","1077","1078","1079","1080","1081"],"D:\\wanxiang\\sql_plat\\src\\static\\js\\flexible.js",[],["1082","1083"],"D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\index.js",["1084","1085","1086"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {Route, Switch,withRouter} from \"react-router-dom\";\r\nconst Instancemanagement = (props)=>{\r\n  \r\n  return(\r\n    <>\r\n       <Switch>\r\n          <Route path='/instancemanagement/instancelist'  exact={true}  component={global.Instancelist} />\r\n        </Switch>\r\n    </>\r\n  )\r\n};\r\nexport default withRouter(Instancemanagement);\r\n","D:\\wanxiang\\sql_plat\\src\\pages\\breadNav.js",["1087","1088","1089"],"import React, { useState ,Component} from \"react\";\r\nimport \"../css/index.less\"\r\nconst BreadNav = (props)=>{\r\n    console.log(props)\r\n    return(\r\n        <div\r\n            className={'self-title'}\r\n        >\r\n            <div className={'bread-crumbs'}>\r\n            <a className={'home'}\r\n                style={{\r\n                color: 'rgba(0, 0, 0, 0.45)',\r\n                }}\r\n                    onClick={()=>props.props.history.push(`/`)}\r\n            >首页</a>\r\n            <span\r\n                style={{\r\n                marginLeft: '8px',\r\n                marginRight: '8px',\r\n                color: 'rgba(0, 0, 0, 0.45)',\r\n                }}\r\n            >/</span>\r\n            <span\r\n                style={{\r\n                color: props.childtitle?'rgba(0, 0, 0, 0.45)':\"\",\r\n                }}\r\n            >{props.title}</span>\r\n            {\r\n                props.childtitle?\r\n                <>\r\n                    <span\r\n                        style={{\r\n                        marginLeft: '8px',\r\n                        marginRight: '8px',\r\n                        color: 'rgba(0, 0, 0, 0.45)',\r\n                    }}\r\n                    >/</span>\r\n                    <span>{props.childtitle}</span></>\r\n                    :\r\n                    null\r\n                \r\n            }\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default BreadNav;","D:\\wanxiang\\sql_plat\\src\\index.js",[],"D:\\wanxiang\\sql_plat\\src\\store\\menuReducer.js",[],"D:\\wanxiang\\sql_plat\\src\\action\\user.js",[],"D:\\wanxiang\\sql_plat\\src\\pages\\history\\index.js",["1090","1091","1092"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {Route, Switch,withRouter} from \"react-router-dom\";\r\nconst Histrymanagement = (props)=>{\r\n  \r\n  return(\r\n    <>\r\n       <Switch>\r\n          <Route path='/history/checkhistory'  exact={true}  component={global.Checkhistory} />\r\n          <Route path='/history/carryouthistory'  exact={true}  component={global.Carryouthistory} />\r\n        </Switch>\r\n    </>\r\n  )\r\n};\r\nexport default withRouter(Histrymanagement);\r\n",["1093","1094"],"D:\\wanxiang\\sql_plat\\src\\pages\\history\\checkhistory.js",["1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105"],"D:\\wanxiang\\sql_plat\\src\\pages\\history\\carryouthistory.js",["1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122"],"import React, { useState, useRef, useEffect} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {Button, Tabs ,Row,Col, Input,Form, DatePicker, Popconfirm,Select,Space,Spin, Modal, message, Table} from 'antd';\r\n\r\nimport \"../../css/index.less\"\r\nimport BreadNav from '../breadNav'\r\nimport {_executerecord,_getinstancedetail,_deletetask} from '../../service/history'\r\nimport {_dbinstancequery} from '../../service/instance'\r\nimport {_getproject} from '../../service/server'\r\nimport Codemirrowindex from '../../components/sqlcomponent/index.js'\r\nimport Detail from './components/detail'\r\nimport Createtask from './components/createTask'\r\nconst {Option} = Select;\r\nconst { TabPane } = Tabs;\r\nconst { RangePicker } = DatePicker;\r\nconst Carryouthistory = (props)=>{\r\n    const [form] = Form.useForm()\r\n    const codemirrowref = useRef(null)\r\n    const [tableheight,setTableheight] = useState(0)\r\n    const [spinning,setSpinning]  = useState(false)\r\n    const [data,setData] = useState([])\r\n    const [instancetypelist,setInstancetypelist]  = useState([])\r\n    const [dbtypelist,setDbtypelist]  = useState([])\r\n    const [showresult,setShowresult] = useState(false)\r\n    const [showsql,setShowsql] = useState(false)\r\n    const [sqlcontent,setSqlcontent]  = useState('')\r\n    const [resultcontent,setResultcontent]  = useState('')\r\n    const [activetab,setActiveTab]  = useState('1')\r\n    const [projectlist,setProjectlist] = useState([])\r\n    const [detaildata,setDetaildata] = useState([])\r\n    const [selectdata,setselectdata]  = useState([]) //选中的data 用于展示待执行的表格\r\n    const [selecteddbRowKeys,setselecteddbRowKeys]  = useState([])\r\n    const [showinfo,setShowinfo]  = useState(false) //展示实例信息\r\n    const [showcreatetask,setShowreatetask]   = useState(false) //展示创建任务的弹窗\r\n    const columns_record = [\r\n        {\r\n            dataIndex: 'relatedChainID',\r\n            title: \"提交人\",\r\n            align:\"center\",\r\n        },\r\n        {\r\n            dataIndex: 'status',\r\n            title: \"状态\",\r\n            align:\"center\",\r\n            render: (text, record)=>{\r\n                return(\r\n                   <span>{text=='done'?'成功':(text == 'init'?'待执行':'失败')}</span>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataIndex: 'createTime',\r\n            title: \"提交时间\",\r\n            align:\"center\",\r\n        },\r\n        {\r\n            dataIndex: 'executeTime',\r\n            title: \"执行时间\",\r\n            align:\"center\",\r\n        },\r\n        {\r\n            dataIndex: 'dbInstanceId',\r\n            title: \"实例ID\",\r\n            align:\"center\",\r\n        },\r\n        {\r\n            dataIndex: 'tag',\r\n            title: \"版本\",\r\n            align:\"center\",\r\n        },\r\n        {\r\n            dataIndex: 'action',\r\n            title: \"操作\",\r\n            align:\"center\",\r\n            render: (text, record)=>{\r\n                return(\r\n                    <Space>\r\n                        <Button size=\"small\" onClick={()=>openshowsql(record)}>sql语句</Button>\r\n                        <Button size=\"small\" onClick={()=>openresult(record)}>执行结果</Button>\r\n                        <Button size=\"small\" onClick={()=>showdetailmsg(record)}>实例信息</Button>\r\n                    </Space>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n    const columns_task = [\r\n        {\r\n            dataIndex: 'relatedChainID',\r\n            title: \"提交人\",\r\n            align:\"center\",\r\n        },\r\n        {\r\n            dataIndex: 'status',\r\n            title: \"状态\",\r\n            align:\"center\",\r\n            render: (text, record)=>{\r\n                return(\r\n                   <span>{text=='done'?'成功':(text == 'init'?'待执行':'失败')}</span>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            dataIndex: 'createTime',\r\n            title: \"提交时间\",\r\n            align:\"center\",\r\n        },\r\n      \r\n        {\r\n            dataIndex: 'dbInstanceId',\r\n            title: \"实例ID\",\r\n            align:\"center\",\r\n        },\r\n        {\r\n            dataIndex: 'tag',\r\n            title: \"版本\",\r\n            align:\"center\",\r\n        },\r\n        {\r\n            dataIndex: 'action',\r\n            title: \"操作\",\r\n            align:\"center\",\r\n            render: (text, record)=>{\r\n                return(\r\n                    <Space>\r\n                        <Button size=\"small\" onClick={()=>openshowsql(record)}>sql语句</Button>\r\n                        {/* <Button size=\"small\" onClick={()=>openresult(record)}>执行结果</Button> */}\r\n                        <Button size=\"small\" onClick={()=>showdetailmsg(record)}>实例信息</Button>\r\n                        <Popconfirm\r\n                            title=\"您确定取消任务么?\"\r\n                            onConfirm={()=>canceltask(record)}\r\n                            okText=\"确定\"\r\n                            cancelText=\"取消\"\r\n                        >\r\n                           <Button size=\"small\">取消任务</Button>\r\n                        </Popconfirm>\r\n                        \r\n                    </Space>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n    const columns_result = [\r\n        {\r\n            dataIndex: 'no',\r\n            title: \"编号\",\r\n            align:\"center\",\r\n        },\r\n        {\r\n            dataIndex: 'sql',\r\n            title: \"语句\",\r\n            align:\"left\",\r\n        },\r\n        {\r\n            dataIndex: 'result',\r\n            title: \"执行结果\",\r\n            align:\"left\",\r\n            render:(text,record)=>{\r\n                return <pre style={{whiteSpace:'pre-line'}}>{text}</pre>\r\n              }\r\n        },\r\n    ]\r\n    const getproject = async()=>{\r\n        const res = await _getproject({id:0,name:''})\r\n        if(res.status === 200 && res.data.code === 1000){\r\n            setProjectlist(res.data.data)\r\n        }\r\n    }\r\n    const openshowsql = (record)=>{\r\n        setSqlcontent(record.sql)\r\n        setShowsql(true)\r\n    }\r\n    const openresult = (record)=>{\r\n        if( record.result.trim() == ''){\r\n            message.warning('无执行结果')\r\n            return false\r\n        }\r\n        if(record.result == ''){\r\n            message.error('无执行结果')\r\n            return false\r\n        }\r\n        try{\r\n            JSON.parse(record.result)\r\n            setResultcontent(JSON.parse(record.result))\r\n            setShowresult(true)\r\n        }catch(e){\r\n            message.error('无执行结果')\r\n        }\r\n    }\r\n    const onok = ()=>{\r\n        setShowsql(false)\r\n        setShowresult(false)\r\n    }\r\n    const onCancel = ()=>{\r\n        setShowsql(false)\r\n        setShowresult(false)\r\n    }\r\n    const getInstance = async()=>{\r\n        const res = await _dbinstancequery({})\r\n        if(res.status === 200 && res.data.code === 1000){\r\n            setInstancetypelist(res.data.data)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        getInstance()\r\n        getproject()\r\n    },[])\r\n    useEffect(()=>{ \r\n        let boxheight = (document.documentElement.clientHeight || document.body.clientHeight)  -280;\r\n        setTableheight(boxheight)\r\n        getData({})\r\n        window.addEventListener('resize', handleResize);\r\n        return ()=>{\r\n        window.removeEventListener('resize', handleResize);\r\n        }\r\n    },[]);\r\n    const tabonChange = (value)=>{\r\n        setActiveTab(value)\r\n        let values = form.getFieldsValue()\r\n        let status = ''\r\n        if( value == '2'){\r\n            status = 'init'\r\n            form.setFieldsValue({status: 'init'})\r\n        } else {\r\n            status = values.status ? values.status:undefined\r\n            form.setFieldsValue({status: status})\r\n        }\r\n        let params = {\r\n            relatedChainID: values.relatedChainID? values.relatedChainID:undefined,\r\n            status: status,\r\n            tag: values.tag? values.tag:undefined,\r\n            dbInstanceId:  values.dbInstanceId? values.dbInstanceId:undefined,\r\n            projectId:values.projectId?values.projectId:undefined,\r\n            projectEnv:values.projectEnv?values.projectEnv:undefined,\r\n        }\r\n        getData(params)\r\n      \r\n    }\r\n    const doseacher = (values)=>{\r\n        let params = {\r\n            relatedChainID: values.relatedChainID? values.relatedChainID:undefined,\r\n            status: values.status? values.status:undefined,\r\n            tag: values.tag? values.tag:undefined,\r\n            dbInstanceId:  values.dbInstanceId? values.dbInstanceId:undefined,\r\n            projectId:values.projectId?values.projectId:undefined,\r\n            projectEnv:values.projectEnv?values.projectEnv:undefined,\r\n        }\r\n        getData(params)\r\n    }\r\n    const updatedata = ()=>{\r\n        setselecteddbRowKeys([])\r\n        let values = form.getFieldsValue()\r\n        let params = {\r\n            relatedChainID: values.relatedChainID? values.relatedChainID:undefined,\r\n            status: values.status? values.status:undefined,\r\n            tag: values.tag? values.tag:undefined,\r\n            dbInstanceId:  values.dbInstanceId? values.dbInstanceId:undefined,\r\n            projectEnv:values.projectEnv?values.projectEnv:undefined,\r\n            projectId:values.projectId?values.projectId:undefined,\r\n        }\r\n        getData(params)\r\n    }\r\n    const getData = async(params)=>{\r\n        setSpinning(true)\r\n        const res = await _executerecord(params)\r\n        const {status,data} = res\r\n        if(status === 200 && data.code ===1000){\r\n            data.data.map(item=>item.key = item.id)\r\n            setData(data.data)\r\n        } else {\r\n            setData([])\r\n        }\r\n        setSpinning(false)\r\n    }\r\n    const handleResize = ()=>{\r\n        let boxheight = (document.documentElement.clientHeight || document.body.clientHeight) - 280;\r\n        setTimeout(()=>{\r\n            setTableheight(boxheight)\r\n        },100)\r\n    }\r\n    const showdetailmsg = async(data)=>{\r\n        const res = await _getinstancedetail({id: data.dbInstanceId})\r\n        if(res.status === 200 && res.data.code === 1000){\r\n            setDetaildata(res.data.data)\r\n            setShowinfo(true)\r\n        } else {\r\n            message.warning(res.data.message)\r\n        }\r\n    }\r\n    const closeshowinfo = ()=>{\r\n        setShowinfo(false)\r\n    }\r\n    const closetask = ()=>{\r\n        setShowreatetask(false)\r\n    }\r\n    const rowSelection = {\r\n        selectedRowKeys: selecteddbRowKeys,\r\n        onChange: selectedRowKeys => {\r\n            console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n            setselecteddbRowKeys(selectedRowKeys)\r\n            // this.setState({ selectedRowKeys });\r\n        //     if(selectedRowKeys.length>2){\r\n        //         message.warning('只能选择两个实例,请重新选择')\r\n        //         return false\r\n        //     } else {\r\n        //         setselecteddbRowKeys(selectedRowKeys)\r\n        //     }\r\n        //    console.log(selectedRowKeys)\r\n          \r\n          },\r\n        getCheckboxProps: (record) => ({\r\n          disabled: record.status !== 'done' || form.getFieldValue('projectEnv') !== 'uat',\r\n          // Column configuration not to be checked\r\n        //   name: record.status,\r\n        }),\r\n    }  \r\n    const showTask = ()=>{\r\n        let selectdata = []\r\n        selecteddbRowKeys.map( item =>{\r\n            selectdata.push((data.filter(record=>record.id == item))[0])\r\n        })\r\n        console.log('selectdata',selectdata)\r\n        setselectdata(selectdata)\r\n        setShowreatetask(true)\r\n    }\r\n    const canceltask = async(record) =>{\r\n        const res = await _deletetask({id: record.id})\r\n        if(res.status === 200 && res.data.code === 1000){\r\n            message.success('删除成功')\r\n            tabonChange('2')\r\n        } else {\r\n            message.error(res.data.message)\r\n        }\r\n    }\r\n  return(\r\n    <>\r\n      <BreadNav title={\"历史记录\"} props={props} childtitle={'执行记录'}></BreadNav>\r\n      {\r\n        showinfo?< Detail data={detaildata} showinfo={showinfo} closeShowinfo={closeshowinfo}/>:null\r\n      }\r\n      {\r\n        showcreatetask?<Createtask \r\n                        selectdata={selectdata} \r\n                        projectlist={projectlist}\r\n                        closetask={closetask}\r\n                        updatedata={updatedata}\r\n                        showcreatetask={showcreatetask}\r\n                        />:null\r\n      }\r\n      {\r\n        showsql?<Modal title=\"sql语句\" visible={showsql} width=\"70%\" onCancel={onCancel} onOk={onok}>\r\n                    <div>\r\n                    <Codemirrowindex ref={codemirrowref} edidit={false} height={300} showsql={showsql} sqlcontent={sqlcontent}/>\r\n                    </div>\r\n            </Modal>:\r\n            null\r\n      }\r\n       \r\n      <Modal title=\"执行结果\" visible={showresult} width=\"70%\" onCancel={onCancel} onOk={onok}>\r\n            <div>\r\n            <Table\r\n                columns = {columns_result}\r\n                bordered={true}\r\n                dataSource={resultcontent} \r\n            />\r\n            </div>\r\n      </Modal>\r\n    <div className=\"seacher\"  style={{padding: '12px 20px',height: 'auto'}}>\r\n             <Form\r\n                form={form}\r\n                onFinish={doseacher}\r\n                >\r\n               <Row gutter={10}>\r\n                   <Col span={6}>\r\n                        <Form.Item label=\"提交人\" name=\"relatedChainID\">\r\n                            <Input  />\r\n                        </Form.Item>\r\n                   </Col>\r\n                   <Col span={6}>\r\n                        <Form.Item label=\"状态\" name=\"status\">\r\n                           <Select allowClear disabled={activetab=='2'?true:false}>\r\n                               <Select.Option value={'init'}>待执行</Select.Option>\r\n                               <Select.Option value={'done'}>成功</Select.Option>\r\n                               <Select.Option value={'undone'}>失败</Select.Option>\r\n                           </Select>\r\n                        </Form.Item>\r\n                   </Col>\r\n                   <Col span={6}>\r\n                        <Form.Item label=\"版本\" name=\"tag\">\r\n                            <Input  />\r\n                        </Form.Item>\r\n                   </Col>\r\n                   <Col span={6}>\r\n                        <Form.Item label=\"实例名\" name=\"dbInstanceId\">\r\n                           <Select allowClear>\r\n                            {\r\n                                instancetypelist.map((item,index)=>{\r\n                                    return  <Select.Option value={item.id} key={index+'ins'}>{item.name}</Select.Option>\r\n                                })\r\n                            }\r\n                           </Select>\r\n                        </Form.Item>\r\n                   </Col>\r\n                </Row>\r\n                <Row gutter={10}>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"项目名\" name=\"projectId\">\r\n                           <Select allowClear>\r\n                            {\r\n                                projectlist.map((item,index)=>{\r\n                                    return <Select.Option key={index+'pro'} value={item.id}>{item.name}</Select.Option>\r\n                                })\r\n                            }\r\n                           </Select>\r\n                        </Form.Item>\r\n                   </Col>\r\n                   <Col span={6}>\r\n                        <Form.Item label=\"环境\" name=\"projectEnv\">\r\n                           <Select allowClear>\r\n                               <Select.Option value={'it'}>it</Select.Option>\r\n                               <Select.Option value={'uat'}>uat</Select.Option>\r\n                               <Select.Option value={'sim'}>sim</Select.Option>\r\n                               <Select.Option value={'out'}>out</Select.Option>\r\n                               <Select.Option value={'pro'}>pro</Select.Option>\r\n                           </Select>\r\n                        </Form.Item>\r\n                   </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item label=\"\">\r\n                            <Space>\r\n                                <Button type=\"primary\" htmlType='submit'>查询</Button>\r\n                                {\r\n                                    activetab=='1'?\r\n                                    <Button onClick={showTask} disabled={selecteddbRowKeys.length==0?true:false}>创建任务</Button>\r\n                                    :\r\n                                    null\r\n                                }\r\n                                \r\n                            </Space>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div> \r\n        <div style={{height: tableheight+'px',overflow:'hidden',overflowY:'scroll',background: '#fff',marginTop:'10px',padding: '0 20px'}} className=\"configmapbox\">\r\n                <Tabs activeKey={activetab} onChange={tabonChange}>\r\n                    <TabPane tab=\"执行记录\" key=\"1\">\r\n                        <div style={{padding:'10px 0'}}>\r\n                            <Table\r\n                                columns = {columns_record}\r\n                                rowSelection={rowSelection}\r\n                                bordered={true}\r\n                                loading={spinning}\r\n                                dataSource={data} \r\n                            />\r\n                        </div>\r\n                    </TabPane>\r\n                    <TabPane tab=\"执行任务\" key=\"2\">\r\n                         <div style={{padding:'10px 0'}}>\r\n                            <Table\r\n                                columns = {columns_task}\r\n                               \r\n                                bordered={true}\r\n                                loading={spinning}\r\n                                dataSource={data} \r\n                            />\r\n                        </div>\r\n                    </TabPane>\r\n                </Tabs>\r\n        </div>\r\n    </>\r\n  )\r\n};\r\nexport default withRouter(Carryouthistory);\r\n","D:\\wanxiang\\sql_plat\\src\\setupProxy.js",[],"D:\\wanxiang\\sql_plat\\src\\service\\server.js",[],"D:\\wanxiang\\sql_plat\\src\\main.js",[],"D:\\wanxiang\\sql_plat\\src\\action\\menuSaga.js",["1123","1124","1125"],["1126","1127"],"D:\\wanxiang\\sql_plat\\src\\service\\instance.js",[],"D:\\wanxiang\\sql_plat\\src\\service\\sqlcheck.js",[],"D:\\wanxiang\\sql_plat\\src\\store\\index.js",["1128"],"D:\\wanxiang\\sql_plat\\src\\pages\\_404Page.js",["1129"],"D:\\wanxiang\\sql_plat\\src\\store\\loginReducer.js",[],"D:\\wanxiang\\sql_plat\\src\\service\\history.js",[],"D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\components\\addInstance.js",["1130","1131","1132","1133","1134"],"import React,{useEffect,useState} from 'react'\r\nimport { Form,Button,Space,Select,Input, message } from 'antd';\r\nimport {_addinstance,_testinstance} from '../../../service/instance'\r\nimport moment from 'moment'\r\nconst Addinstance = (props)=>{\r\n    const [form] = Form.useForm()\r\n    const [showsave,setshowsave] = useState(false)\r\n    const onFinish = async(values)=>{\r\n        let params= {\r\n            name: values.name,\r\n            type: values.type,\r\n            ip: values.ip,\r\n            port: values.port,\r\n            username: values.username,\r\n            password: values.password,\r\n            status: 'inuse',\r\n            updateTime: moment(new Date()).format('YYYY-MM-DD:HH:mm:ss'),\r\n            createTime: moment(new Date()).format('YYYY-MM-DD:HH:mm:ss')\r\n        }\r\n        const res = await _addinstance([params])\r\n        if(res.status === 200 && res.data.code === 1000){\r\n            message.success('保存成功')\r\n            if(props.addType == 'add'){\r\n                form.resetFields()\r\n            }\r\n            if(props.addType == 'edit'){\r\n                form.setFields({\r\n                    name: undefined,\r\n                    type: 'mysql',\r\n                    ip: undefined,\r\n                    port: undefined,\r\n                    username: undefined,\r\n                    password: undefined\r\n                })\r\n            }\r\n            setshowsave(false)\r\n            props.cancelinstance()\r\n            props.doseacher()\r\n        } else {\r\n            message.error(res.data.message)\r\n        }\r\n    }\r\n    const oncancel = ()=>{\r\n        form.resetFields()\r\n        setshowsave(false)\r\n        props.cancelinstance()\r\n    }\r\n    const testlink = async()=>{\r\n        let filedsvalue =  form.getFieldValue();\r\n        await form.validateFields()\r\n        let params = {\r\n            ...filedsvalue\r\n        }\r\n        const res = await _testinstance({...params})\r\n        console.log(res)\r\n        if(res.status === 200 && res.data.code === 1000 && res.data.message == 'success'){\r\n            message.success('测试通过！')\r\n            setshowsave(true)\r\n        } else {\r\n            message.error(res.data.message)\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        if(props.showaddinstance && props.addType == 'edit'){\r\n            form.setFieldsValue({...props.instancerecord})\r\n        }\r\n    },[props.showaddinstance])\r\n    return (\r\n        <div>\r\n            <Form  \r\n                form={form} \r\n                onFinish={onFinish}\r\n                labelCol={{ span: 5 }}\r\n                wrapperCol={{ span: 16 }}\r\n                size=\"small\"\r\n                initialValues={{ type: 'mysql' }}\r\n            >\r\n                <Form.Item label=\"实例别名\" name=\"name\" rules={[{ required: true }]}>\r\n                    <Input  />\r\n                </Form.Item>\r\n                <Form.Item label=\"类型\" name=\"type\"  rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Select.Option value={'mysql'}>mysql</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"IP地址\" name=\"ip\"  rules={[{ required: true }]}>\r\n                    <Input  />\r\n                </Form.Item>\r\n                <Form.Item label=\"端口\" name=\"port\"  rules={[{ required: true }]}>\r\n                    <Input  />\r\n                </Form.Item>\r\n                <Form.Item label=\"用户名\" name=\"username\"  rules={[{ required: true }]}>\r\n                    <Input  />\r\n                </Form.Item>\r\n                <Form.Item label=\"密码\" name=\"password\"  rules={[{ required: true }]}>\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item \r\n                    label=\"\"   \r\n                    labelCol={{ span: 5 }}\r\n                    wrapperCol={{offset: 6, span: 16 }}\r\n                >\r\n                    <Space>\r\n                        <Button type=\"primary\"  onClick={testlink}>测试连接</Button>\r\n                        <Button type=\"primary\"  htmlType='submit' disabled={showsave?false:true}>保存</Button>\r\n                        <Button type=\"primary\"  onClick={oncancel}>取消</Button>\r\n                    </Space>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default  Addinstance;","D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\components\\contact.js",["1135","1136","1137"],"D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\components\\compare.js",["1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149"],"D:\\wanxiang\\sql_plat\\src\\pages\\history\\components\\detail.js",["1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161"],"D:\\wanxiang\\sql_plat\\src\\pages\\history\\components\\createTask.js",["1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184"],"D:\\wanxiang\\sql_plat\\src\\action\\rootSaga.js",[],"D:\\wanxiang\\sql_plat\\src\\pages\\instancemanagement\\components\\editinstance.js",["1185","1186"],"import React,{useEffect,useState} from 'react'\r\nimport { Form,Button,Space,Select,Input, message } from 'antd';\r\nimport {_updateinstance} from '../../../service/instance'\r\nimport moment from 'moment'\r\nconst {Option} = Select;\r\nconst Editinstance = (props)=>{\r\n    const [form] = Form.useForm()\r\n    const [showsave,setshowsave] = useState(false)\r\n    const onFinish = async(values)=>{\r\n        let params= {\r\n            name: values.name,\r\n            id: props.instancerecord.id,\r\n            status:values.status,\r\n            updateTime: moment(new Date()).format('YYYY-MM-DD:HH:mm:ss'),\r\n        }\r\n        const res = await _updateinstance(params)\r\n        if(res.status === 200 && res.data.code === 1000){\r\n            message.success('更新成功')\r\n            form.setFieldsValue({\r\n                name: undefined,\r\n                status:undefined,\r\n            })\r\n            setshowsave(false)\r\n            props.cancelinstance()\r\n            props.doseacher()\r\n        } else {\r\n            message.error(res.data.message)\r\n        }\r\n    }\r\n    const oncancel = ()=>{\r\n        form.resetFields()\r\n        setshowsave(false)\r\n        props.cancelinstance()\r\n    }\r\n   \r\n    useEffect(()=>{\r\n        form.setFieldsValue({name: props.instancerecord.name,status:  props.instancerecord.status})\r\n    },[props.showaddinstance])\r\n    return (\r\n        <div>\r\n            <Form  \r\n                form={form} \r\n                onFinish={onFinish}\r\n                labelCol={{ span: 5 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={{ type: 'mysql' }}\r\n            >\r\n                <Form.Item label=\"实例别名\" name=\"name\" rules={[{ required: true }]}>\r\n                    <Input  />\r\n                </Form.Item>\r\n               \r\n                <Form.Item label=\"状态\" name=\"status\"  rules={[{ required: true }]}>\r\n                    <Select>\r\n                        <Option value=\"inuse\">可用</Option>\r\n                        <Option value=\"notuse\">停用</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item \r\n                    label=\"\"   \r\n                    labelCol={{ span: 5 }}\r\n                    wrapperCol={{offset: 6, span: 16 }}\r\n                >\r\n                    <Space>\r\n                        <Button type=\"primary\"  htmlType='submit'>更新</Button>\r\n                        <Button type=\"primary\"  onClick={oncancel}>取消</Button>\r\n                    </Space>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default  Editinstance;",{"ruleId":"1187","severity":1,"message":"1188","line":4,"column":8,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":10},{"ruleId":"1187","severity":1,"message":"1191","line":24,"column":9,"nodeType":"1189","messageId":"1190","endLine":24,"endColumn":15},{"ruleId":"1187","severity":1,"message":"1192","line":26,"column":10,"nodeType":"1189","messageId":"1190","endLine":26,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1193","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":36},{"ruleId":"1187","severity":1,"message":"1194","line":2,"column":10,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1195","line":2,"column":16,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1196","line":2,"column":23,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":29},{"ruleId":"1187","severity":1,"message":"1197","line":2,"column":3,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":7},{"ruleId":"1187","severity":1,"message":"1198","line":5,"column":3,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":7},{"ruleId":"1187","severity":1,"message":"1199","line":6,"column":3,"nodeType":"1189","messageId":"1190","endLine":6,"endColumn":7},{"ruleId":"1187","severity":1,"message":"1200","line":23,"column":8,"nodeType":"1189","messageId":"1190","endLine":23,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1202","line":60,"column":25,"nodeType":"1203","messageId":"1204","endLine":60,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1202","line":74,"column":25,"nodeType":"1203","messageId":"1204","endLine":74,"endColumn":27},{"ruleId":"1205","severity":1,"message":"1206","line":79,"column":7,"nodeType":"1207","endLine":79,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1202","line":86,"column":38,"nodeType":"1203","messageId":"1204","endLine":86,"endColumn":40},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":37,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":43},{"ruleId":"1187","severity":1,"message":"1209","line":2,"column":35,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":41},{"ruleId":"1187","severity":1,"message":"1195","line":2,"column":42,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":47},{"ruleId":"1187","severity":1,"message":"1210","line":2,"column":48,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":53},{"ruleId":"1187","severity":1,"message":"1211","line":2,"column":54,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":59},{"ruleId":"1187","severity":1,"message":"1212","line":8,"column":12,"nodeType":"1189","messageId":"1190","endLine":8,"endColumn":16},{"ruleId":"1213","severity":1,"message":"1214","line":89,"column":60,"nodeType":"1215","messageId":"1216","endLine":89,"endColumn":62},{"ruleId":"1187","severity":1,"message":"1193","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":36},{"ruleId":"1187","severity":1,"message":"1194","line":2,"column":10,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1195","line":2,"column":16,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1196","line":2,"column":23,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":29},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":37,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":43},{"ruleId":"1187","severity":1,"message":"1195","line":2,"column":47,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":52},{"ruleId":"1187","severity":1,"message":"1217","line":3,"column":37,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":58},{"ruleId":"1187","severity":1,"message":"1218","line":17,"column":12,"nodeType":"1189","messageId":"1190","endLine":17,"endColumn":23},{"ruleId":"1219","replacedBy":"1220"},{"ruleId":"1221","replacedBy":"1222"},{"ruleId":"1219","replacedBy":"1223"},{"ruleId":"1221","replacedBy":"1224"},{"ruleId":"1187","severity":1,"message":"1225","line":1,"column":36,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":46},{"ruleId":"1187","severity":1,"message":"1226","line":3,"column":18,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":28},{"ruleId":"1187","severity":1,"message":"1227","line":3,"column":29,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":35},{"ruleId":"1187","severity":1,"message":"1228","line":3,"column":36,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":43},{"ruleId":"1187","severity":1,"message":"1196","line":3,"column":44,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":50},{"ruleId":"1187","severity":1,"message":"1229","line":3,"column":51,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":54},{"ruleId":"1187","severity":1,"message":"1195","line":3,"column":55,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":60},{"ruleId":"1187","severity":1,"message":"1230","line":3,"column":61,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":68},{"ruleId":"1187","severity":1,"message":"1231","line":4,"column":10,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":22},{"ruleId":"1187","severity":1,"message":"1232","line":4,"column":24,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":35},{"ruleId":"1187","severity":1,"message":"1233","line":14,"column":9,"nodeType":"1189","messageId":"1190","endLine":14,"endColumn":15},{"ruleId":"1187","severity":1,"message":"1234","line":14,"column":26,"nodeType":"1189","messageId":"1190","endLine":14,"endColumn":32},{"ruleId":"1187","severity":1,"message":"1235","line":36,"column":12,"nodeType":"1189","messageId":"1190","endLine":36,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1236","line":37,"column":12,"nodeType":"1189","messageId":"1190","endLine":37,"endColumn":19},{"ruleId":"1187","severity":1,"message":"1237","line":38,"column":12,"nodeType":"1189","messageId":"1190","endLine":38,"endColumn":24},{"ruleId":"1187","severity":1,"message":"1238","line":39,"column":12,"nodeType":"1189","messageId":"1190","endLine":39,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1239","line":41,"column":12,"nodeType":"1189","messageId":"1190","endLine":41,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1240","line":54,"column":11,"nodeType":"1189","messageId":"1190","endLine":54,"endColumn":18},{"ruleId":"1187","severity":1,"message":"1241","line":58,"column":11,"nodeType":"1189","messageId":"1190","endLine":58,"endColumn":19},{"ruleId":"1242","severity":1,"message":"1243","line":61,"column":15,"nodeType":"1215","endLine":94,"endColumn":6},{"ruleId":"1201","severity":1,"message":"1202","line":64,"column":26,"nodeType":"1203","messageId":"1204","endLine":64,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1202","line":89,"column":39,"nodeType":"1203","messageId":"1204","endLine":89,"endColumn":41},{"ruleId":"1242","severity":1,"message":"1244","line":94,"column":7,"nodeType":"1245","endLine":94,"endColumn":9,"suggestions":"1246"},{"ruleId":"1187","severity":1,"message":"1247","line":95,"column":13,"nodeType":"1189","messageId":"1190","endLine":95,"endColumn":33},{"ruleId":"1242","severity":1,"message":"1248","line":99,"column":5,"nodeType":"1189","endLine":99,"endColumn":14,"suggestions":"1249"},{"ruleId":"1187","severity":1,"message":"1250","line":101,"column":17,"nodeType":"1189","messageId":"1190","endLine":101,"endColumn":20},{"ruleId":"1251","severity":1,"message":"1252","line":135,"column":69,"nodeType":"1253","endLine":135,"endColumn":90},{"ruleId":"1251","severity":1,"message":"1252","line":140,"column":25,"nodeType":"1253","endLine":140,"endColumn":63},{"ruleId":"1187","severity":1,"message":"1230","line":5,"column":24,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":31},{"ruleId":"1187","severity":1,"message":"1254","line":84,"column":17,"nodeType":"1189","messageId":"1190","endLine":84,"endColumn":20},{"ruleId":"1219","replacedBy":"1255"},{"ruleId":"1221","replacedBy":"1256"},{"ruleId":"1187","severity":1,"message":"1257","line":5,"column":9,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":15},{"ruleId":"1187","severity":1,"message":"1258","line":10,"column":9,"nodeType":"1189","messageId":"1190","endLine":10,"endColumn":19},{"ruleId":"1187","severity":1,"message":"1259","line":41,"column":13,"nodeType":"1189","messageId":"1190","endLine":41,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1260","line":46,"column":13,"nodeType":"1189","messageId":"1190","endLine":46,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1202","line":96,"column":23,"nodeType":"1203","messageId":"1204","endLine":96,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":98,"column":30,"nodeType":"1203","messageId":"1204","endLine":98,"endColumn":32},{"ruleId":"1242","severity":1,"message":"1261","line":115,"column":7,"nodeType":"1245","endLine":115,"endColumn":30,"suggestions":"1262"},{"ruleId":"1263","severity":1,"message":"1264","line":151,"column":17,"nodeType":"1253","endLine":151,"endColumn":84},{"ruleId":"1219","replacedBy":"1265"},{"ruleId":"1221","replacedBy":"1266"},{"ruleId":"1187","severity":1,"message":"1267","line":3,"column":9,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":14},{"ruleId":"1219","replacedBy":"1268"},{"ruleId":"1221","replacedBy":"1269"},{"ruleId":"1187","severity":1,"message":"1194","line":4,"column":5,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":9},{"ruleId":"1187","severity":1,"message":"1270","line":27,"column":45,"nodeType":"1189","messageId":"1190","endLine":27,"endColumn":60},{"ruleId":"1201","severity":1,"message":"1202","line":77,"column":54,"nodeType":"1203","messageId":"1204","endLine":77,"endColumn":56},{"ruleId":"1213","severity":1,"message":"1214","line":202,"column":26,"nodeType":"1215","messageId":"1216","endLine":202,"endColumn":28},{"ruleId":"1213","severity":1,"message":"1214","line":241,"column":39,"nodeType":"1215","messageId":"1216","endLine":241,"endColumn":41},{"ruleId":"1201","severity":1,"message":"1202","line":376,"column":39,"nodeType":"1203","messageId":"1204","endLine":376,"endColumn":41},{"ruleId":"1187","severity":1,"message":"1271","line":391,"column":13,"nodeType":"1189","messageId":"1190","endLine":391,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1202","line":401,"column":53,"nodeType":"1203","messageId":"1204","endLine":401,"endColumn":55},{"ruleId":"1201","severity":1,"message":"1202","line":439,"column":25,"nodeType":"1203","messageId":"1204","endLine":439,"endColumn":27},{"ruleId":"1213","severity":1,"message":"1214","line":446,"column":27,"nodeType":"1215","messageId":"1216","endLine":446,"endColumn":29},{"ruleId":"1201","severity":1,"message":"1202","line":448,"column":28,"nodeType":"1203","messageId":"1204","endLine":448,"endColumn":30},{"ruleId":"1201","severity":1,"message":"1202","line":558,"column":102,"nodeType":"1203","messageId":"1204","endLine":558,"endColumn":104},{"ruleId":"1201","severity":1,"message":"1202","line":572,"column":99,"nodeType":"1203","messageId":"1204","endLine":572,"endColumn":101},{"ruleId":"1201","severity":1,"message":"1202","line":582,"column":99,"nodeType":"1203","messageId":"1204","endLine":582,"endColumn":101},{"ruleId":"1201","severity":1,"message":"1202","line":596,"column":99,"nodeType":"1203","messageId":"1204","endLine":596,"endColumn":101},{"ruleId":"1201","severity":1,"message":"1202","line":606,"column":99,"nodeType":"1203","messageId":"1204","endLine":606,"endColumn":101},{"ruleId":"1201","severity":1,"message":"1202","line":626,"column":47,"nodeType":"1203","messageId":"1204","endLine":626,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1202","line":631,"column":49,"nodeType":"1203","messageId":"1204","endLine":631,"endColumn":51},{"ruleId":"1201","severity":1,"message":"1202","line":631,"column":87,"nodeType":"1203","messageId":"1204","endLine":631,"endColumn":89},{"ruleId":"1201","severity":1,"message":"1202","line":636,"column":48,"nodeType":"1203","messageId":"1204","endLine":636,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1202","line":636,"column":83,"nodeType":"1203","messageId":"1204","endLine":636,"endColumn":85},{"ruleId":"1201","severity":1,"message":"1202","line":673,"column":63,"nodeType":"1203","messageId":"1204","endLine":673,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":675,"column":105,"nodeType":"1203","messageId":"1204","endLine":675,"endColumn":107},{"ruleId":"1201","severity":1,"message":"1202","line":678,"column":63,"nodeType":"1203","messageId":"1204","endLine":678,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":680,"column":82,"nodeType":"1203","messageId":"1204","endLine":680,"endColumn":84},{"ruleId":"1201","severity":1,"message":"1202","line":684,"column":67,"nodeType":"1203","messageId":"1204","endLine":684,"endColumn":69},{"ruleId":"1201","severity":1,"message":"1202","line":714,"column":121,"nodeType":"1203","messageId":"1204","endLine":714,"endColumn":123},{"ruleId":"1201","severity":1,"message":"1202","line":715,"column":116,"nodeType":"1203","messageId":"1204","endLine":715,"endColumn":118},{"ruleId":"1187","severity":1,"message":"1272","line":4,"column":10,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":15},{"ruleId":"1187","severity":1,"message":"1273","line":5,"column":84,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":102},{"ruleId":"1187","severity":1,"message":"1274","line":12,"column":11,"nodeType":"1189","messageId":"1190","endLine":12,"endColumn":22},{"ruleId":"1187","severity":1,"message":"1275","line":12,"column":23,"nodeType":"1189","messageId":"1190","endLine":12,"endColumn":37},{"ruleId":"1187","severity":1,"message":"1276","line":47,"column":13,"nodeType":"1189","messageId":"1190","endLine":47,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":48,"column":22,"nodeType":"1203","messageId":"1204","endLine":48,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1202","line":53,"column":22,"nodeType":"1203","messageId":"1204","endLine":53,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1202","line":60,"column":21,"nodeType":"1203","messageId":"1204","endLine":60,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1202","line":68,"column":36,"nodeType":"1203","messageId":"1204","endLine":68,"endColumn":38},{"ruleId":"1201","severity":1,"message":"1202","line":87,"column":19,"nodeType":"1203","messageId":"1204","endLine":87,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1202","line":105,"column":23,"nodeType":"1203","messageId":"1204","endLine":105,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":124,"column":19,"nodeType":"1203","messageId":"1204","endLine":124,"endColumn":21},{"ruleId":"1242","severity":1,"message":"1277","line":139,"column":6,"nodeType":"1245","endLine":139,"endColumn":8,"suggestions":"1278"},{"ruleId":"1263","severity":1,"message":"1264","line":149,"column":21,"nodeType":"1253","endLine":154,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1202","line":202,"column":57,"nodeType":"1203","messageId":"1204","endLine":202,"endColumn":59},{"ruleId":"1201","severity":1,"message":"1202","line":207,"column":57,"nodeType":"1203","messageId":"1204","endLine":207,"endColumn":59},{"ruleId":"1201","severity":1,"message":"1202","line":212,"column":57,"nodeType":"1203","messageId":"1204","endLine":212,"endColumn":59},{"ruleId":"1201","severity":1,"message":"1202","line":212,"column":93,"nodeType":"1203","messageId":"1204","endLine":212,"endColumn":95},{"ruleId":"1201","severity":1,"message":"1202","line":217,"column":57,"nodeType":"1203","messageId":"1204","endLine":217,"endColumn":59},{"ruleId":"1201","severity":1,"message":"1202","line":242,"column":101,"nodeType":"1203","messageId":"1204","endLine":242,"endColumn":103},{"ruleId":"1201","severity":1,"message":"1202","line":246,"column":100,"nodeType":"1203","messageId":"1204","endLine":246,"endColumn":102},{"ruleId":"1201","severity":1,"message":"1202","line":330,"column":81,"nodeType":"1203","messageId":"1204","endLine":330,"endColumn":83},{"ruleId":"1201","severity":1,"message":"1202","line":335,"column":81,"nodeType":"1203","messageId":"1204","endLine":335,"endColumn":83},{"ruleId":"1201","severity":1,"message":"1202","line":340,"column":81,"nodeType":"1203","messageId":"1204","endLine":340,"endColumn":83},{"ruleId":"1201","severity":1,"message":"1202","line":345,"column":81,"nodeType":"1203","messageId":"1204","endLine":345,"endColumn":83},{"ruleId":"1201","severity":1,"message":"1202","line":357,"column":77,"nodeType":"1203","messageId":"1204","endLine":357,"endColumn":79},{"ruleId":"1201","severity":1,"message":"1202","line":365,"column":77,"nodeType":"1203","messageId":"1204","endLine":365,"endColumn":79},{"ruleId":"1201","severity":1,"message":"1202","line":373,"column":77,"nodeType":"1203","messageId":"1204","endLine":373,"endColumn":79},{"ruleId":"1201","severity":1,"message":"1202","line":373,"column":109,"nodeType":"1203","messageId":"1204","endLine":373,"endColumn":111},{"ruleId":"1201","severity":1,"message":"1202","line":378,"column":77,"nodeType":"1203","messageId":"1204","endLine":378,"endColumn":79},{"ruleId":"1201","severity":1,"message":"1202","line":389,"column":93,"nodeType":"1203","messageId":"1204","endLine":389,"endColumn":95},{"ruleId":"1201","severity":1,"message":"1202","line":392,"column":108,"nodeType":"1203","messageId":"1204","endLine":392,"endColumn":110},{"ruleId":"1201","severity":1,"message":"1202","line":404,"column":94,"nodeType":"1203","messageId":"1204","endLine":404,"endColumn":96},{"ruleId":"1201","severity":1,"message":"1202","line":407,"column":104,"nodeType":"1203","messageId":"1204","endLine":407,"endColumn":106},{"ruleId":"1201","severity":1,"message":"1202","line":407,"column":132,"nodeType":"1203","messageId":"1204","endLine":407,"endColumn":134},{"ruleId":"1201","severity":1,"message":"1202","line":425,"column":93,"nodeType":"1203","messageId":"1204","endLine":425,"endColumn":95},{"ruleId":"1201","severity":1,"message":"1202","line":428,"column":98,"nodeType":"1203","messageId":"1204","endLine":428,"endColumn":100},{"ruleId":"1201","severity":1,"message":"1202","line":428,"column":126,"nodeType":"1203","messageId":"1204","endLine":428,"endColumn":128},{"ruleId":"1201","severity":1,"message":"1202","line":450,"column":87,"nodeType":"1203","messageId":"1204","endLine":450,"endColumn":89},{"ruleId":"1187","severity":1,"message":"1279","line":20,"column":11,"nodeType":"1189","messageId":"1190","endLine":20,"endColumn":18},{"ruleId":"1242","severity":1,"message":"1280","line":42,"column":5,"nodeType":"1245","endLine":42,"endColumn":30,"suggestions":"1281"},{"ruleId":"1187","severity":1,"message":"1282","line":2,"column":46,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":50},{"ruleId":"1187","severity":1,"message":"1283","line":2,"column":52,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":60},{"ruleId":"1187","severity":1,"message":"1284","line":3,"column":9,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":26},{"ruleId":"1187","severity":1,"message":"1285","line":3,"column":28,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":40},{"ruleId":"1187","severity":1,"message":"1286","line":3,"column":42,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":61},{"ruleId":"1187","severity":1,"message":"1287","line":15,"column":12,"nodeType":"1189","messageId":"1190","endLine":15,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1288","line":16,"column":12,"nodeType":"1189","messageId":"1190","endLine":16,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1202","line":53,"column":23,"nodeType":"1203","messageId":"1204","endLine":53,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":57,"column":23,"nodeType":"1203","messageId":"1204","endLine":57,"endColumn":25},{"ruleId":"1242","severity":1,"message":"1280","line":85,"column":7,"nodeType":"1245","endLine":85,"endColumn":30,"suggestions":"1289"},{"ruleId":"1187","severity":1,"message":"1259","line":48,"column":15,"nodeType":"1189","messageId":"1190","endLine":48,"endColumn":23},{"ruleId":"1187","severity":1,"message":"1260","line":53,"column":15,"nodeType":"1189","messageId":"1190","endLine":53,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1202","line":71,"column":31,"nodeType":"1203","messageId":"1204","endLine":71,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":76,"column":31,"nodeType":"1203","messageId":"1204","endLine":76,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":88,"column":36,"nodeType":"1203","messageId":"1204","endLine":88,"endColumn":38},{"ruleId":"1201","severity":1,"message":"1202","line":94,"column":42,"nodeType":"1203","messageId":"1204","endLine":94,"endColumn":44},{"ruleId":"1201","severity":1,"message":"1202","line":100,"column":49,"nodeType":"1203","messageId":"1204","endLine":100,"endColumn":51},{"ruleId":"1201","severity":1,"message":"1202","line":135,"column":23,"nodeType":"1203","messageId":"1204","endLine":135,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":137,"column":30,"nodeType":"1203","messageId":"1204","endLine":137,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":142,"column":18,"nodeType":"1203","messageId":"1204","endLine":142,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1202","line":144,"column":25,"nodeType":"1203","messageId":"1204","endLine":144,"endColumn":27},{"ruleId":"1242","severity":1,"message":"1261","line":187,"column":7,"nodeType":"1245","endLine":187,"endColumn":30,"suggestions":"1290"},{"ruleId":"1201","severity":1,"message":"1202","line":214,"column":32,"nodeType":"1203","messageId":"1204","endLine":214,"endColumn":34},{"ruleId":"1201","severity":1,"message":"1202","line":232,"column":32,"nodeType":"1203","messageId":"1204","endLine":232,"endColumn":34},{"ruleId":"1263","severity":1,"message":"1264","line":278,"column":17,"nodeType":"1253","endLine":278,"endColumn":84},{"ruleId":"1187","severity":1,"message":"1291","line":2,"column":46,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":54},{"ruleId":"1219","replacedBy":"1292"},{"ruleId":"1221","replacedBy":"1293"},{"ruleId":"1251","severity":1,"message":"1252","line":7,"column":13,"nodeType":"1253","endLine":7,"endColumn":38},{"ruleId":"1219","replacedBy":"1294"},{"ruleId":"1221","replacedBy":"1295"},{"ruleId":"1219","replacedBy":"1296"},{"ruleId":"1221","replacedBy":"1297"},{"ruleId":"1187","severity":1,"message":"1197","line":5,"column":3,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":7},{"ruleId":"1187","severity":1,"message":"1198","line":8,"column":3,"nodeType":"1189","messageId":"1190","endLine":8,"endColumn":7},{"ruleId":"1187","severity":1,"message":"1199","line":9,"column":3,"nodeType":"1189","messageId":"1190","endLine":9,"endColumn":7},{"ruleId":"1219","replacedBy":"1298"},{"ruleId":"1221","replacedBy":"1299"},{"ruleId":"1187","severity":1,"message":"1300","line":4,"column":9,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1301","line":4,"column":69,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":90},{"ruleId":"1187","severity":1,"message":"1302","line":11,"column":9,"nodeType":"1189","messageId":"1190","endLine":11,"endColumn":14},{"ruleId":"1201","severity":1,"message":"1202","line":72,"column":74,"nodeType":"1203","messageId":"1204","endLine":72,"endColumn":76},{"ruleId":"1201","severity":1,"message":"1202","line":72,"column":116,"nodeType":"1203","messageId":"1204","endLine":72,"endColumn":118},{"ruleId":"1201","severity":1,"message":"1202","line":72,"column":148,"nodeType":"1203","messageId":"1204","endLine":72,"endColumn":150},{"ruleId":"1201","severity":1,"message":"1202","line":76,"column":79,"nodeType":"1203","messageId":"1204","endLine":76,"endColumn":81},{"ruleId":"1201","severity":1,"message":"1202","line":76,"column":122,"nodeType":"1203","messageId":"1204","endLine":76,"endColumn":124},{"ruleId":"1201","severity":1,"message":"1202","line":78,"column":80,"nodeType":"1203","messageId":"1204","endLine":78,"endColumn":82},{"ruleId":"1201","severity":1,"message":"1202","line":78,"column":119,"nodeType":"1203","messageId":"1204","endLine":78,"endColumn":121},{"ruleId":"1201","severity":1,"message":"1202","line":83,"column":55,"nodeType":"1203","messageId":"1204","endLine":83,"endColumn":57},{"ruleId":"1201","severity":1,"message":"1202","line":86,"column":74,"nodeType":"1203","messageId":"1204","endLine":86,"endColumn":76},{"ruleId":"1201","severity":1,"message":"1202","line":90,"column":78,"nodeType":"1203","messageId":"1204","endLine":90,"endColumn":80},{"ruleId":"1201","severity":1,"message":"1202","line":170,"column":34,"nodeType":"1203","messageId":"1204","endLine":170,"endColumn":36},{"ruleId":"1201","severity":1,"message":"1202","line":174,"column":41,"nodeType":"1203","messageId":"1204","endLine":174,"endColumn":43},{"ruleId":"1201","severity":1,"message":"1202","line":265,"column":80,"nodeType":"1203","messageId":"1204","endLine":265,"endColumn":82},{"ruleId":"1201","severity":1,"message":"1202","line":349,"column":22,"nodeType":"1203","messageId":"1204","endLine":349,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1202","line":455,"column":162,"nodeType":"1203","messageId":"1204","endLine":455,"endColumn":164},{"ruleId":"1187","severity":1,"message":"1188","line":4,"column":8,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":10},{"ruleId":"1187","severity":1,"message":"1191","line":24,"column":9,"nodeType":"1189","messageId":"1190","endLine":24,"endColumn":15},{"ruleId":"1187","severity":1,"message":"1192","line":26,"column":10,"nodeType":"1189","messageId":"1190","endLine":26,"endColumn":14},{"ruleId":"1219","replacedBy":"1303"},{"ruleId":"1221","replacedBy":"1304"},{"ruleId":"1187","severity":1,"message":"1197","line":2,"column":3,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":7},{"ruleId":"1187","severity":1,"message":"1198","line":5,"column":3,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":7},{"ruleId":"1187","severity":1,"message":"1199","line":6,"column":3,"nodeType":"1189","messageId":"1190","endLine":6,"endColumn":7},{"ruleId":"1219","replacedBy":"1305"},{"ruleId":"1221","replacedBy":"1306"},{"ruleId":"1307","severity":1,"message":"1308","line":2,"column":1,"nodeType":"1309","endLine":53,"endColumn":2},{"ruleId":"1187","severity":1,"message":"1193","line":1,"column":16,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":25},{"ruleId":"1242","severity":1,"message":"1310","line":90,"column":7,"nodeType":"1245","endLine":90,"endColumn":9,"suggestions":"1311"},{"ruleId":"1263","severity":1,"message":"1264","line":111,"column":17,"nodeType":"1253","endLine":116,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1202","line":173,"column":35,"nodeType":"1203","messageId":"1204","endLine":173,"endColumn":37},{"ruleId":"1187","severity":1,"message":"1312","line":4,"column":8,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":13},{"ruleId":"1219","replacedBy":"1313"},{"ruleId":"1221","replacedBy":"1314"},{"ruleId":"1187","severity":1,"message":"1196","line":5,"column":18,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":24},{"ruleId":"1219","replacedBy":"1315"},{"ruleId":"1221","replacedBy":"1316"},{"ruleId":"1187","severity":1,"message":"1229","line":3,"column":10,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":13},{"ruleId":"1187","severity":1,"message":"1317","line":3,"column":15,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":18},{"ruleId":"1187","severity":1,"message":"1318","line":7,"column":76,"nodeType":"1189","messageId":"1190","endLine":7,"endColumn":87},{"ruleId":"1263","severity":1,"message":"1319","line":45,"column":28,"nodeType":"1253","endLine":45,"endColumn":95},{"ruleId":"1320","severity":1,"message":"1321","line":45,"column":36,"nodeType":"1322","messageId":"1323","endLine":45,"endColumn":50},{"ruleId":"1263","severity":1,"message":"1264","line":94,"column":29,"nodeType":"1253","endLine":94,"endColumn":96},{"ruleId":"1263","severity":1,"message":"1319","line":108,"column":28,"nodeType":"1253","endLine":108,"endColumn":95},{"ruleId":"1320","severity":1,"message":"1321","line":108,"column":36,"nodeType":"1322","messageId":"1323","endLine":108,"endColumn":50},{"ruleId":"1263","severity":1,"message":"1264","line":159,"column":29,"nodeType":"1253","endLine":159,"endColumn":96},{"ruleId":"1263","severity":1,"message":"1264","line":241,"column":29,"nodeType":"1253","endLine":241,"endColumn":96},{"ruleId":"1187","severity":1,"message":"1324","line":427,"column":17,"nodeType":"1189","messageId":"1190","endLine":427,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1202","line":558,"column":16,"nodeType":"1203","messageId":"1204","endLine":558,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1202","line":562,"column":16,"nodeType":"1203","messageId":"1204","endLine":562,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1202","line":693,"column":61,"nodeType":"1203","messageId":"1204","endLine":693,"endColumn":63},{"ruleId":"1187","severity":1,"message":"1325","line":1,"column":17,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":25},{"ruleId":"1187","severity":1,"message":"1193","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":36},{"ruleId":"1263","severity":1,"message":"1264","line":10,"column":13,"nodeType":"1253","endLine":15,"endColumn":14},{"ruleId":"1219","replacedBy":"1326"},{"ruleId":"1221","replacedBy":"1327"},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1209","line":4,"column":3,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":9},{"ruleId":"1187","severity":1,"message":"1328","line":14,"column":9,"nodeType":"1189","messageId":"1190","endLine":14,"endColumn":23},{"ruleId":"1242","severity":1,"message":"1329","line":25,"column":5,"nodeType":"1245","endLine":25,"endColumn":25,"suggestions":"1330"},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1242","severity":1,"message":"1244","line":34,"column":5,"nodeType":"1245","endLine":34,"endColumn":29,"suggestions":"1331"},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1332","line":5,"column":10,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":17},{"ruleId":"1187","severity":1,"message":"1333","line":28,"column":13,"nodeType":"1189","messageId":"1190","endLine":28,"endColumn":25},{"ruleId":"1187","severity":1,"message":"1334","line":29,"column":13,"nodeType":"1189","messageId":"1190","endLine":29,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1335","line":30,"column":13,"nodeType":"1189","messageId":"1190","endLine":30,"endColumn":19},{"ruleId":"1336","severity":1,"message":"1337","line":34,"column":35,"nodeType":"1322","messageId":"1338","endLine":34,"endColumn":36,"suggestions":"1339"},{"ruleId":"1336","severity":1,"message":"1340","line":35,"column":38,"nodeType":"1322","messageId":"1338","endLine":35,"endColumn":39,"suggestions":"1341"},{"ruleId":"1242","severity":1,"message":"1342","line":77,"column":5,"nodeType":"1245","endLine":77,"endColumn":17,"suggestions":"1343"},{"ruleId":"1219","replacedBy":"1344"},{"ruleId":"1221","replacedBy":"1345"},{"ruleId":"1187","severity":1,"message":"1346","line":3,"column":24,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":27},{"ruleId":"1187","severity":1,"message":"1282","line":3,"column":67,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":71},{"ruleId":"1187","severity":1,"message":"1283","line":3,"column":73,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":81},{"ruleId":"1187","severity":1,"message":"1347","line":15,"column":9,"nodeType":"1189","messageId":"1190","endLine":15,"endColumn":20},{"ruleId":"1242","severity":1,"message":"1348","line":120,"column":5,"nodeType":"1245","endLine":120,"endColumn":18,"suggestions":"1349"},{"ruleId":"1242","severity":1,"message":"1350","line":124,"column":5,"nodeType":"1245","endLine":124,"endColumn":14,"suggestions":"1351"},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1195","line":2,"column":34,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":39},{"ruleId":"1187","severity":1,"message":"1352","line":2,"column":56,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":68},{"ruleId":"1187","severity":1,"message":"1229","line":2,"column":103,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":106},{"ruleId":"1201","severity":1,"message":"1202","line":50,"column":93,"nodeType":"1203","messageId":"1204","endLine":50,"endColumn":95},{"ruleId":"1201","severity":1,"message":"1202","line":54,"column":104,"nodeType":"1203","messageId":"1204","endLine":54,"endColumn":106},{"ruleId":"1213","severity":1,"message":"1214","line":67,"column":27,"nodeType":"1215","messageId":"1216","endLine":67,"endColumn":29},{"ruleId":"1201","severity":1,"message":"1202","line":92,"column":46,"nodeType":"1203","messageId":"1204","endLine":92,"endColumn":48},{"ruleId":"1213","severity":1,"message":"1214","line":102,"column":85,"nodeType":"1215","messageId":"1216","endLine":102,"endColumn":87},{"ruleId":"1201","severity":1,"message":"1202","line":117,"column":46,"nodeType":"1203","messageId":"1204","endLine":117,"endColumn":48},{"ruleId":"1242","severity":1,"message":"1353","line":126,"column":5,"nodeType":"1245","endLine":126,"endColumn":23,"suggestions":"1354"},{"ruleId":"1201","severity":1,"message":"1202","line":129,"column":55,"nodeType":"1203","messageId":"1204","endLine":129,"endColumn":57},{"ruleId":"1201","severity":1,"message":"1202","line":133,"column":66,"nodeType":"1203","messageId":"1204","endLine":133,"endColumn":68},{"ruleId":"1201","severity":1,"message":"1202","line":141,"column":64,"nodeType":"1203","messageId":"1204","endLine":141,"endColumn":66},{"ruleId":"1201","severity":1,"message":"1202","line":144,"column":76,"nodeType":"1203","messageId":"1204","endLine":144,"endColumn":78},{"ruleId":"1201","severity":1,"message":"1202","line":176,"column":93,"nodeType":"1203","messageId":"1204","endLine":176,"endColumn":95},{"ruleId":"1201","severity":1,"message":"1202","line":180,"column":104,"nodeType":"1203","messageId":"1204","endLine":180,"endColumn":106},{"ruleId":"1213","severity":1,"message":"1214","line":193,"column":27,"nodeType":"1215","messageId":"1216","endLine":193,"endColumn":29},{"ruleId":"1201","severity":1,"message":"1202","line":209,"column":29,"nodeType":"1203","messageId":"1204","endLine":209,"endColumn":31},{"ruleId":"1219","replacedBy":"1355"},{"ruleId":"1221","replacedBy":"1356"},{"ruleId":"1187","severity":1,"message":"1283","line":3,"column":36,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":44},{"ruleId":"1187","severity":1,"message":"1210","line":3,"column":85,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":90},{"ruleId":"1187","severity":1,"message":"1347","line":8,"column":9,"nodeType":"1189","messageId":"1190","endLine":8,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1202","line":61,"column":23,"nodeType":"1203","messageId":"1204","endLine":61,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":84,"column":22,"nodeType":"1203","messageId":"1204","endLine":84,"endColumn":24},{"ruleId":"1213","severity":1,"message":"1214","line":106,"column":29,"nodeType":"1215","messageId":"1216","endLine":106,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1202","line":122,"column":18,"nodeType":"1203","messageId":"1204","endLine":122,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1202","line":124,"column":25,"nodeType":"1203","messageId":"1204","endLine":124,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1202","line":126,"column":25,"nodeType":"1203","messageId":"1204","endLine":126,"endColumn":27},{"ruleId":"1357","severity":1,"message":"1358","line":169,"column":75,"nodeType":"1203","messageId":"1359","endLine":169,"endColumn":76},{"ruleId":"1201","severity":1,"message":"1202","line":183,"column":42,"nodeType":"1203","messageId":"1204","endLine":183,"endColumn":44},{"ruleId":"1357","severity":1,"message":"1358","line":193,"column":39,"nodeType":"1203","messageId":"1359","endLine":193,"endColumn":40},{"ruleId":"1357","severity":1,"message":"1358","line":210,"column":75,"nodeType":"1203","messageId":"1359","endLine":210,"endColumn":76},{"ruleId":"1201","severity":1,"message":"1202","line":224,"column":44,"nodeType":"1203","messageId":"1204","endLine":224,"endColumn":46},{"ruleId":"1357","severity":1,"message":"1358","line":234,"column":41,"nodeType":"1203","messageId":"1359","endLine":234,"endColumn":42},{"ruleId":"1201","severity":1,"message":"1202","line":251,"column":31,"nodeType":"1203","messageId":"1204","endLine":251,"endColumn":33},{"ruleId":"1357","severity":1,"message":"1358","line":256,"column":190,"nodeType":"1203","messageId":"1359","endLine":256,"endColumn":191},{"ruleId":"1357","severity":1,"message":"1358","line":256,"column":248,"nodeType":"1203","messageId":"1359","endLine":256,"endColumn":249},{"ruleId":"1201","severity":1,"message":"1202","line":273,"column":31,"nodeType":"1203","messageId":"1204","endLine":273,"endColumn":33},{"ruleId":"1357","severity":1,"message":"1358","line":278,"column":189,"nodeType":"1203","messageId":"1359","endLine":278,"endColumn":190},{"ruleId":"1357","severity":1,"message":"1358","line":278,"column":247,"nodeType":"1203","messageId":"1359","endLine":278,"endColumn":248},{"ruleId":"1201","severity":1,"message":"1202","line":294,"column":22,"nodeType":"1203","messageId":"1204","endLine":294,"endColumn":24},{"ruleId":"1201","severity":1,"message":"1202","line":305,"column":36,"nodeType":"1203","messageId":"1204","endLine":305,"endColumn":38},{"ruleId":"1201","severity":1,"message":"1202","line":332,"column":21,"nodeType":"1203","messageId":"1204","endLine":332,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1202","line":439,"column":95,"nodeType":"1203","messageId":"1204","endLine":439,"endColumn":97},{"ruleId":"1201","severity":1,"message":"1202","line":468,"column":92,"nodeType":"1203","messageId":"1204","endLine":468,"endColumn":94},{"ruleId":"1187","severity":1,"message":"1325","line":1,"column":17,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":25},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1360","line":1,"column":35,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":44},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1196","line":3,"column":9,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":15},{"ruleId":"1187","severity":1,"message":"1195","line":3,"column":24,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":29},{"ruleId":"1187","severity":1,"message":"1361","line":3,"column":42,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":49},{"ruleId":"1187","severity":1,"message":"1211","line":3,"column":58,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":63},{"ruleId":"1187","severity":1,"message":"1282","line":3,"column":69,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":73},{"ruleId":"1187","severity":1,"message":"1283","line":3,"column":75,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":83},{"ruleId":"1187","severity":1,"message":"1362","line":5,"column":3,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1363","line":6,"column":3,"nodeType":"1189","messageId":"1190","endLine":6,"endColumn":28},{"ruleId":"1187","severity":1,"message":"1364","line":11,"column":9,"nodeType":"1189","messageId":"1190","endLine":11,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1365","line":12,"column":43,"nodeType":"1189","messageId":"1190","endLine":12,"endColumn":65},{"ruleId":"1187","severity":1,"message":"1347","line":17,"column":9,"nodeType":"1189","messageId":"1190","endLine":17,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1366","line":26,"column":12,"nodeType":"1189","messageId":"1190","endLine":26,"endColumn":25},{"ruleId":"1187","severity":1,"message":"1367","line":26,"column":26,"nodeType":"1189","messageId":"1190","endLine":26,"endColumn":42},{"ruleId":"1201","severity":1,"message":"1202","line":52,"column":24,"nodeType":"1203","messageId":"1204","endLine":52,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":55,"column":25,"nodeType":"1203","messageId":"1204","endLine":55,"endColumn":27},{"ruleId":"1187","severity":1,"message":"1368","line":59,"column":11,"nodeType":"1189","messageId":"1190","endLine":59,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1202","line":60,"column":24,"nodeType":"1203","messageId":"1204","endLine":60,"endColumn":26},{"ruleId":"1242","severity":1,"message":"1369","line":95,"column":7,"nodeType":"1245","endLine":95,"endColumn":9,"suggestions":"1370"},{"ruleId":"1201","severity":1,"message":"1202","line":124,"column":16,"nodeType":"1203","messageId":"1204","endLine":124,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1202","line":128,"column":17,"nodeType":"1203","messageId":"1204","endLine":128,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":135,"column":17,"nodeType":"1203","messageId":"1204","endLine":135,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":138,"column":17,"nodeType":"1203","messageId":"1204","endLine":138,"endColumn":19},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1196","line":3,"column":9,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":15},{"ruleId":"1187","severity":1,"message":"1195","line":3,"column":24,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":29},{"ruleId":"1187","severity":1,"message":"1361","line":3,"column":42,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":49},{"ruleId":"1187","severity":1,"message":"1211","line":3,"column":58,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":63},{"ruleId":"1187","severity":1,"message":"1282","line":3,"column":69,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":73},{"ruleId":"1187","severity":1,"message":"1283","line":3,"column":75,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":83},{"ruleId":"1187","severity":1,"message":"1362","line":5,"column":3,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1363","line":6,"column":3,"nodeType":"1189","messageId":"1190","endLine":6,"endColumn":28},{"ruleId":"1187","severity":1,"message":"1364","line":11,"column":9,"nodeType":"1189","messageId":"1190","endLine":11,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1347","line":17,"column":9,"nodeType":"1189","messageId":"1190","endLine":17,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1371","line":24,"column":12,"nodeType":"1189","messageId":"1190","endLine":24,"endColumn":24},{"ruleId":"1187","severity":1,"message":"1372","line":24,"column":25,"nodeType":"1189","messageId":"1190","endLine":24,"endColumn":40},{"ruleId":"1187","severity":1,"message":"1366","line":27,"column":12,"nodeType":"1189","messageId":"1190","endLine":27,"endColumn":25},{"ruleId":"1187","severity":1,"message":"1367","line":27,"column":26,"nodeType":"1189","messageId":"1190","endLine":27,"endColumn":42},{"ruleId":"1187","severity":1,"message":"1373","line":31,"column":12,"nodeType":"1189","messageId":"1190","endLine":31,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1202","line":53,"column":24,"nodeType":"1203","messageId":"1204","endLine":53,"endColumn":26},{"ruleId":"1187","severity":1,"message":"1368","line":59,"column":11,"nodeType":"1189","messageId":"1190","endLine":59,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1202","line":60,"column":24,"nodeType":"1203","messageId":"1204","endLine":60,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":80,"column":40,"nodeType":"1203","messageId":"1204","endLine":80,"endColumn":42},{"ruleId":"1242","severity":1,"message":"1369","line":94,"column":7,"nodeType":"1245","endLine":94,"endColumn":9,"suggestions":"1374"},{"ruleId":"1201","severity":1,"message":"1202","line":146,"column":16,"nodeType":"1203","messageId":"1204","endLine":146,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1202","line":150,"column":17,"nodeType":"1203","messageId":"1204","endLine":150,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":158,"column":17,"nodeType":"1203","messageId":"1204","endLine":158,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":161,"column":17,"nodeType":"1203","messageId":"1204","endLine":161,"endColumn":19},{"ruleId":"1187","severity":1,"message":"1325","line":1,"column":17,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":25},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1360","line":1,"column":35,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":44},{"ruleId":"1187","severity":1,"message":"1196","line":3,"column":9,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":15},{"ruleId":"1187","severity":1,"message":"1272","line":3,"column":17,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":22},{"ruleId":"1187","severity":1,"message":"1346","line":3,"column":24,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":27},{"ruleId":"1187","severity":1,"message":"1361","line":3,"column":40,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":47},{"ruleId":"1187","severity":1,"message":"1211","line":3,"column":56,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":61},{"ruleId":"1187","severity":1,"message":"1375","line":3,"column":62,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":66},{"ruleId":"1187","severity":1,"message":"1282","line":3,"column":67,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":71},{"ruleId":"1187","severity":1,"message":"1283","line":3,"column":73,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":81},{"ruleId":"1187","severity":1,"message":"1230","line":3,"column":83,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":90},{"ruleId":"1187","severity":1,"message":"1362","line":5,"column":3,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1363","line":6,"column":3,"nodeType":"1189","messageId":"1190","endLine":6,"endColumn":28},{"ruleId":"1187","severity":1,"message":"1376","line":10,"column":8,"nodeType":"1189","messageId":"1190","endLine":10,"endColumn":16},{"ruleId":"1187","severity":1,"message":"1257","line":14,"column":8,"nodeType":"1189","messageId":"1190","endLine":14,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1347","line":15,"column":9,"nodeType":"1189","messageId":"1190","endLine":15,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1285","line":3,"column":9,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1377","line":3,"column":22,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":36},{"ruleId":"1187","severity":1,"message":"1378","line":3,"column":37,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":49},{"ruleId":"1187","severity":1,"message":"1379","line":28,"column":12,"nodeType":"1189","messageId":"1190","endLine":28,"endColumn":22},{"ruleId":"1187","severity":1,"message":"1380","line":29,"column":11,"nodeType":"1189","messageId":"1190","endLine":29,"endColumn":18},{"ruleId":"1187","severity":1,"message":"1381","line":41,"column":12,"nodeType":"1189","messageId":"1190","endLine":41,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1382","line":41,"column":21,"nodeType":"1189","messageId":"1190","endLine":41,"endColumn":32},{"ruleId":"1213","severity":1,"message":"1214","line":69,"column":46,"nodeType":"1215","messageId":"1216","endLine":69,"endColumn":48},{"ruleId":"1201","severity":1,"message":"1202","line":84,"column":17,"nodeType":"1203","messageId":"1204","endLine":84,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":91,"column":24,"nodeType":"1203","messageId":"1204","endLine":91,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":91,"column":37,"nodeType":"1203","messageId":"1204","endLine":91,"endColumn":39},{"ruleId":"1201","severity":1,"message":"1202","line":133,"column":16,"nodeType":"1203","messageId":"1204","endLine":133,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1202","line":133,"column":42,"nodeType":"1203","messageId":"1204","endLine":133,"endColumn":44},{"ruleId":"1187","severity":1,"message":"1383","line":280,"column":13,"nodeType":"1189","messageId":"1190","endLine":280,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1202","line":308,"column":18,"nodeType":"1203","messageId":"1204","endLine":308,"endColumn":20},{"ruleId":"1213","severity":1,"message":"1214","line":311,"column":28,"nodeType":"1215","messageId":"1216","endLine":311,"endColumn":30},{"ruleId":"1242","severity":1,"message":"1369","line":343,"column":7,"nodeType":"1245","endLine":343,"endColumn":9,"suggestions":"1384"},{"ruleId":"1242","severity":1,"message":"1385","line":348,"column":7,"nodeType":"1245","endLine":348,"endColumn":23,"suggestions":"1386"},{"ruleId":"1242","severity":1,"message":"1387","line":352,"column":7,"nodeType":"1245","endLine":352,"endColumn":25,"suggestions":"1388"},{"ruleId":"1242","severity":1,"message":"1389","line":357,"column":7,"nodeType":"1245","endLine":357,"endColumn":23,"suggestions":"1390"},{"ruleId":"1201","severity":1,"message":"1202","line":490,"column":50,"nodeType":"1203","messageId":"1204","endLine":490,"endColumn":52},{"ruleId":"1391","severity":1,"message":"1392","line":495,"column":37,"nodeType":"1253","endLine":540,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":516,"column":46,"nodeType":"1203","messageId":"1204","endLine":516,"endColumn":48},{"ruleId":"1393","severity":1,"message":"1394","line":597,"column":21,"nodeType":"1395","messageId":"1204","endLine":597,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1396","line":13,"column":28,"nodeType":"1189","messageId":"1190","endLine":13,"endColumn":46},{"ruleId":"1187","severity":1,"message":"1397","line":16,"column":12,"nodeType":"1189","messageId":"1190","endLine":16,"endColumn":22},{"ruleId":"1393","severity":1,"message":"1394","line":37,"column":13,"nodeType":"1395","messageId":"1204","endLine":37,"endColumn":25},{"ruleId":"1213","severity":1,"message":"1214","line":88,"column":71,"nodeType":"1215","messageId":"1216","endLine":88,"endColumn":73},{"ruleId":"1213","severity":1,"message":"1214","line":127,"column":38,"nodeType":"1215","messageId":"1216","endLine":127,"endColumn":40},{"ruleId":"1213","severity":1,"message":"1214","line":135,"column":43,"nodeType":"1215","messageId":"1216","endLine":135,"endColumn":45},{"ruleId":"1201","severity":1,"message":"1202","line":136,"column":40,"nodeType":"1203","messageId":"1204","endLine":136,"endColumn":42},{"ruleId":"1201","severity":1,"message":"1202","line":156,"column":17,"nodeType":"1203","messageId":"1204","endLine":156,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":192,"column":25,"nodeType":"1203","messageId":"1204","endLine":192,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1202","line":219,"column":17,"nodeType":"1203","messageId":"1204","endLine":219,"endColumn":19},{"ruleId":"1242","severity":1,"message":"1398","line":242,"column":9,"nodeType":"1245","endLine":242,"endColumn":23,"suggestions":"1399"},{"ruleId":"1187","severity":1,"message":"1400","line":341,"column":46,"nodeType":"1189","messageId":"1190","endLine":341,"endColumn":53},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1401","line":4,"column":23,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":37},{"ruleId":"1187","severity":1,"message":"1396","line":13,"column":28,"nodeType":"1189","messageId":"1190","endLine":13,"endColumn":46},{"ruleId":"1187","severity":1,"message":"1402","line":17,"column":12,"nodeType":"1189","messageId":"1190","endLine":17,"endColumn":27},{"ruleId":"1187","severity":1,"message":"1276","line":25,"column":12,"nodeType":"1189","messageId":"1190","endLine":25,"endColumn":18},{"ruleId":"1187","severity":1,"message":"1403","line":25,"column":19,"nodeType":"1189","messageId":"1190","endLine":25,"endColumn":28},{"ruleId":"1393","severity":1,"message":"1394","line":42,"column":13,"nodeType":"1395","messageId":"1204","endLine":42,"endColumn":25},{"ruleId":"1213","severity":1,"message":"1214","line":88,"column":46,"nodeType":"1215","messageId":"1216","endLine":88,"endColumn":48},{"ruleId":"1213","severity":1,"message":"1214","line":99,"column":39,"nodeType":"1215","messageId":"1216","endLine":99,"endColumn":41},{"ruleId":"1201","severity":1,"message":"1202","line":100,"column":36,"nodeType":"1203","messageId":"1204","endLine":100,"endColumn":38},{"ruleId":"1213","severity":1,"message":"1214","line":148,"column":38,"nodeType":"1215","messageId":"1216","endLine":148,"endColumn":40},{"ruleId":"1213","severity":1,"message":"1214","line":156,"column":43,"nodeType":"1215","messageId":"1216","endLine":156,"endColumn":45},{"ruleId":"1201","severity":1,"message":"1202","line":157,"column":40,"nodeType":"1203","messageId":"1204","endLine":157,"endColumn":42},{"ruleId":"1201","severity":1,"message":"1202","line":179,"column":17,"nodeType":"1203","messageId":"1204","endLine":179,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":215,"column":25,"nodeType":"1203","messageId":"1204","endLine":215,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1202","line":239,"column":17,"nodeType":"1203","messageId":"1204","endLine":239,"endColumn":19},{"ruleId":"1242","severity":1,"message":"1387","line":265,"column":7,"nodeType":"1245","endLine":265,"endColumn":25,"suggestions":"1404"},{"ruleId":"1187","severity":1,"message":"1400","line":361,"column":62,"nodeType":"1189","messageId":"1190","endLine":361,"endColumn":69},{"ruleId":"1393","severity":1,"message":"1394","line":377,"column":21,"nodeType":"1395","messageId":"1204","endLine":377,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1285","line":3,"column":9,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1377","line":3,"column":22,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":36},{"ruleId":"1187","severity":1,"message":"1378","line":3,"column":37,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":49},{"ruleId":"1187","severity":1,"message":"1200","line":6,"column":8,"nodeType":"1189","messageId":"1190","endLine":6,"endColumn":17},{"ruleId":"1187","severity":1,"message":"1405","line":16,"column":9,"nodeType":"1189","messageId":"1190","endLine":16,"endColumn":29},{"ruleId":"1187","severity":1,"message":"1379","line":30,"column":12,"nodeType":"1189","messageId":"1190","endLine":30,"endColumn":22},{"ruleId":"1187","severity":1,"message":"1380","line":31,"column":11,"nodeType":"1189","messageId":"1190","endLine":31,"endColumn":18},{"ruleId":"1187","severity":1,"message":"1381","line":43,"column":12,"nodeType":"1189","messageId":"1190","endLine":43,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1382","line":43,"column":21,"nodeType":"1189","messageId":"1190","endLine":43,"endColumn":32},{"ruleId":"1213","severity":1,"message":"1214","line":71,"column":46,"nodeType":"1215","messageId":"1216","endLine":71,"endColumn":48},{"ruleId":"1213","severity":1,"message":"1214","line":82,"column":41,"nodeType":"1215","messageId":"1216","endLine":82,"endColumn":43},{"ruleId":"1201","severity":1,"message":"1202","line":83,"column":36,"nodeType":"1203","messageId":"1204","endLine":83,"endColumn":38},{"ruleId":"1201","severity":1,"message":"1202","line":105,"column":17,"nodeType":"1203","messageId":"1204","endLine":105,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":112,"column":24,"nodeType":"1203","messageId":"1204","endLine":112,"endColumn":26},{"ruleId":"1201","severity":1,"message":"1202","line":112,"column":37,"nodeType":"1203","messageId":"1204","endLine":112,"endColumn":39},{"ruleId":"1187","severity":1,"message":"1383","line":154,"column":13,"nodeType":"1189","messageId":"1190","endLine":154,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1202","line":157,"column":16,"nodeType":"1203","messageId":"1204","endLine":157,"endColumn":18},{"ruleId":"1201","severity":1,"message":"1202","line":157,"column":42,"nodeType":"1203","messageId":"1204","endLine":157,"endColumn":44},{"ruleId":"1201","severity":1,"message":"1202","line":219,"column":29,"nodeType":"1203","messageId":"1204","endLine":219,"endColumn":31},{"ruleId":"1201","severity":1,"message":"1202","line":350,"column":18,"nodeType":"1203","messageId":"1204","endLine":350,"endColumn":20},{"ruleId":"1213","severity":1,"message":"1214","line":353,"column":28,"nodeType":"1215","messageId":"1216","endLine":353,"endColumn":30},{"ruleId":"1242","severity":1,"message":"1369","line":387,"column":7,"nodeType":"1245","endLine":387,"endColumn":9,"suggestions":"1406"},{"ruleId":"1242","severity":1,"message":"1385","line":392,"column":7,"nodeType":"1245","endLine":392,"endColumn":23,"suggestions":"1407"},{"ruleId":"1242","severity":1,"message":"1387","line":396,"column":7,"nodeType":"1245","endLine":396,"endColumn":25,"suggestions":"1408"},{"ruleId":"1242","severity":1,"message":"1389","line":401,"column":7,"nodeType":"1245","endLine":401,"endColumn":23,"suggestions":"1409"},{"ruleId":"1201","severity":1,"message":"1202","line":548,"column":50,"nodeType":"1203","messageId":"1204","endLine":548,"endColumn":52},{"ruleId":"1201","severity":1,"message":"1202","line":555,"column":50,"nodeType":"1203","messageId":"1204","endLine":555,"endColumn":52},{"ruleId":"1391","severity":1,"message":"1392","line":560,"column":37,"nodeType":"1253","endLine":605,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":581,"column":46,"nodeType":"1203","messageId":"1204","endLine":581,"endColumn":48},{"ruleId":"1393","severity":1,"message":"1394","line":662,"column":21,"nodeType":"1395","messageId":"1204","endLine":662,"endColumn":33},{"ruleId":"1393","severity":1,"message":"1394","line":673,"column":21,"nodeType":"1395","messageId":"1204","endLine":673,"endColumn":33},{"ruleId":"1205","severity":1,"message":"1206","line":54,"column":11,"nodeType":"1207","endLine":54,"endColumn":37},{"ruleId":"1201","severity":1,"message":"1202","line":77,"column":26,"nodeType":"1203","messageId":"1204","endLine":77,"endColumn":28},{"ruleId":"1205","severity":1,"message":"1206","line":104,"column":7,"nodeType":"1207","endLine":104,"endColumn":17},{"ruleId":"1187","severity":1,"message":"1291","line":2,"column":46,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":54},{"ruleId":"1219","replacedBy":"1410"},{"ruleId":"1221","replacedBy":"1411"},{"ruleId":"1307","severity":1,"message":"1308","line":2,"column":1,"nodeType":"1309","endLine":51,"endColumn":2},{"ruleId":"1187","severity":1,"message":"1267","line":3,"column":9,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1225","line":1,"column":36,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":46},{"ruleId":"1187","severity":1,"message":"1226","line":3,"column":18,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":28},{"ruleId":"1187","severity":1,"message":"1227","line":3,"column":29,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":35},{"ruleId":"1187","severity":1,"message":"1228","line":3,"column":36,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":43},{"ruleId":"1187","severity":1,"message":"1196","line":3,"column":44,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":50},{"ruleId":"1187","severity":1,"message":"1229","line":3,"column":51,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":54},{"ruleId":"1187","severity":1,"message":"1195","line":3,"column":55,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":60},{"ruleId":"1187","severity":1,"message":"1230","line":3,"column":61,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":68},{"ruleId":"1187","severity":1,"message":"1231","line":4,"column":10,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":22},{"ruleId":"1187","severity":1,"message":"1232","line":4,"column":24,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":35},{"ruleId":"1187","severity":1,"message":"1233","line":14,"column":9,"nodeType":"1189","messageId":"1190","endLine":14,"endColumn":15},{"ruleId":"1187","severity":1,"message":"1234","line":14,"column":26,"nodeType":"1189","messageId":"1190","endLine":14,"endColumn":32},{"ruleId":"1187","severity":1,"message":"1235","line":36,"column":12,"nodeType":"1189","messageId":"1190","endLine":36,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1236","line":37,"column":12,"nodeType":"1189","messageId":"1190","endLine":37,"endColumn":19},{"ruleId":"1187","severity":1,"message":"1237","line":38,"column":12,"nodeType":"1189","messageId":"1190","endLine":38,"endColumn":24},{"ruleId":"1187","severity":1,"message":"1238","line":39,"column":12,"nodeType":"1189","messageId":"1190","endLine":39,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1239","line":41,"column":12,"nodeType":"1189","messageId":"1190","endLine":41,"endColumn":21},{"ruleId":"1187","severity":1,"message":"1240","line":54,"column":11,"nodeType":"1189","messageId":"1190","endLine":54,"endColumn":18},{"ruleId":"1187","severity":1,"message":"1241","line":58,"column":11,"nodeType":"1189","messageId":"1190","endLine":58,"endColumn":19},{"ruleId":"1242","severity":1,"message":"1243","line":61,"column":15,"nodeType":"1215","endLine":95,"endColumn":6},{"ruleId":"1201","severity":1,"message":"1202","line":64,"column":26,"nodeType":"1203","messageId":"1204","endLine":64,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1202","line":90,"column":39,"nodeType":"1203","messageId":"1204","endLine":90,"endColumn":41},{"ruleId":"1242","severity":1,"message":"1244","line":95,"column":7,"nodeType":"1245","endLine":95,"endColumn":9,"suggestions":"1412"},{"ruleId":"1187","severity":1,"message":"1247","line":96,"column":13,"nodeType":"1189","messageId":"1190","endLine":96,"endColumn":33},{"ruleId":"1242","severity":1,"message":"1248","line":100,"column":5,"nodeType":"1189","endLine":100,"endColumn":14,"suggestions":"1413"},{"ruleId":"1187","severity":1,"message":"1250","line":102,"column":17,"nodeType":"1189","messageId":"1190","endLine":102,"endColumn":20},{"ruleId":"1251","severity":1,"message":"1252","line":136,"column":69,"nodeType":"1253","endLine":136,"endColumn":90},{"ruleId":"1251","severity":1,"message":"1252","line":141,"column":25,"nodeType":"1253","endLine":141,"endColumn":63},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1257","line":29,"column":8,"nodeType":"1189","messageId":"1190","endLine":29,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1414","line":30,"column":9,"nodeType":"1189","messageId":"1190","endLine":30,"endColumn":16},{"ruleId":"1187","severity":1,"message":"1347","line":31,"column":9,"nodeType":"1189","messageId":"1190","endLine":31,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1415","line":44,"column":12,"nodeType":"1189","messageId":"1190","endLine":44,"endColumn":28},{"ruleId":"1187","severity":1,"message":"1416","line":44,"column":29,"nodeType":"1189","messageId":"1190","endLine":44,"endColumn":48},{"ruleId":"1187","severity":1,"message":"1417","line":45,"column":12,"nodeType":"1189","messageId":"1190","endLine":45,"endColumn":22},{"ruleId":"1187","severity":1,"message":"1418","line":45,"column":23,"nodeType":"1189","messageId":"1190","endLine":45,"endColumn":36},{"ruleId":"1187","severity":1,"message":"1403","line":54,"column":19,"nodeType":"1189","messageId":"1190","endLine":54,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1202","line":89,"column":36,"nodeType":"1203","messageId":"1204","endLine":89,"endColumn":38},{"ruleId":"1393","severity":1,"message":"1394","line":117,"column":13,"nodeType":"1395","messageId":"1204","endLine":117,"endColumn":25},{"ruleId":"1393","severity":1,"message":"1394","line":150,"column":13,"nodeType":"1395","messageId":"1204","endLine":150,"endColumn":25},{"ruleId":"1393","severity":1,"message":"1394","line":161,"column":13,"nodeType":"1395","messageId":"1204","endLine":161,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":225,"column":50,"nodeType":"1203","messageId":"1204","endLine":225,"endColumn":52},{"ruleId":"1242","severity":1,"message":"1419","line":237,"column":7,"nodeType":"1245","endLine":237,"endColumn":9,"suggestions":"1420"},{"ruleId":"1242","severity":1,"message":"1243","line":238,"column":16,"nodeType":"1215","endLine":260,"endColumn":6},{"ruleId":"1201","severity":1,"message":"1202","line":242,"column":22,"nodeType":"1203","messageId":"1204","endLine":242,"endColumn":24},{"ruleId":"1242","severity":1,"message":"1244","line":260,"column":7,"nodeType":"1245","endLine":260,"endColumn":9,"suggestions":"1421"},{"ruleId":"1213","severity":1,"message":"1214","line":265,"column":39,"nodeType":"1215","messageId":"1216","endLine":265,"endColumn":41},{"ruleId":"1213","severity":1,"message":"1214","line":278,"column":42,"nodeType":"1215","messageId":"1216","endLine":278,"endColumn":44},{"ruleId":"1213","severity":1,"message":"1214","line":290,"column":39,"nodeType":"1215","messageId":"1216","endLine":290,"endColumn":41},{"ruleId":"1201","severity":1,"message":"1202","line":291,"column":36,"nodeType":"1203","messageId":"1204","endLine":291,"endColumn":38},{"ruleId":"1213","severity":1,"message":"1214","line":295,"column":41,"nodeType":"1215","messageId":"1216","endLine":295,"endColumn":43},{"ruleId":"1201","severity":1,"message":"1202","line":296,"column":37,"nodeType":"1203","messageId":"1204","endLine":296,"endColumn":39},{"ruleId":"1201","severity":1,"message":"1202","line":327,"column":23,"nodeType":"1203","messageId":"1204","endLine":327,"endColumn":25},{"ruleId":"1213","severity":1,"message":"1214","line":328,"column":35,"nodeType":"1215","messageId":"1216","endLine":328,"endColumn":37},{"ruleId":"1187","severity":1,"message":"1422","line":343,"column":11,"nodeType":"1189","messageId":"1190","endLine":343,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":386,"column":52,"nodeType":"1203","messageId":"1204","endLine":386,"endColumn":54},{"ruleId":"1201","severity":1,"message":"1202","line":388,"column":25,"nodeType":"1203","messageId":"1204","endLine":388,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1202","line":399,"column":25,"nodeType":"1203","messageId":"1204","endLine":399,"endColumn":27},{"ruleId":"1201","severity":1,"message":"1202","line":499,"column":109,"nodeType":"1203","messageId":"1204","endLine":499,"endColumn":111},{"ruleId":"1187","severity":1,"message":"1230","line":5,"column":24,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":31},{"ruleId":"1187","severity":1,"message":"1254","line":84,"column":17,"nodeType":"1189","messageId":"1190","endLine":84,"endColumn":20},{"ruleId":"1219","replacedBy":"1423"},{"ruleId":"1221","replacedBy":"1424"},{"ruleId":"1187","severity":1,"message":"1188","line":4,"column":8,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":10},{"ruleId":"1187","severity":1,"message":"1191","line":24,"column":9,"nodeType":"1189","messageId":"1190","endLine":24,"endColumn":15},{"ruleId":"1187","severity":1,"message":"1192","line":26,"column":10,"nodeType":"1189","messageId":"1190","endLine":26,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1193","line":1,"column":16,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":25},{"ruleId":"1219","replacedBy":"1425"},{"ruleId":"1221","replacedBy":"1426"},{"ruleId":"1187","severity":1,"message":"1325","line":1,"column":17,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":25},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1360","line":1,"column":35,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":44},{"ruleId":"1219","replacedBy":"1427"},{"ruleId":"1221","replacedBy":"1428"},{"ruleId":"1187","severity":1,"message":"1267","line":2,"column":9,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1195","line":3,"column":44,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":49},{"ruleId":"1187","severity":1,"message":"1429","line":4,"column":24,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":41},{"ruleId":"1187","severity":1,"message":"1430","line":4,"column":42,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":55},{"ruleId":"1187","severity":1,"message":"1431","line":4,"column":57,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":75},{"ruleId":"1187","severity":1,"message":"1432","line":8,"column":76,"nodeType":"1189","messageId":"1190","endLine":8,"endColumn":86},{"ruleId":"1201","severity":1,"message":"1202","line":135,"column":27,"nodeType":"1203","messageId":"1204","endLine":135,"endColumn":29},{"ruleId":"1201","severity":1,"message":"1202","line":135,"column":60,"nodeType":"1203","messageId":"1204","endLine":135,"endColumn":62},{"ruleId":"1201","severity":1,"message":"1202","line":139,"column":21,"nodeType":"1203","messageId":"1204","endLine":139,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1202","line":139,"column":48,"nodeType":"1203","messageId":"1204","endLine":139,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1202","line":143,"column":26,"nodeType":"1203","messageId":"1204","endLine":143,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1202","line":143,"column":58,"nodeType":"1203","messageId":"1204","endLine":143,"endColumn":60},{"ruleId":"1201","severity":1,"message":"1202","line":147,"column":21,"nodeType":"1203","messageId":"1204","endLine":147,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1202","line":147,"column":63,"nodeType":"1203","messageId":"1204","endLine":147,"endColumn":65},{"ruleId":"1187","severity":1,"message":"1381","line":172,"column":9,"nodeType":"1189","messageId":"1190","endLine":172,"endColumn":17},{"ruleId":"1201","severity":1,"message":"1202","line":184,"column":50,"nodeType":"1203","messageId":"1204","endLine":184,"endColumn":52},{"ruleId":"1201","severity":1,"message":"1202","line":193,"column":18,"nodeType":"1203","messageId":"1204","endLine":193,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1202","line":193,"column":37,"nodeType":"1203","messageId":"1204","endLine":193,"endColumn":39},{"ruleId":"1201","severity":1,"message":"1202","line":197,"column":17,"nodeType":"1203","messageId":"1204","endLine":197,"endColumn":19},{"ruleId":"1201","severity":1,"message":"1202","line":197,"column":35,"nodeType":"1203","messageId":"1204","endLine":197,"endColumn":37},{"ruleId":"1201","severity":1,"message":"1202","line":211,"column":23,"nodeType":"1203","messageId":"1204","endLine":211,"endColumn":25},{"ruleId":"1201","severity":1,"message":"1202","line":231,"column":18,"nodeType":"1203","messageId":"1204","endLine":231,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1202","line":249,"column":18,"nodeType":"1203","messageId":"1204","endLine":249,"endColumn":20},{"ruleId":"1201","severity":1,"message":"1202","line":249,"column":44,"nodeType":"1203","messageId":"1204","endLine":249,"endColumn":46},{"ruleId":"1201","severity":1,"message":"1202","line":253,"column":20,"nodeType":"1203","messageId":"1204","endLine":253,"endColumn":22},{"ruleId":"1201","severity":1,"message":"1202","line":253,"column":48,"nodeType":"1203","messageId":"1204","endLine":253,"endColumn":50},{"ruleId":"1201","severity":1,"message":"1202","line":258,"column":62,"nodeType":"1203","messageId":"1204","endLine":258,"endColumn":64},{"ruleId":"1201","severity":1,"message":"1202","line":275,"column":21,"nodeType":"1203","messageId":"1204","endLine":275,"endColumn":23},{"ruleId":"1201","severity":1,"message":"1202","line":275,"column":50,"nodeType":"1203","messageId":"1204","endLine":275,"endColumn":52},{"ruleId":"1201","severity":1,"message":"1202","line":279,"column":63,"nodeType":"1203","messageId":"1204","endLine":279,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":297,"column":19,"nodeType":"1203","messageId":"1204","endLine":297,"endColumn":21},{"ruleId":"1201","severity":1,"message":"1202","line":297,"column":37,"nodeType":"1203","messageId":"1204","endLine":297,"endColumn":39},{"ruleId":"1201","severity":1,"message":"1202","line":301,"column":59,"nodeType":"1203","messageId":"1204","endLine":301,"endColumn":61},{"ruleId":"1242","severity":1,"message":"1433","line":332,"column":5,"nodeType":"1245","endLine":332,"endColumn":19,"suggestions":"1434"},{"ruleId":"1242","severity":1,"message":"1435","line":342,"column":5,"nodeType":"1245","endLine":342,"endColumn":20,"suggestions":"1436"},{"ruleId":"1242","severity":1,"message":"1437","line":361,"column":5,"nodeType":"1245","endLine":361,"endColumn":16,"suggestions":"1438"},{"ruleId":"1242","severity":1,"message":"1439","line":376,"column":5,"nodeType":"1245","endLine":376,"endColumn":18,"suggestions":"1440"},{"ruleId":"1242","severity":1,"message":"1439","line":389,"column":5,"nodeType":"1245","endLine":389,"endColumn":16,"suggestions":"1441"},{"ruleId":"1242","severity":1,"message":"1442","line":400,"column":5,"nodeType":"1245","endLine":400,"endColumn":15,"suggestions":"1443"},{"ruleId":"1242","severity":1,"message":"1444","line":415,"column":7,"nodeType":"1245","endLine":415,"endColumn":17,"suggestions":"1445"},{"ruleId":"1201","severity":1,"message":"1202","line":586,"column":73,"nodeType":"1203","messageId":"1204","endLine":586,"endColumn":75},{"ruleId":"1219","replacedBy":"1446"},{"ruleId":"1221","replacedBy":"1447"},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1267","line":2,"column":9,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1448","line":2,"column":16,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":22},{"ruleId":"1187","severity":1,"message":"1449","line":2,"column":23,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1450","line":16,"column":22,"nodeType":"1189","messageId":"1190","endLine":16,"endColumn":34},{"ruleId":"1187","severity":1,"message":"1451","line":18,"column":12,"nodeType":"1189","messageId":"1190","endLine":18,"endColumn":26},{"ruleId":"1242","severity":1,"message":"1452","line":36,"column":7,"nodeType":"1245","endLine":36,"endColumn":17,"suggestions":"1453"},{"ruleId":"1242","severity":1,"message":"1454","line":41,"column":7,"nodeType":"1245","endLine":41,"endColumn":25,"suggestions":"1455"},{"ruleId":"1219","replacedBy":"1456"},{"ruleId":"1221","replacedBy":"1457"},{"ruleId":"1187","severity":1,"message":"1325","line":1,"column":17,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":25},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1360","line":1,"column":35,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":44},{"ruleId":"1187","severity":1,"message":"1325","line":1,"column":17,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":25},{"ruleId":"1187","severity":1,"message":"1193","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":36},{"ruleId":"1263","severity":1,"message":"1264","line":10,"column":13,"nodeType":"1253","endLine":15,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1325","line":1,"column":17,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":25},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1360","line":1,"column":35,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":44},{"ruleId":"1219","replacedBy":"1458"},{"ruleId":"1221","replacedBy":"1459"},{"ruleId":"1187","severity":1,"message":"1460","line":3,"column":56,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":68},{"ruleId":"1187","severity":1,"message":"1257","line":10,"column":8,"nodeType":"1189","messageId":"1190","endLine":10,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1414","line":11,"column":9,"nodeType":"1189","messageId":"1190","endLine":11,"endColumn":16},{"ruleId":"1187","severity":1,"message":"1347","line":12,"column":9,"nodeType":"1189","messageId":"1190","endLine":12,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1415","line":19,"column":12,"nodeType":"1189","messageId":"1190","endLine":19,"endColumn":28},{"ruleId":"1187","severity":1,"message":"1416","line":19,"column":29,"nodeType":"1189","messageId":"1190","endLine":19,"endColumn":48},{"ruleId":"1187","severity":1,"message":"1417","line":20,"column":12,"nodeType":"1189","messageId":"1190","endLine":20,"endColumn":22},{"ruleId":"1187","severity":1,"message":"1418","line":20,"column":23,"nodeType":"1189","messageId":"1190","endLine":20,"endColumn":36},{"ruleId":"1201","severity":1,"message":"1202","line":37,"column":31,"nodeType":"1203","messageId":"1204","endLine":37,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":85,"column":34,"nodeType":"1203","messageId":"1204","endLine":85,"endColumn":36},{"ruleId":"1201","severity":1,"message":"1202","line":89,"column":26,"nodeType":"1203","messageId":"1204","endLine":89,"endColumn":28},{"ruleId":"1187","severity":1,"message":"1375","line":3,"column":80,"nodeType":"1189","messageId":"1190","endLine":3,"endColumn":84},{"ruleId":"1187","severity":1,"message":"1257","line":13,"column":8,"nodeType":"1189","messageId":"1190","endLine":13,"endColumn":14},{"ruleId":"1187","severity":1,"message":"1347","line":15,"column":9,"nodeType":"1189","messageId":"1190","endLine":15,"endColumn":20},{"ruleId":"1187","severity":1,"message":"1417","line":23,"column":12,"nodeType":"1189","messageId":"1190","endLine":23,"endColumn":22},{"ruleId":"1187","severity":1,"message":"1418","line":23,"column":23,"nodeType":"1189","messageId":"1190","endLine":23,"endColumn":36},{"ruleId":"1201","severity":1,"message":"1202","line":47,"column":31,"nodeType":"1203","messageId":"1204","endLine":47,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":47,"column":51,"nodeType":"1203","messageId":"1204","endLine":47,"endColumn":53},{"ruleId":"1201","severity":1,"message":"1202","line":98,"column":31,"nodeType":"1203","messageId":"1204","endLine":98,"endColumn":33},{"ruleId":"1201","severity":1,"message":"1202","line":98,"column":51,"nodeType":"1203","messageId":"1204","endLine":98,"endColumn":53},{"ruleId":"1201","severity":1,"message":"1202","line":173,"column":34,"nodeType":"1203","messageId":"1204","endLine":173,"endColumn":36},{"ruleId":"1201","severity":1,"message":"1202","line":177,"column":26,"nodeType":"1203","messageId":"1204","endLine":177,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1202","line":220,"column":19,"nodeType":"1203","messageId":"1204","endLine":220,"endColumn":21},{"ruleId":"1213","severity":1,"message":"1214","line":318,"column":37,"nodeType":"1215","messageId":"1216","endLine":318,"endColumn":39},{"ruleId":"1201","severity":1,"message":"1202","line":319,"column":60,"nodeType":"1203","messageId":"1204","endLine":319,"endColumn":62},{"ruleId":"1201","severity":1,"message":"1202","line":380,"column":66,"nodeType":"1203","messageId":"1204","endLine":380,"endColumn":68},{"ruleId":"1201","severity":1,"message":"1202","line":432,"column":46,"nodeType":"1203","messageId":"1204","endLine":432,"endColumn":48},{"ruleId":"1201","severity":1,"message":"1202","line":433,"column":98,"nodeType":"1203","messageId":"1204","endLine":433,"endColumn":100},{"ruleId":"1187","severity":1,"message":"1197","line":2,"column":3,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":7},{"ruleId":"1187","severity":1,"message":"1198","line":5,"column":3,"nodeType":"1189","messageId":"1190","endLine":5,"endColumn":7},{"ruleId":"1187","severity":1,"message":"1199","line":6,"column":3,"nodeType":"1189","messageId":"1190","endLine":6,"endColumn":7},{"ruleId":"1219","replacedBy":"1461"},{"ruleId":"1221","replacedBy":"1462"},{"ruleId":"1187","severity":1,"message":"1312","line":4,"column":8,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":13},{"ruleId":"1251","severity":1,"message":"1252","line":7,"column":13,"nodeType":"1253","endLine":7,"endColumn":38},{"ruleId":"1201","severity":1,"message":"1202","line":23,"column":30,"nodeType":"1203","messageId":"1204","endLine":23,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":26,"column":30,"nodeType":"1203","messageId":"1204","endLine":26,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":56,"column":77,"nodeType":"1203","messageId":"1204","endLine":56,"endColumn":79},{"ruleId":"1201","severity":1,"message":"1202","line":64,"column":51,"nodeType":"1203","messageId":"1204","endLine":64,"endColumn":53},{"ruleId":"1242","severity":1,"message":"1463","line":67,"column":7,"nodeType":"1245","endLine":67,"endColumn":30,"suggestions":"1464"},{"ruleId":"1187","severity":1,"message":"1195","line":2,"column":35,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":40},{"ruleId":"1201","severity":1,"message":"1202","line":34,"column":24,"nodeType":"1203","messageId":"1204","endLine":34,"endColumn":26},{"ruleId":"1242","severity":1,"message":"1465","line":73,"column":7,"nodeType":"1245","endLine":73,"endColumn":33,"suggestions":"1466"},{"ruleId":"1201","severity":1,"message":"1202","line":21,"column":48,"nodeType":"1203","messageId":"1204","endLine":21,"endColumn":50},{"ruleId":"1213","severity":1,"message":"1214","line":26,"column":52,"nodeType":"1215","messageId":"1216","endLine":26,"endColumn":54},{"ruleId":"1213","severity":1,"message":"1214","line":31,"column":49,"nodeType":"1215","messageId":"1216","endLine":31,"endColumn":51},{"ruleId":"1213","severity":1,"message":"1214","line":43,"column":52,"nodeType":"1215","messageId":"1216","endLine":43,"endColumn":54},{"ruleId":"1213","severity":1,"message":"1214","line":55,"column":47,"nodeType":"1215","messageId":"1216","endLine":55,"endColumn":49},{"ruleId":"1201","severity":1,"message":"1202","line":56,"column":44,"nodeType":"1203","messageId":"1204","endLine":56,"endColumn":46},{"ruleId":"1213","severity":1,"message":"1214","line":60,"column":49,"nodeType":"1215","messageId":"1216","endLine":60,"endColumn":51},{"ruleId":"1201","severity":1,"message":"1202","line":61,"column":45,"nodeType":"1203","messageId":"1204","endLine":61,"endColumn":47},{"ruleId":"1242","severity":1,"message":"1467","line":87,"column":7,"nodeType":"1245","endLine":87,"endColumn":26,"suggestions":"1468"},{"ruleId":"1393","severity":1,"message":"1394","line":119,"column":57,"nodeType":"1395","messageId":"1204","endLine":119,"endColumn":69},{"ruleId":"1393","severity":1,"message":"1394","line":159,"column":57,"nodeType":"1395","messageId":"1204","endLine":159,"endColumn":69},{"ruleId":"1393","severity":1,"message":"1394","line":168,"column":57,"nodeType":"1395","messageId":"1204","endLine":168,"endColumn":69},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1449","line":2,"column":9,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":19},{"ruleId":"1393","severity":1,"message":"1394","line":19,"column":13,"nodeType":"1395","messageId":"1204","endLine":19,"endColumn":25},{"ruleId":"1393","severity":1,"message":"1394","line":52,"column":13,"nodeType":"1395","messageId":"1204","endLine":52,"endColumn":25},{"ruleId":"1393","severity":1,"message":"1394","line":63,"column":13,"nodeType":"1395","messageId":"1204","endLine":63,"endColumn":25},{"ruleId":"1213","severity":1,"message":"1214","line":89,"column":47,"nodeType":"1215","messageId":"1216","endLine":89,"endColumn":49},{"ruleId":"1213","severity":1,"message":"1214","line":102,"column":50,"nodeType":"1215","messageId":"1216","endLine":102,"endColumn":52},{"ruleId":"1213","severity":1,"message":"1214","line":114,"column":43,"nodeType":"1215","messageId":"1216","endLine":114,"endColumn":45},{"ruleId":"1201","severity":1,"message":"1202","line":115,"column":40,"nodeType":"1203","messageId":"1204","endLine":115,"endColumn":42},{"ruleId":"1213","severity":1,"message":"1214","line":119,"column":45,"nodeType":"1215","messageId":"1216","endLine":119,"endColumn":47},{"ruleId":"1201","severity":1,"message":"1202","line":120,"column":41,"nodeType":"1203","messageId":"1204","endLine":120,"endColumn":43},{"ruleId":"1242","severity":1,"message":"1469","line":135,"column":7,"nodeType":"1245","endLine":135,"endColumn":23,"suggestions":"1470"},{"ruleId":"1187","severity":1,"message":"1208","line":1,"column":27,"nodeType":"1189","messageId":"1190","endLine":1,"endColumn":33},{"ruleId":"1187","severity":1,"message":"1449","line":2,"column":9,"nodeType":"1189","messageId":"1190","endLine":2,"endColumn":19},{"ruleId":"1187","severity":1,"message":"1286","line":4,"column":9,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":28},{"ruleId":"1187","severity":1,"message":"1285","line":4,"column":29,"nodeType":"1189","messageId":"1190","endLine":4,"endColumn":41},{"ruleId":"1201","severity":1,"message":"1202","line":63,"column":46,"nodeType":"1203","messageId":"1204","endLine":63,"endColumn":48},{"ruleId":"1201","severity":1,"message":"1202","line":67,"column":43,"nodeType":"1203","messageId":"1204","endLine":67,"endColumn":45},{"ruleId":"1201","severity":1,"message":"1202","line":84,"column":43,"nodeType":"1203","messageId":"1204","endLine":84,"endColumn":45},{"ruleId":"1201","severity":1,"message":"1202","line":84,"column":90,"nodeType":"1203","messageId":"1204","endLine":84,"endColumn":92},{"ruleId":"1201","severity":1,"message":"1202","line":99,"column":60,"nodeType":"1203","messageId":"1204","endLine":99,"endColumn":62},{"ruleId":"1242","severity":1,"message":"1471","line":117,"column":7,"nodeType":"1245","endLine":117,"endColumn":16,"suggestions":"1472"},{"ruleId":"1242","severity":1,"message":"1473","line":128,"column":7,"nodeType":"1245","endLine":128,"endColumn":19,"suggestions":"1474"},{"ruleId":"1242","severity":1,"message":"1475","line":133,"column":7,"nodeType":"1245","endLine":133,"endColumn":21,"suggestions":"1476"},{"ruleId":"1201","severity":1,"message":"1202","line":143,"column":30,"nodeType":"1203","messageId":"1204","endLine":143,"endColumn":32},{"ruleId":"1201","severity":1,"message":"1202","line":143,"column":64,"nodeType":"1203","messageId":"1204","endLine":143,"endColumn":66},{"ruleId":"1201","severity":1,"message":"1202","line":147,"column":33,"nodeType":"1203","messageId":"1204","endLine":147,"endColumn":35},{"ruleId":"1201","severity":1,"message":"1202","line":147,"column":70,"nodeType":"1203","messageId":"1204","endLine":147,"endColumn":72},{"ruleId":"1201","severity":1,"message":"1202","line":151,"column":26,"nodeType":"1203","messageId":"1204","endLine":151,"endColumn":28},{"ruleId":"1201","severity":1,"message":"1202","line":151,"column":63,"nodeType":"1203","messageId":"1204","endLine":151,"endColumn":65},{"ruleId":"1201","severity":1,"message":"1202","line":162,"column":56,"nodeType":"1203","messageId":"1204","endLine":162,"endColumn":58},{"ruleId":"1201","severity":1,"message":"1202","line":162,"column":101,"nodeType":"1203","messageId":"1204","endLine":162,"endColumn":103},{"ruleId":"1201","severity":1,"message":"1202","line":174,"column":38,"nodeType":"1203","messageId":"1204","endLine":174,"endColumn":40},{"ruleId":"1201","severity":1,"message":"1202","line":174,"column":80,"nodeType":"1203","messageId":"1204","endLine":174,"endColumn":82},{"ruleId":"1201","severity":1,"message":"1202","line":178,"column":26,"nodeType":"1203","messageId":"1204","endLine":178,"endColumn":28},{"ruleId":"1187","severity":1,"message":"1477","line":8,"column":12,"nodeType":"1189","messageId":"1190","endLine":8,"endColumn":20},{"ruleId":"1242","severity":1,"message":"1478","line":38,"column":7,"nodeType":"1245","endLine":38,"endColumn":30,"suggestions":"1479"},"no-unused-vars","'qs' is defined but never used.","Identifier","unusedVar","'router' is assigned a value but never used.","'data' is assigned a value but never used.","'Component' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'call' is defined but never used.","'take' is defined but never used.","'fork' is defined but never used.","'getYAMLJS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'useRef' is defined but never used.","'Select' is defined but never used.","'Radio' is defined but never used.","'Space' is defined but never used.","'form' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'_getdeployplancluster' is defined but never used.","'showCluster' is assigned a value but never used.","no-native-reassign",["1480"],"no-negated-in-lhs",["1481"],["1480"],["1481"],"'useContext' is defined but never used.","'Breadcrumb' is defined but never used.","'Drawer' is defined but never used.","'Tooltip' is defined but never used.","'Row' is defined but never used.","'message' is defined but never used.","'HomeOutlined' is defined but never used.","'EditTwoTone' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'menuTitle' is assigned a value but never used.","'visible' is assigned a value but never used.","'suggestValue' is assigned a value but never used.","'pathname' is assigned a value but never used.","'boxheight' is assigned a value but never used.","'onClose' is assigned a value but never used.","'onChange' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["1482"],"'componentWillUnmount' is defined but never used.","React Hook useEffect contains a call to 'setMenuTitle'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props] as a second argument to the useEffect Hook.",["1483"],"'obj' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'res' is assigned a value but never used.",["1480"],["1481"],"'Option' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'_feishus' is assigned a value but never used.","'_emails' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'formEmail', 'formFeishu', and 'initForm'. Either include them or remove the dependency array.",["1484"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["1480"],["1481"],"'Route' is defined but never used.",["1480"],["1481"],"'_deletepipeline' is defined but never used.","'currentNode' is assigned a value but never used.","'Table' is defined but never used.","'RedEnvelopeTwoTone' is defined but never used.","'productname' is assigned a value but never used.","'setProductname' is assigned a value but never used.","'params' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDetail'. Either include it or remove the dependency array.",["1485"],"'onReset' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'initForm'. Either include it or remove the dependency array.",["1486"],"'Menu' is defined but never used.","'Dropdown' is defined but never used.","'PlusCircleTwoTone' is defined but never used.","'PlusOutlined' is defined but never used.","'MinusCircleOutlined' is defined but never used.","'showJava' is assigned a value but never used.","'showNode' is assigned a value but never used.",["1487"],["1488"],"'Redirect' is defined but never used.",["1480"],["1481"],["1480"],["1481"],["1480"],["1481"],["1480"],["1481"],"'StarOutlined' is defined but never used.","'SortAscendingOutlined' is defined but never used.","'Panel' is assigned a value but never used.",["1480"],["1481"],["1480"],["1481"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'getHistoryList'. Either include it or remove the dependency array.",["1489"],"'thunk' is defined but never used.",["1480"],["1481"],["1480"],["1481"],"'Col' is defined but never used.","'_restartpod' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'arr' is assigned a value but never used.","'useState' is defined but never used.",["1480"],["1481"],"'changeNowWatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form', 'nowTextAreaValue', and 'props.nowWatchData'. Either include them or remove the dependency array. You can also do a functional update 'setNowTextAreaValue(n => ...)' if you only need 'nowTextAreaValue' in the 'setNowTextAreaValue' call.",["1490"],["1491"],"'lineArr' is assigned a value but never used.","'textPipeline' is assigned a value but never used.","'textGit' is assigned a value but never used.","'rowArr' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\<.","unnecessaryEscape",["1492","1493"],"Unnecessary escape character: \\>.",["1494","1495"],"React Hook useEffect has missing dependencies: 'makeCode' and 'makeLine'. Either include them or remove the dependency array.",["1496"],["1480"],["1481"],"'Tag' is defined but never used.","'RangePicker' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'envName'. Either include it or remove the dependency array.",["1497"],"React Hook useEffect has a missing dependency: 'projectname'. Either include it or remove the dependency array.",["1498"],"'Descriptions' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["1499"],["1480"],["1481"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useEffect' is defined but never used.","'Popover' is defined but never used.","'PlusCircleOutlined' is defined but never used.","'ExclamationCircleOutlined' is defined but never used.","'_getauthInfo' is defined but never used.","'_getkubernetesresource' is defined but never used.","'configmaplist' is assigned a value but never used.","'setConfigmaplist' is assigned a value but never used.","'doseacher' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getClusterlist'. Either include it or remove the dependency array.",["1500"],"'updatedeploy' is assigned a value but never used.","'setupdatedeploy' is assigned a value but never used.","'deploy' is assigned a value but never used.",["1501"],"'Spin' is defined but never used.","'BreadNav' is defined but never used.","'DeleteOutlined' is defined but never used.","'EditOutlined' is defined but never used.","'detaildata' is assigned a value but never used.","'columns' is assigned a value but never used.","'showedit' is assigned a value but never used.","'setshowedit' is assigned a value but never used.","'obj2' is assigned a value but never used.",["1502"],"React Hook useEffect has missing dependencies: 'codevalue' and 'instance'. Either include them or remove the dependency array.",["1503"],"React Hook useEffect has missing dependencies: 'getData' and 'props'. Either include them or remove the dependency array.",["1504"],"React Hook useEffect has a missing dependency: 'addhandleCancel'. Either include it or remove the dependency array.",["1505"],"react/jsx-pascal-case","Imported JSX component _CodeMirror must be in PascalCase or SCREAMING_SNAKE_CASE","no-dupe-keys","Duplicate key 'filterSearch'.","ObjectExpression","'setHistoryspinning' is assigned a value but never used.","'filterdata' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getlist'. Either include it or remove the dependency array.",["1506"],"'editref' is assigned a value but never used.","'_getdeploylist' is defined but never used.","'groupfilterdata' is assigned a value but never used.","'setParams' is assigned a value but never used.",["1507"],"'_configurationdelete' is defined but never used.",["1508"],["1509"],["1510"],["1511"],["1480"],["1481"],["1512"],["1513"],"'TabPane' is assigned a value but never used.","'instancetypelist' is assigned a value but never used.","'setInstancetypelist' is assigned a value but never used.","'dbtypelist' is assigned a value but never used.","'setDbtypelist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["1514"],["1515"],"'dbtypeOnchange' is assigned a value but never used.",["1480"],["1481"],["1480"],["1481"],["1480"],["1481"],"'ArrowDownOutlined' is defined but never used.","'CloseOutlined' is defined but never used.","'RedditCircleFilled' is defined but never used.","'_getschema' is defined but never used.","React Hook useEffect has missing dependencies: 'form' and 'getsqlfile'. Either include them or remove the dependency array.",["1516"],"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["1517"],"React Hook useEffect has missing dependencies: 'envValue', 'form', and 'getmodulelist'. Either include them or remove the dependency array.",["1518"],"React Hook useEffect has missing dependencies: 'form' and 'getsqltype'. Either include them or remove the dependency array.",["1519"],["1520"],"React Hook useEffect has missing dependencies: 'form' and 'nameValue'. Either include them or remove the dependency array.",["1521"],"React Hook useEffect has a missing dependency: 'getgitsqlcontent'. Either include it or remove the dependency array.",["1522"],["1480"],["1481"],"'Switch' is defined but never used.","'withRouter' is defined but never used.","'setStatement' is assigned a value but never used.","'selectionValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.height'. Either include it or remove the dependency array.",["1523"],"React Hook useEffect has missing dependencies: 'instance' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1524"],["1480"],["1481"],["1480"],["1481"],"'notification' is defined but never used.",["1480"],["1481"],"React Hook useEffect has missing dependencies: 'form', 'props.addType', and 'props.instancerecord'. Either include them or remove the dependency array.",["1525"],"React Hook useEffect has a missing dependency: 'getDbinstancequery'. Either include it or remove the dependency array.",["1526"],"React Hook useEffect has missing dependencies: 'getcomparedata' and 'props.dbcolumns'. Either include them or remove the dependency array.",["1527"],"React Hook useEffect has missing dependencies: 'props.data.db' and 'props.data.table'. Either include them or remove the dependency array.",["1528"],"React Hook useEffect has missing dependencies: 'form', 'getinstancelist', and 'projectEnv'. Either include them or remove the dependency array.",["1529"],"React Hook useEffect has missing dependencies: 'formbase', 'getinstancelist', and 'project'. Either include them or remove the dependency array.",["1530"],"React Hook useEffect has missing dependencies: 'formbase' and 'getinstanceschema'. Either include them or remove the dependency array.",["1531"],"'showsave' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form', 'props.instancerecord.name', and 'props.instancerecord.status'. Either include them or remove the dependency array.",["1532"],"no-global-assign","no-unsafe-negation",{"desc":"1533","fix":"1534"},{"desc":"1535","fix":"1536"},{"desc":"1537","fix":"1538"},{"desc":"1539","fix":"1540"},{"desc":"1541","fix":"1542"},{"desc":"1543","fix":"1544"},{"desc":"1537","fix":"1545"},{"desc":"1546","fix":"1547"},{"desc":"1548","fix":"1549"},{"desc":"1550","fix":"1551"},{"messageId":"1552","fix":"1553","desc":"1554"},{"messageId":"1555","fix":"1556","desc":"1557"},{"messageId":"1552","fix":"1558","desc":"1554"},{"messageId":"1555","fix":"1559","desc":"1557"},{"desc":"1560","fix":"1561"},{"desc":"1562","fix":"1563"},{"desc":"1562","fix":"1564"},{"desc":"1565","fix":"1566"},{"desc":"1567","fix":"1568"},{"desc":"1567","fix":"1569"},{"desc":"1567","fix":"1570"},{"desc":"1571","fix":"1572"},{"desc":"1573","fix":"1574"},{"desc":"1575","fix":"1576"},{"desc":"1577","fix":"1578"},{"desc":"1579","fix":"1580"},{"desc":"1567","fix":"1581"},{"desc":"1571","fix":"1582"},{"desc":"1573","fix":"1583"},{"desc":"1575","fix":"1584"},{"desc":"1533","fix":"1585"},{"desc":"1535","fix":"1586"},{"desc":"1587","fix":"1588"},{"desc":"1533","fix":"1589"},{"desc":"1590","fix":"1591"},{"desc":"1592","fix":"1593"},{"desc":"1594","fix":"1595"},{"desc":"1596","fix":"1597"},{"desc":"1598","fix":"1599"},{"desc":"1600","fix":"1601"},{"desc":"1602","fix":"1603"},{"desc":"1604","fix":"1605"},{"desc":"1606","fix":"1607"},{"desc":"1608","fix":"1609"},{"desc":"1610","fix":"1611"},{"desc":"1612","fix":"1613"},{"desc":"1614","fix":"1615"},{"desc":"1616","fix":"1617"},{"desc":"1618","fix":"1619"},{"desc":"1620","fix":"1621"},{"desc":"1622","fix":"1623"},"Update the dependencies array to be: [props]",{"range":"1624","text":"1625"},"Add dependencies array: [props]",{"range":"1626","text":"1627"},"Update the dependencies array to be: [formEmail, formFeishu, initForm, props.editdrawvisible]",{"range":"1628","text":"1629"},"Update the dependencies array to be: [getDetail]",{"range":"1630","text":"1631"},"Update the dependencies array to be: [initForm, props.addCoderawvisible]",{"range":"1632","text":"1633"},"Update the dependencies array to be: [initForm, props.editdrawvisible]",{"range":"1634","text":"1635"},{"range":"1636","text":"1629"},"Update the dependencies array to be: [getHistoryList]",{"range":"1637","text":"1638"},"Update the dependencies array to be: [form, nowTextAreaValue, props.modalVisible, props.nowWatchData]",{"range":"1639","text":"1640"},"Update the dependencies array to be: [props, props.logDrawervisible]",{"range":"1641","text":"1642"},"removeEscape",{"range":"1643","text":"1644"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1645","text":"1646"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1647","text":"1644"},{"range":"1648","text":"1646"},"Update the dependencies array to be: [makeCode, makeLine, props.code]",{"range":"1649","text":"1650"},"Update the dependencies array to be: [envName, projectname]",{"range":"1651","text":"1652"},{"range":"1653","text":"1652"},"Update the dependencies array to be: [getData, props.synVisible]",{"range":"1654","text":"1655"},"Update the dependencies array to be: [getClusterlist]",{"range":"1656","text":"1657"},{"range":"1658","text":"1657"},{"range":"1659","text":"1657"},"Update the dependencies array to be: [codevalue, instance, isModalVisible]",{"range":"1660","text":"1661"},"Update the dependencies array to be: [getData, props, props.configList]",{"range":"1662","text":"1663"},"Update the dependencies array to be: [addhandleCancel, props.addfalse]",{"range":"1664","text":"1665"},"Update the dependencies array to be: [getlist, props.deploy]",{"range":"1666","text":"1667"},"Update the dependencies array to be: [getData, props, props.deployData]",{"range":"1668","text":"1669"},{"range":"1670","text":"1657"},{"range":"1671","text":"1661"},{"range":"1672","text":"1663"},{"range":"1673","text":"1665"},{"range":"1674","text":"1625"},{"range":"1675","text":"1627"},"Update the dependencies array to be: [params]",{"range":"1676","text":"1677"},{"range":"1678","text":"1625"},"Update the dependencies array to be: [form, getsqlfile, versionValue]",{"range":"1679","text":"1680"},"Update the dependencies array to be: [form, instanceValue]",{"range":"1681","text":"1682"},"Update the dependencies array to be: [envValue, form, getmodulelist, nameValue]",{"range":"1683","text":"1684"},"Update the dependencies array to be: [form, getsqltype, moduleValue]",{"range":"1685","text":"1686"},"Update the dependencies array to be: [form, getsqltype, typeValue]",{"range":"1687","text":"1688"},"Update the dependencies array to be: [envValue, form, nameValue]",{"range":"1689","text":"1690"},"Update the dependencies array to be: [getgitsqlcontent, sqlValue]",{"range":"1691","text":"1692"},"Update the dependencies array to be: [instance, props.height]",{"range":"1693","text":"1694"},"Update the dependencies array to be: [instance, props, props.sqlcontent]",{"range":"1695","text":"1696"},"Update the dependencies array to be: [form, props.addType, props.instancerecord, props.showaddinstance]",{"range":"1697","text":"1698"},"Update the dependencies array to be: [getDbinstancequery, props.showcontactproject]",{"range":"1699","text":"1700"},"Update the dependencies array to be: [getcomparedata, props.dbcolumns, props.showcompare]",{"range":"1701","text":"1702"},"Update the dependencies array to be: [props.data.db, props.data.table, props.showinfo]",{"range":"1703","text":"1704"},"Update the dependencies array to be: [form, getinstancelist, project, projectEnv]",{"range":"1705","text":"1706"},"Update the dependencies array to be: [formbase, getinstancelist, project, projectEnv]",{"range":"1707","text":"1708"},"Update the dependencies array to be: [formbase, getinstanceschema, instancename]",{"range":"1709","text":"1710"},"Update the dependencies array to be: [form, props.instancerecord.name, props.instancerecord.status, props.showaddinstance]",{"range":"1711","text":"1712"},[3394,3396],"[props]",[3814,3814],", [props]",[3861,3884],"[formEmail, formFeishu, initForm, props.editdrawvisible]",[4551,4553],"[getDetail]",[1356,1381],"[initForm, props.addCoderawvisible]",[3510,3533],"[initForm, props.editdrawvisible]",[6904,6927],[3563,3565],"[getHistoryList]",[763,783],"[form, nowTextAreaValue, props.modalVisible, props.nowWatchData]",[859,883],"[props, props.logDrawervisible]",[979,980],"",[979,979],"\\",[1032,1033],[1032,1032],[2691,2703],"[makeCode, makeLine, props.code]",[3704,3717],"[envName, projectname]",[3834,3843],[4273,4291],"[getData, props.synVisible]",[3695,3697],"[getClusterlist]",[3714,3716],[12411,12413],[12538,12554],"[codevalue, instance, isModalVisible]",[12631,12649],"[getData, props, props.configList]",[12750,12766],"[addhandleCancel, props.addfalse]",[8795,8809],"[getlist, props.deploy]",[9596,9614],"[getData, props, props.deployData]",[14027,14029],[14154,14170],[14247,14265],[14366,14382],[3490,3492],[3910,3910],[7355,7357],"[params]",[8305,8307],[10630,10644],"[form, getsqlfile, versionValue]",[10860,10875],"[form, instanceValue]",[11383,11394],"[envValue, form, getmodulelist, nameValue]",[11712,11725],"[form, getsqltype, moduleValue]",[12015,12026],"[form, getsqltype, typeValue]",[12275,12285],"[envValue, form, nameValue]",[12771,12781],"[getgitsqlcontent, sqlValue]",[1387,1397],"[instance, props.height]",[1545,1563],"[instance, props, props.sqlcontent]",[2336,2359],"[form, props.addType, props.instancerecord, props.showaddinstance]",[2607,2633],"[getDbinstancequery, props.showcontactproject]",[3268,3287],"[getcomparedata, props.dbcolumns, props.showcompare]",[4452,4468],"[props.data.db, props.data.table, props.showinfo]",[3880,3889],"[form, getinstancelist, project, projectEnv]",[4243,4255],"[formbase, getinstancelist, project, projectEnv]",[4431,4445],"[formbase, getinstanceschema, instancename]",[1307,1330],"[form, props.instancerecord.name, props.instancerecord.status, props.showaddinstance]"]